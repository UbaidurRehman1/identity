{"version":3,"sources":["containers/appBar/AppNavBar.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","requestHandler/RequestHandler.js","store/actions/Form.js","store/actions/ActionTypes.js","components/preview/FormPreview.js","components/modal/DialogView.js","containers/Forms/Forms.js","containers/preview/Preview.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","Layout","props","Fragment","children","formControl","margin","minWidth","SelectInput","formType","required","id","disabled","label","value","options","handler","FormControl","variant","key","InputLabel","Select","native","labelId","name","onChange","event","aria-label","map","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","alignItems","justifyContent","display","flexDirection","marginTop","width","selectEmpty","Form","form","fields","Object","keys","field","type","TextField","error","validation","isTouched","isValid","hidden","PERSONAL_INFO","firstName","minLength","maxLength","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","RequestResolver","axios","create","baseURL","nextForm","info","formId","formUpdating","table","FormPreview","subForm","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","DialogView","open","modalHandler","saveFormHandler","descriptionElementRef","React","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Button","onClick","backButton","instructions","marginBottom","paper","padding","marginLeft","height","stepProgress","Forms","useState","setFormType","steps","filter","dispatch","useDispatch","submitFormInfo","useCallback","put","then","response","console","log","catch","post","data","updateForm","useSelector","state","isUpdating","IDENTITY_FORM","identityForm","setIdentityForm","isNextButtonDisable","setNextButtonDisable","isModalOpen","setModalOpen","getFormData","_","clone","formData","hasOwnProperty","setNextButtonEnable","toggleInputsDisabled","isDisable","newIdentityForm","checkValidation","String","length","Stepper","activeStep","alternativeLabel","Step","StepLabel","elevation","inputType","fieldName","target","undefined","prevActiveStep","clearFormData","flexWrap","Preview","App","routes","fallback","path","exact","Boolean","window","location","hostname","match","store","initialState","isCompleted","NextFormReducer","action","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.599a0ecc.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/create\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"#\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Form Preview</MenuItem>\n                    </Link>\n                    <Link to=\"#\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Auth</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    }\n}));\n\nconst SelectInput = ({formType, required, id, disabled, label, value, options, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={required}\n            variant=\"outlined\"\n            className={classes.formControl}\n            key={id}\n            disabled={disabled}\n        >\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                required={required}\n                native\n                labelId={id}\n                key={id}\n                id={id}\n                name={id}\n                value={value}\n                label={label}\n                onChange={(event) => handler(event, formType, \"input\")}\n            >\n                <option key={\"none\"} aria-label=\"None\" value=\"\"/>\n                {\n                    options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Check = ({id, label, value, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={id}\n            label={label}\n            labelPlacement={\"end\"}\n            control={\n                <Checkbox\n                    key={id}\n                    value={value}\n                    checked={value}\n                    onChange={event => handler(event, formType, \"check\")}\n                    id={id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from \"../inputs/Select\";\nimport Check from \"../inputs/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).map(key => {\n        form[key]['id'] = key\n        return form[key];\n    });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case \"text\":\n                            return (\n                                <TextField\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"select\":\n                            return (\n                                <SelectInput\n                                    required={field.validation.required}\n                                    disabled={field.disabled}\n                                    value={field.value}\n                                    label={field.label}\n                                    id={field.id}\n                                    key={field.id}\n                                    options={field.options}\n                                    formType={formType}\n                                    handler={handler}\n                                />\n                            );\n                        case \"check\":\n                            return (\n                                <Check\n                                    key={field.id}\n                                    handler={handler}\n                                    formType={formType}\n                                    id={field.id}\n                                    label={field.label}\n                                    value={field.value}\n                                />\n                            )\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: false,\n            minLength: 0,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 2,\n            maxLength: 2,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 11,\n            maxLength: 16,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        disabled: true,\n        value: \"\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Are you own a house?\"\n    },\n    houseNumber: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"houseNumber\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\n\nexport const updateForm = (form, id) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(response => {\n                    console.log(response);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    console.log(response);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const haltForm = (error) => {\n    return {\n        type: actionTypes.HALT_FORM,\n        info: null,\n        error: error\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const BACK_FORM = \"BACK_FORM\";\nexport const HALT_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\nexport const SAVE_FORM = \"SAVE_FORM\";\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    }\n}));\n\n\nconst FormPreview = ({form}) => {\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {\n                Object.keys(form).map(key => {\n                    const subForm = form[key];\n                    return (\n                        <>\n                            <h1>{key}</h1>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell width='20%'><strong>Field Name</strong></TableCell>\n                                            <TableCell width='40%'><strong>Value</strong></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            Object.keys(subForm).map(key => {\n                                                const field = subForm[key];\n                                                return (\n                                                    <TableRow key={field.label}>\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {field.label}\n                                                        </TableCell>\n                                                        <TableCell>{field.value}</TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </>)\n                })\n            }\n        </>\n\n    );\n}\n\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from \"../preview/FormPreview\";\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={saveFormHandler} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {useCallback, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"../../store/actions/Form\";\nimport DialogView from \"../../components/modal/DialogView\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    },\n    stepProgress: {\n        color: \"red\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const steps = getSteps();\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id) => dispatch(updateForm(info, id)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const isFormUpdating = useSelector(state => state.form.isUpdating);\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            for (let key in subForm) {\n                if (subForm.hasOwnProperty(key)) {\n                    const value = subForm[key];\n                    if (!value.disabled) {\n                        info[key] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = false;\n                        field.validation.isTouched = false;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        formData['useId'] = 1234;\n        submitFormInfo(formData, formId);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        formData['useId'] = 1234;\n        submitFormInfo(formData, formId);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n\n    const handleReset = () => {\n        setFormType(formTypes[0]);\n    };\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        console.log('New Identity Form: => ', newIdentityForm);\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id;\n        if (fieldName === undefined) {\n            fieldName = event.target.name;\n        }\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            if (event.target.checked) {\n                toggleInputsDisabled(formType, false);\n            } else {\n                toggleInputsDisabled(formType, true);\n            }\n        } else {\n            const field = subForm[fieldName];\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n            field.validation.isValid = checkValidation(field.value, field.validation);\n        }\n        //validation checking\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true)\n        }\n        //validation checking end\n        setIdentityForm(newIdentityForm);\n    }\n\n    const checkValidation = (value, validation) => {\n        value = String(value);\n        return (value.length >= validation.minLength && value.length <= validation.maxLength);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                console.log(\"Field: -> \", field);\n                if (!field.disabled && !field.validation.isValid) {\n                    console.log('Form is not valid -> returning false');\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={formType.step} alternativeLabel>\n                {steps.map((label) => (\n                    <Step\n                        key={label}\n                        className={classes.stepProgress}\n                    >\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {formType.step === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>All steps completed</Typography>\n                        <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                        </Paper>\n                        <div>\n                            <Button\n                                disabled={formType.step === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            {\n                                formType.step !== steps.length - 1 ?\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                                            disabled={isNextButtonDisable}>\n                                        Next\n                                    </Button> :\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)}\n                                            disabled={isNextButtonDisable}>\n                                        Preview\n                                    </Button>\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n            <DialogView form={identityForm} open={isModalOpen} modalHandler={() => setModalOpen(false)} saveFormHandler={handleSaveForm}/>\n        </div>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    },\n}));\n\nconst Preview = () => {\n    const classes = useStyles();\n    const form = useSelector(state => state.form.form);\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <FormPreview form={form}/>\n        </Paper>\n    );\n}\n\nexport default Preview;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <Route path=\"/identity/create\" exact component={Forms}/>\n                <Route path=\"/identity/preview\" exact component={Preview}/>\n                <Redirect to=\"/identity/create\"/>\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                {routes}\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.HALT_FORM:\n            return {...state, error: action.error}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n"],"sourceRoot":""}