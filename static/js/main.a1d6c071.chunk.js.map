{"version":3,"sources":["containers/appBar/AppNavBar.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","requestHandler/RequestHandler.js","store/actions/Login.js","store/actions/ActionTypes.js","store/actions/Form.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/introduction/Introduction.js","components/home/Home.js","components/login/Login.js","store/actions/SignUp.js","components/signup/SignUp.js","components/welcome/Welcome.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js","store/reducers/AuthReducer.js","store/reducers/LoginReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","Layout","props","Fragment","children","formControl","margin","minWidth","SelectInput","formType","required","id","disabled","label","value","options","handler","FormControl","variant","key","InputLabel","Select","native","labelId","name","onChange","event","aria-label","map","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","alignItems","justifyContent","display","flexDirection","marginTop","width","selectEmpty","Form","form","fields","Object","keys","filter","field","type","TextField","error","validation","isTouched","isValid","helperText","hidden","PERSONAL_INFO","firstName","minLength","maxLength","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","RequestResolver","axios","create","baseURL","LoginStart","LoginSuccess","username","token","entityId","formInfo","LoginError","_updateUserInfo","formId","user","dispatch","isFormCompleted","isFormTouched","put","userId","then","UpdateUserInfo","catch","console","log","nextForm","info","formUpdating","PopulateFormHandler","get","response","PopulateForm","data","isCompleted","table","FormPreview","subForm","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","scope","DialogView","open","modalHandler","saveFormHandler","descriptionElementRef","React","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","useSelector","state","login","Provider","backButton","instructions","marginBottom","paper","padding","marginLeft","height","stepProgress","Forms","useState","setFormType","isSubFormComplete","setSubFormComplete","steps","useContext","useDispatch","submitFormInfo","useCallback","post","updateForm","IDENTITY_FORM","identityForm","setIdentityForm","isNextButtonDisable","setNextButtonDisable","isModalOpen","setModalOpen","getFormData","_","clone","formData","subFormTypes","slice","subKey","includes","hasOwnProperty","newIdentityForm","subRemoteForm","setNextButtonEnable","toggleInputsDisabled","isDisable","checkValidation","String","length","Stepper","activeStep","alternativeLabel","Step","StepLabel","elevation","inputType","fieldName","target","undefined","prevActiveStep","clearFormData","flexWrap","Preview","GuardedRoute","Component","rest","render","avatar","backgroundColor","palette","secondary","main","submit","Introduction","tryLoginHandler","localStorage","getItem","infoObject","Container","CssBaseline","Grid","container","item","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","size","Home","direction","justify","minHeight","xs","xl","sm","Copyright","align","href","Date","getFullYear","Login","setUsername","password","setPassword","loginHandler","idToken","localId","expiryTime","expiresIn","setItem","LoginHandler","isLoginStart","loginStart","noValidate","onSubmit","preventDefault","fullWidth","autoComplete","autoFocus","CircularProgress","Box","mt","storeToken","timeout","setTimeout","removeItem","SignUpStart","payload","SignUpFinished","ErrorInSignup","SignUp","handleSignup","userData","message","signup","auth","isSignUpLoading","SIGNUP_FORM","onChangeHandler","ket","email","setForm","fieldId","newForm","validateFieldLength","validateEmail","validatePassword","emailField","test","toLowerCase","passwordField","pw","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","disableSpacing","App","routes","fallback","path","exact","Boolean","window","location","hostname","match","store","initialState","isUpdating","NextFormReducer","isError","AuthReducer","loginError","LoginReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1d6c071.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/create\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"#\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Form Preview</MenuItem>\n                    </Link>\n                    <Link to=\"#\" style={{ textDecoration: 'none', outline: \"none\" }}>\n                        <MenuItem style={{color: \"white\"}}>Auth</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    }\n}));\n\nconst SelectInput = ({formType, required, id, disabled, label, value, options, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={required}\n            variant=\"outlined\"\n            className={classes.formControl}\n            key={id}\n            disabled={disabled}\n        >\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                required={required}\n                native\n                labelId={id}\n                key={id}\n                id={id}\n                name={id}\n                value={value}\n                label={label}\n                onChange={(event) => handler(event, formType, \"input\")}\n            >\n                <option key={\"none\"} aria-label=\"None\" value=\"\"/>\n                {\n                    options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Check = ({id, label, value, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={id}\n            label={label}\n            labelPlacement={\"end\"}\n            control={\n                <Checkbox\n                    key={id}\n                    value={value}\n                    checked={value}\n                    onChange={event => handler(event, formType, \"check\")}\n                    id={id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from \"../inputs/Select\";\nimport Check from \"../inputs/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case \"text\":\n                            return (\n                                <TextField\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"number\":\n                            return (\n                                <TextField\n                                    type={\"number\"}\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"select\":\n                            return (\n                                <SelectInput\n                                    required={field.validation.required}\n                                    disabled={field.disabled}\n                                    value={field.value}\n                                    label={field.label}\n                                    id={field.id}\n                                    key={field.id}\n                                    options={field.options}\n                                    formType={formType}\n                                    handler={handler}\n                                />\n                            );\n                        case \"check\":\n                            return (\n                                <Check\n                                    key={field.id}\n                                    handler={handler}\n                                    formType={formType}\n                                    id={field.id}\n                                    label={field.label}\n                                    value={field.value}\n                                />\n                            )\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            minLength: 0,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 2,\n            maxLength: 2,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 11,\n            maxLength: 16,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 3,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 3,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        disabled: true,\n        value: \"\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Are you own a house?\"\n    },\n    houseNumber: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import axios from 'axios'\nimport * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {PopulateFormHandler} from \"./Form\";\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(LoginStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, {\"email\": username, \"password\": password})\n            .then(response => {\n                console.log(response);\n                const token = response.data.idToken;\n                const userId = response.data.localId;\n                const expiryTime = response.data.expiresIn;\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n                localStorage.setItem('expiryTime', expiryTime);\n                RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                    .then(response => {\n                        console.log(response);\n                        const [entityId] = Object.keys(response.data);\n                        const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n                        console.log(infoObject);\n                        dispatch(LoginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n                    }).catch(error => {\n                        console.log(error);\n                        console.log(error);\n                });\n            })\n            .catch(error => {\n                dispatch(LoginError())\n                console.log(error);\n            });\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => {\n                    console.log(response);\n                    const [entityId] = Object.keys(response.data);\n                    console.log(entityId);\n                    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n                    console.log(infoObject);\n                    dispatch(LoginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n                    const formId = infoObject.formInfo.formId;\n                    if (formId) {\n                        dispatch(PopulateFormHandler(formId))\n                    }\n                }).catch(error => {\n                console.log(error);\n                dispatch(LoginError());\n            });\n        }\n    }\n}\n\nconst LoginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\n\nconst LoginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: actionTypes.UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nconst LoginError = () => {\n    return {\n        type: actionTypes.LOGIN_ERROR,\n    }\n}\n\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const HALT_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\nexport const POPULATE_FORM = \"POPULATE_FORM\";\n\n\nexport const SIGNUP = \"SIGNUP\";\nexport const SIGNUP_START = \"SIGNUP_START\";\nexport const SIGNUP_FINISHED = \"SIGNUP_FINISHED\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR  = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGIN_TRY = \"LOGIN_TRY\";\n\nexport const UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {UpdateUserInfo} from \"./Login\";\n\nconst _updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    RequestResolver.put(`/users/${user.entityId}.json`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        console.log(error);\n    })\n}\n\nexport const updateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(response => {\n                    _updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    _updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const haltForm = (error) => {\n    return {\n        type: actionTypes.HALT_FORM,\n        info: null,\n        error: error\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        RequestResolver.get(`/identity/${formId}.json`)\n            .then(response => {\n                console.log(response);\n                dispatch(PopulateForm(response.data, formId));\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n}\n\nexport const PopulateForm = (form, formId) => {\n    return {\n        type: actionTypes.POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    table: {\n        minWidth: 650,\n    }\n}));\n\n\nconst FormPreview = ({form}) => {\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {\n                Object.keys(form).map(key => {\n                    const subForm = form[key];\n                    return (\n                        <>\n                            <h1>{key}</h1>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell width='20%'><strong>Field Name</strong></TableCell>\n                                            <TableCell width='40%'><strong>Value</strong></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {\n                                            Object.keys(subForm).map(key => {\n                                                const field = subForm[key];\n                                                return (\n                                                    <TableRow key={field.label}>\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {field.label}\n                                                        </TableCell>\n                                                        <TableCell>{field.value}</TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                        }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </>)\n                })\n            }\n        </>\n\n    );\n}\n\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from \"../preview/FormPreview\";\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={saveFormHandler} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    console.log('User Provider -> ', newUser);\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserProvider;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"../../store/actions/Form\";\nimport DialogView from \"../../components/modal/DialogView\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    },\n    stepProgress: {\n        color: \"red\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(updateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    // const isFormUpdating = useSelector(state => state.form.isUpdating);\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    useEffect(() => {\n        console.log(\"Use Effect of Forms.js formId ---> \", formId);\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                            console.log(subForm[field]);\n                            console.log(subRemoteForm[field])\n                        }\n                    }\n                }\n            }\n            console.log(\"Use Effect of Forms.js formId ---> \", newIdentityForm);\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n\n        }\n\n    }, [form]);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = false;\n                        field.validation.isTouched = false;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n\n    const handleReset = () => {\n        setFormType(formTypes[0]);\n    };\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        console.log('New Identity Form: => ', newIdentityForm);\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id;\n        if (fieldName === undefined) {\n            fieldName = event.target.name;\n        }\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            if (event.target.checked) {\n                toggleInputsDisabled(formType, false);\n            } else {\n                toggleInputsDisabled(formType, true);\n            }\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            const isValid  = checkValidation(field.value, field.validation);\n            field.validation.isValid = isValid;\n            if (!isValid) {\n                field.helperText = `Value should be in range [${field.validation.minLength} ${field.validation.maxLength}]`\n            }\n\n            if (field.id === 'age') {\n                if (field.value < 1 || field.value > 75) {\n                    field.validation.isValid = false;\n                    field.helperText = \"Value should be positive\";\n                }\n            }\n\n            switch (field.id) {\n                case 'metricMarks':\n                    if (!field.value.includes('%')) {\n                        field.helperText = \"% sign is missing\";\n                    }\n                    break;\n                case 'intermediateMarks':\n                    if (!field.value.includes('%')) {\n                        field.helperText = \"% sign is missing\";\n                    }\n                    break;\n                default:\n                    // do nothing;\n\n            }\n        }\n        //validation checking of whole subform\n        if (isValid(subForm)) {\n            setSubFormComplete(true);\n            setNextButtonDisable(false);\n        } else {\n            setSubFormComplete(false);\n            setNextButtonDisable(true)\n        }\n        //validation checking end\n        setIdentityForm(newIdentityForm);\n    }\n\n    const checkValidation = (value, validation) => {\n        value = String(value);\n        return (value.length >= validation.minLength && value.length <= validation.maxLength);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                console.log(\"Field: -> \", field);\n                if (!field.disabled && !field.validation.isValid) {\n                    console.log('Form is not valid -> returning false');\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={formType.step} alternativeLabel>\n                {steps.map((label) => (\n                    <Step\n                        key={label}\n                        className={classes.stepProgress}\n                    >\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {formType.step === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>All steps completed</Typography>\n                        <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                        </Paper>\n                        <div>\n                            <Button\n                                disabled={formType.step === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            {\n                                formType.step !== steps.length - 1 ?\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                                            disabled={isNextButtonDisable}>\n                                        Next\n                                    </Button> :\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)}\n                                            disabled={isNextButtonDisable}>\n                                        Preview\n                                    </Button>\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n            <DialogView form={identityForm} open={isModalOpen} modalHandler={() => setModalOpen(false)} saveFormHandler={handleSaveForm}/>\n        </div>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    },\n}));\n\nconst Preview = () => {\n    const classes = useStyles();\n    const form = useSelector(state => state.form.form);\n    return (\n        <Paper elevation={3} className={classes.root}>\n            <FormPreview form={form}/>\n        </Paper>\n    );\n}\n\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n\n    console.log(\"GaurdedRoute.js executing: user ----> \", user);\n\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\n\nexport default GuardedRoute;\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link, Redirect} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TryLoginHandler} from \"../../store/actions/Login\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\" />\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        Identity\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Sign In\n                                    </Button>\n                                </Link>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Introduction;\n","import React from \"react\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport Introduction from \"../introduction/Introduction\";\nimport {Grid} from \"@material-ui/core\";\n\n// const useStyles = makeStyles(theme => ({\n//     paper: {\n//         padding: theme.spacing(1),\n//         textAlign: \"center\",\n//         color: theme.palette.text.primary,\n//         background: theme.palette.grey,\n//         height: `calc(100vh -  11vh)`\n//\n//     }\n// }));\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: 'calc(100vh - 11vh)' }}\n        >\n\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n\n        </Grid>     );\n}\nexport default Home;\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LoginHandler} from \"../../store/actions/Login\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={(event) => login(event)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    {\n                        isLoginStart ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Log In\n                            </Button>\n\n                    }\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/identity/signup\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Don't have an account? Sign Up\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default Login;\n","import RequestResolver from \"../../requestHandler/RequestHandler\";\nimport axios from 'axios';\nimport * as actionTypes from './ActionTypes';\n\nexport const signup = (userData) => {\n    return dispatch => {\n        dispatch(SignUpStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, userData)\n            .then(response => {\n                console.log(response);\n                RequestResolver.post('/users.json', {username: userData.firstName + ' ' + userData.lastName, userId: response.data.localId})\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(SignUpFinished({...response.data, username: userData.firstName + ' ' + userData.lastName}))\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        dispatch(ErrorInSignup(error.message));\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(ErrorInSignup(error.message));\n            })\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: actionTypes.SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nexport const SignUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START,\n        payload: null\n    }\n}\n\nexport const SignUpFinished = (data) => {\n    return {\n        type: actionTypes.SIGNUP_FINISHED,\n        payload: data\n    }\n}\n\nexport const ErrorInSignup = (error) => {\n    return {\n        type: actionTypes.SIGNUP_ERROR,\n        payload: null,\n        error: error\n    }\n}\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signup} from \"../../store/actions/SignUp\";\n\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(signup(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            autoComplete: \"fname\",\n            name: \"firstName\",\n            variant: \"outlined\",\n            fullWidth: true,\n            id: \"firstName\",\n            key: \"firstName\",\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"First Name\"\n        },\n        lastName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            ket: \"lastName\",\n            name: \"lastName\",\n            autoComplete: \"lname\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Last Name\"\n        },\n        email: {\n            disabled: false,\n            value: \"\",\n            type: \"email\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            key: \"email\",\n            name: \"email\",\n            autoComplete: \"email\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Email Address\"\n        },\n        password: {\n            disabled: false,\n            value: \"\",\n            type: \"password\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            id: \"password\",\n            key: \"password\",\n            autoComplete: \"current-password\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Password\"\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n    }\n\n    const validateFieldLength = field => {\n        if (field.validation.isTouched) {\n            if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n                field.validation.isValid = false;\n                field.error = true;\n                field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n            } else {\n                field.error = false;\n                field.helperText = '';\n            }\n        }\n    }\n\n    const validateEmail = emailField => {\n        const email = emailField.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isValid = re.test(String(email).toLowerCase());\n        if (!isValid) {\n            emailField.validation.isValid = false;\n            emailField.error = true;\n            emailField.helperText = 'Invalid Email Address';\n        } else {\n            emailField.error = false;\n            emailField.helperText = '';\n        }\n\n    }\n\n    const validatePassword = passwordField => {\n        const pw = passwordField.value;\n        const isValid = /[A-Z]/.test(pw) &&\n            /[a-z]/.test(pw) &&\n            /[0-9]/.test(pw) &&\n            /[^A-Za-z0-9]/.test(pw) &&\n            pw.length > 4;\n        if (!isValid) {\n            passwordField.validation.isValid = false;\n            passwordField.error = true;\n            passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n        } else {\n            passwordField.error = false;\n            passwordField.helperText = '';\n        }\n\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        console.log('Submitting Form: -> ', formData);\n        handleSignup(formData);\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (\n                                        <Grid item xs={12} sm={6} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                } else {\n                                    return (\n                                        <Grid item xs={12} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                }\n                            })\n                        }\n                    </Grid>\n                    {\n                        isSignUpLoading ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign Up\n                            </Button>\n                    }\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Already have an account? Sign in\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default SignUp;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        maxWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo.formId);\n    const isFormCompleted = useSelector(state => state.login.formInfo.isFormCompleted);\n    const isFormTouched = useSelector(state => state.login.formInfo.isFormTouched);\n    const formInfoView = useRef();\n\n    //TODO Check out the flow and write down small chunks and do it in incremental style 23-Oct-2020\n\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = \"Welcome in Identity. Click below to start filling your Identity form\";\n        } else if (!isFormCompleted) {\n            info = \"You have not completed your Identity form yet. Kindly complete your form as soon as possible\";\n        } else if (isFormCompleted) {\n            info = \"Your Identity form is completed\";\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2} justify={\"flex-start\"} style={{marginTop: '8px'}}>\n                    <Grid item>\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        U\n                                    </Avatar>\n                                }\n                                action={\n                                    <IconButton aria-label=\"settings\">\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                }\n                                title= \"Welcome Back\"\n                                subheader={user.username}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/paella.jpg\"\n                                title=\"Paella dish\"\n                            />\n                            <CardContent>\n                                <Typography ref={formInfoView} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label=\"add to favorites\">\n                                    <FavoriteIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"share\">\n                                    <ShareIcon />\n                                </IconButton>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} justify={\"flex-start\"}>\n                    <Grid item>\n                        <Link to=\"/identity/create\" style={{textDecoration: 'none', outline: \"none\"}}>\n                            <Button size=\"small\" color=\"primary\">\n                                Click here to fill your identity form\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Welcome;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\nimport UserProvider from \"./providers/UserProvider\";\nimport GuardedRoute from \"./hoc/gaurdedRoute/GaurdedRoute\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./components/login/Login\";\nimport SignUp from \"./components/signup/SignUp\";\nimport Welcome from \"./components/welcome/Welcome\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path=\"/identity/create\" exact component={Forms} />\n                <GuardedRoute path=\"/identity/preview\" exact component={Preview} />\n                <GuardedRoute path=\"/identity/welcome\" exact component={Welcome} />\n                <Route path=\"/identity/signup\" exact component={SignUp}/>\n                <Route path=\"/identity/login\" exact component={Login}/>\n                <Route path=\"/identity\" exact component={Home}/>\n                {/*<Redirect to=\"/identity\"/>*/}\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AuthReducer from \"./store/reducers/AuthReducer\";\nimport LoginReducer from \"./store/reducers/LoginReducer\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer,\n        auth: AuthReducer,\n        login: LoginReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.HALT_FORM:\n            return {...state, error: action.error}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case actionTypes.POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: \"\",\n    isSignUpLoading: false,\n    timeout: null\n};\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case actionTypes.SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case actionTypes.SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case actionTypes.SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        default:\n            return state;\n    }\n}\n\nexport default AuthReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case actionTypes.LOGIN_SUCCESS:\n            console.log(action);\n            return {...state, isLogin: true, loginStart: false, loginError: false, username: action.username, token: action.token, id: action.id, entityId: action.entityId, formInfo: action.formInfo}\n        case actionTypes.LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case actionTypes.LOGOUT:\n            return {...state, isLogin: false, loginStart: false, loginError: false, username: null, token: null, formInfo: null}\n        case actionTypes.UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n"],"sourceRoot":""}