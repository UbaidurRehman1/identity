{"version":3,"sources":["containers/appBar/AppNavBar.js","requestHandler/RequestHandler.js","store/actions/Form.js","store/actions/ActionTypes.js","store/actions/Login.js","store/actions/SignUp.js","store/actions/Error.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/inputs/FormTextField.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","components/preview/tables/PreviewTableRow.js","components/preview/tables/PreviewTableHead.js","components/preview/tables/PreviewTable.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","components/form/buttons/BackButton.js","components/form/buttons/NextButton.js","components/form/buttons/PreviewButton.js","components/form/mobileStepperWidget/MobileStepperWidget.js","components/form/deskopStepper/DesktopStepper.js","components/form/deskopStepper/DesktopStepperButtons.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/links/FormLink.js","components/introduction/Introduction.js","components/home/Home.js","components/login/LoginEmail.js","components/login/LoginPassword.js","components/inputs/FormSpinner.js","components/inputs/SubmitButton.js","components/copyright/CopyRight.js","containers/login/Login.js","containers/signup/SignUp.js","shared/util/Utils.js","components/welcome/Welcome.js","store/actions/LogoutHandler.js","containers/logout/Logout.js","components/congrats/Congrats.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js","store/reducers/AuthReducer.js","store/reducers/LoginReducer.js","store/reducers/ErrorReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","userId","useSelector","state","login","id","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","RequestResolver","axios","create","baseURL","_updateUserInfo","formId","form","user","dispatch","formInfo","isFormCompleted","isFormTouched","put","entityId","username","then","UpdateUserInfo","catch","error","ErrorHandler","response","data","message","nextForm","info","type","formUpdating","PopulateForm","isCompleted","_handleUserResponse","token","Object","keys","map","key","infoObject","LoginSuccess","get","console","log","PopulateFormHandler","LoginStart","storeToken","expiryTime","localStorage","setItem","timeout","setTimeout","removeItem","SignUpStart","payload","SignUpFinished","_ErrorHandler","isError","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Layout","props","useState","open","setOpen","errorMessage","errorRef","useRef","useDispatch","removeError","useCallback","useEffect","Fragment","children","Modal","aria-labelledby","aria-describedby","onClose","prevState","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","ref","formControl","margin","minWidth","SelectInput","formType","field","handler","FormControl","required","validation","variant","disabled","InputLabel","label","Select","isTouched","isValid","native","labelId","name","value","onChange","event","aria-label","options","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","FormTextField","TextField","helperText","hidden","placeholder","flexDirection","marginTop","width","selectEmpty","Form","fields","filter","PERSONAL_INFO","firstName","text","pattern","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","PreviewTableRow","subForm","identityForm","subKey","TableRow","TableCell","component","scope","align","PreviewTableHead","TableHead","colSpan","fontWeight","replace","PreviewTable","Table","TableBody","FormPreview","IDENTITY_FORM","CssBaseline","Container","DialogView","modalHandler","saveFormHandler","descriptionElementRef","React","descriptionElement","current","focus","Dialog","fullWidth","scroll","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","Provider","backButton","BackButton","handleBack","NextButton","handleNext","isNextButtonDisable","PreviewButton","setModalOpen","MobileStepperWidget","steps","nextButton","previewButton","nextView","length","stepsView","Step","StepLabel","MobileStepper","activeStep","alternativeLabel","DesktopStepper","Stepper","DesktopStepperButtons","instructions","marginBottom","marginLeft","height","Forms","setFormType","isSubFormComplete","setSubFormComplete","useContext","submitFormInfo","post","updateForm","isFormComplete","setIdentityForm","setNextButtonDisable","isModalOpen","getFormData","_","clone","formData","subFormTypes","slice","includes","hasOwnProperty","clearFormData","newIdentityForm","subRemoteForm","setNextButtonEnable","prevActiveStep","mobileStepper","desktopStepper","desktopButton","stepper","window","screen","stepperButton","Paper","elevation","inputType","fieldName","target","isDisable","toggleInputsDisabled","test","Preview","GuardedRoute","Component","rest","render","FormLink","Grid","container","item","size","avatar","secondary","main","submit","Introduction","tryLoginHandler","getItem","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","Home","direction","justify","minHeight","xs","xl","sm","LoginEmail","setUserName","autoComplete","autoFocus","LoginPassword","password","setPassword","FormSpinner","forwardRef","CircularProgress","SubmitButton","CopyRight","Box","mt","href","Date","getFullYear","Login","setUsername","loginHandler","idToken","localId","expiresIn","LoginHandler","isLoginStart","loginStart","spinnerRef","createRef","loginButtonRef","showSpinnerAndHideLoginButton","hideSpinnerAndShowLoginButton","onSubmit","preventDefault","SignUp","submitRef","handleSignup","userData","signup","auth","isSignUpLoading","SIGNUP_FORM","onChangeHandler","minLength","maxLength","ket","email","setForm","isSignUpButtonEnable","setSignUpButtonEnable","fieldId","newForm","emailField","String","toLowerCase","validateEmail","passwordField","pw","validatePassword","validateWholeForm","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","disableSpacing","_logoutHandler","_removeForm","LogoutHandler","Logout","logout","location","pathname","Congrats","App","routes","fallback","path","exact","Boolean","hostname","match","store","initialState","isUpdating","NextFormReducer","AuthReducer","loginError","LoginReducer","ErrorReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.876cd04d.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    const userId = useSelector(state => state.login.id);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/welcome\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"/logout\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>{userId ? \"Logout\" : null}</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {UpdateUserInfo} from \"./Login\";\nimport ErrorHandler from \"./Error\";\n\nconst _updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    RequestResolver.put(`/users/${user.entityId}.json`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        dispatch(ErrorHandler(true, error.response.data.error.message));\n    })\n}\n\nexport const updateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(() => {\n                    _updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    _updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        RequestResolver.get(`/identity/${formId}.json`)\n            .then(response => {\n                dispatch(PopulateForm(response.data, formId));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nexport const PopulateForm = (form, formId) => {\n    return {\n        type: actionTypes.POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n\nexport const RemoveFormError = () => {\n    return {\n        type: actionTypes.REMOVE_FORM_ERROR\n    }\n}\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const REMOVE_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\nexport const POPULATE_FORM = \"POPULATE_FORM\";\n\n\nexport const SIGNUP = \"SIGNUP\";\nexport const SIGNUP_START = \"SIGNUP_START\";\nexport const SIGNUP_FINISHED = \"SIGNUP_FINISHED\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR  = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGIN_TRY = \"LOGIN_TRY\";\n\nexport const UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\n\nexport const ERROR = \"ERROR\";\nexport const REMOVE_LOGIN_ERROR = \"REMOVE_LOGIN_ERROR\";\nexport const REMOVE_SIGNUP_ERROR = \"REMOVE_SIGNUP_ERROR\";\nexport const REMOVE_FORM_ERROR = \"REMOVE_FORM_ERROR\";\n","import axios from 'axios'\nimport * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {PopulateFormHandler} from \"./Form\";\nimport ErrorHandler from \"./Error\";\n\nfunction _handleUserResponse(response, dispatch, token) {\n    const [entityId] = Object.keys(response.data);\n    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n    dispatch(LoginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n    const formId = infoObject.formInfo ? infoObject.formInfo.formId : null;\n    if (formId) {\n        dispatch(PopulateFormHandler(formId))\n    }\n}\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(LoginStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, {\n            \"email\": username,\n            \"password\": password\n        })\n            .then(response => {\n                const token = response.data.idToken;\n                const userId = response.data.localId;\n                const expiryTime = response.data.expiresIn;\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n                localStorage.setItem('expiryTime', expiryTime);\n                RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                    .then(response => _handleUserResponse(response, dispatch, token))\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.message))\n                    });\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            });\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => _handleUserResponse(response, dispatch, token))\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response.data.error.message));\n                });\n        }\n    }\n}\n\nconst LoginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\n\nconst LoginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: actionTypes.UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nexport const RemoveLoginError = () => {\n    return {\n        type: actionTypes.REMOVE_LOGIN_ERROR\n    }\n}\n\n","import RequestResolver from \"../../requestHandler/RequestHandler\";\nimport axios from 'axios';\nimport * as actionTypes from './ActionTypes';\nimport ErrorHandler from \"./Error\";\n\nexport const signup = (userData) => {\n    return dispatch => {\n        dispatch(SignUpStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, userData)\n            .then(response => {\n                RequestResolver.post('/users.json', {username: userData.firstName + ' ' + userData.lastName, userId: response.data.localId})\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(SignUpFinished({...response.data, username: userData.firstName + ' ' + userData.lastName}))\n                    })\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.response.data.error.message))\n                    })\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: actionTypes.SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nexport const SignUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START,\n        payload: null\n    }\n}\n\nexport const SignUpFinished = (data) => {\n    return {\n        type: actionTypes.SIGNUP_FINISHED,\n        payload: data\n    }\n}\n\nexport const RemoveSignUpError = () => {\n    return {\n        type: actionTypes.REMOVE_SIGNUP_ERROR\n    }\n}\n","import * as actionTypes from '../actions/ActionTypes';\nimport {RemoveLoginError} from \"./Login\";\nimport {RemoveSignUpError} from \"./SignUp\";\nimport {RemoveFormError} from \"./Form\";\n\nconst ErrorHandler = (isError, message) => {\n    return dispatch => {\n        if (!isError) {\n            dispatch(RemoveLoginError());\n            dispatch(RemoveSignUpError());\n            dispatch(RemoveFormError());\n        }\n        dispatch(_ErrorHandler(isError, message));\n    }\n}\n\nconst _ErrorHandler = (isError, message) => {\n    return {\n        type: actionTypes.ERROR,\n        isError: isError,\n        message: message\n    }\n}\n\nexport default ErrorHandler;\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ErrorHandler from \"../../store/actions/Error\";\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst Layout = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const isError = useSelector(state => state.error.isError);\n    const errorMessage = useSelector(state => state.error.message);\n\n    const errorRef = useRef();\n\n    const dispatch = useDispatch();\n    const removeError = useCallback(() => dispatch(ErrorHandler(false, \"\")), [dispatch]);\n\n    useEffect(() => {\n        setOpen(isError);\n    }, [isError])\n\n    const handler = () => {\n        setOpen(prevState => !prevState);\n        removeError();\n    }\n\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handler}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">Error</h2>\n                        <h3 ref={errorRef} id=\"transition-modal-description\">{errorMessage}</h3>\n                    </div>\n                </Fade>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {FormControl} from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    }\n}));\n\nconst SelectInput = ({formType, field, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={field.validation.required}\n            variant='outlined'\n            className={classes.formControl}\n            key={field.id}\n            disabled={field.disabled}\n        >\n            <InputLabel id={field.id}>{field.label}</InputLabel>\n            <Select\n                error={field.validation.isTouched && !field.validation.isValid}\n                required={field.required}\n                native\n                labelId={field.id}\n                key={field.id}\n                id={field.id}\n                name={field.id}\n                value={field.value}\n                label={field.label}\n                onChange={(event) => handler(event, formType, 'input')}\n            >\n                <option key={'none'} aria-label='None' value=''/>\n                {\n                    field.options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Check = ({field, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={field.id}\n            label={field.label}\n            labelPlacement={'end'}\n            control={\n                <Checkbox\n                    key={field.id}\n                    value={field.value}\n                    checked={field.value}\n                    onChange={event => handler(event, formType, 'check')}\n                    id={field.id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst FormTextField = ({type, field, handler, formType}) => {\n    return (\n        <TextField\n            type={type}\n            error={field.validation.isTouched && !field.validation.isValid}\n            helperText={field.helperText}\n            disabled={field.disabled}\n            hidden={field.hidden}\n            key={field.id}\n            required={field.validation.required}\n            id={field.id}\n            label={field.label}\n            variant='outlined'\n            value={field.value}\n            placeholder={field.placeholder}\n            onChange={(event) => handler(event, formType, 'input')}/>\n    );\n}\nexport default FormTextField;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from 'components/inputs/Select';\nimport Check from 'components/inputs/Check';\nimport FormTextField from 'components/inputs/FormTextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case 'text':\n                            return <FormTextField type={'text'} field={field} formType={formType} handler={handler}/>\n                        case 'number':\n                            return <FormTextField type={'number'} field={field} formType={formType} handler={handler}/>\n                        case 'select':\n                            return <SelectInput handler={handler} formType={formType} field={field}/>\n                        case 'check':\n                            return <Check handler={handler} formType={formType} field={field}/>\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 3 Alphabets',\n        pattern: /^[A-z]{3,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        text: 'No Digits/Space Allowed. Not more than 4',\n        pattern: /^[A-z]?[A-z]?[A-z]?[A-z]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 2 Alphabets',\n        pattern: /^[A-z]{2,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        text: 'Please Enter Age between 1 and 99',\n        pattern: /^[1-9][0-9]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        text: 'Mobile Number should be in this pattern +92-3xx-xxxxxx',\n        pattern: /^[+][9][2][-][3][0-4][0-9][-][0-9]{7}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"+92-3xx-xxxxxxx\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        text: 'Select CGPA',\n        pattern: /^[1-9]+$/g,\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        text: 'No Space is allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        text: 'No Space is allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        text: 'Select Type',\n        pattern: /^[A-z]+$/g,\n        disabled: true,\n        value: \"Bike\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        text: 'Not a valid plate number. Format should be like AKK-2915',\n        pattern: /^[A-Z]{3}-[0-9]{4}$/g,\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"AKK-2915\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Do you own a house?\"\n    },\n    houseNumber: {\n        text: 'Not a valid plate number. Format should be like JND-233232',\n        pattern: /^[A-Z]{3}-[0-9]{6}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"XXX-DDDDDD\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport React from 'react';\n\nconst PreviewTableRow = ({subForm, identityForm, id, subKey}) => {\n    return (\n        <TableRow key={subForm.name}>\n            <TableCell component='th' scope='row'>\n                {identityForm[id][subKey] ? identityForm[id][subKey].label : null}\n            </TableCell>\n            <TableCell\n                align='right'>{subForm[subKey] ? subForm[subKey] : null}\n            </TableCell>\n        </TableRow>\n    );\n}\nexport default PreviewTableRow;\n","import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {Typography} from '@material-ui/core';\nimport React from 'react';\n\nconst PreviewTableHead = ({id}) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell colSpan={2} style={{textAlign: 'center'}}>\n                    <Typography variant='h5' style={{fontWeight: 'bold'}}>\n                        {id && id !== 'isFormCompleted' ? id.replace('_', ' ') : null}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\nexport default PreviewTableHead;\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport React from 'react';\nimport PreviewTableRow from 'components/preview/tables/PreviewTableRow';\nimport PreviewTableHead from 'components/preview/tables/PreviewTableHead';\n\nconst PreviewTable = ({id, subForm, identityForm}) => {\n    return (\n        <Table aria-label='simple table'>\n            <PreviewTableHead id={id}/>\n            <TableBody>\n                {\n                    Object.keys(subForm).map(subKey => subKey !== 'isCompleted' ?\n                    <PreviewTableRow id={id} subForm={subForm} identityForm={identityForm} subKey={subKey}/>\n                    : null)\n                }\n            </TableBody>\n        </Table>\n    );\n}\nexport default PreviewTable;\n","import React, {useState} from 'react';\nimport {Container} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IDENTITY_FORM from 'shared/forms/Forms';\nimport PreviewTable from 'components/preview/tables/PreviewTable';\n\nconst FormPreview = ({form}) => {\n    const [identityForm,] = useState(IDENTITY_FORM);\n    return (\n        <>\n            <CssBaseline/>\n            <Container maxWidth='sm'>\n                {\n                    Object.keys(form).map(key =>\n                        <PreviewTable identityForm={identityForm} id={key} subForm={form[key]}/>)\n                }\n            </Container>\n        </>\n    );\n}\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from 'components/preview/FormPreview';\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                fullWidth={true}\n                maxWidth='md'\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby='scroll-dialog-title'\n                aria-describedby='scroll-dialog-description'\n            >\n                <DialogTitle id='scroll-dialog-title'>Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id='scroll-dialog-description'\n                        ref={descriptionElementRef}\n                        tabIndex={-1}>\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color='primary'>Cancel</Button>\n                    <Button onClick={saveFormHandler} color='primary'>Save</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserProvider;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backButton: {\n        marginRight: theme.spacing(1),\n    }\n}));\n\nconst BackButton = ({formType, handleBack}) => {\n    const classes = useStyles();\n    return (\n        <Button disabled={formType.step === 0} onClick={handleBack} className={classes.backButton}>\n            Back\n        </Button>\n    );\n}\nexport default BackButton;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst NextButton = ({handleNext, isNextButtonDisable}) => {\n    return (\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNext} disabled={isNextButtonDisable}>\n            Next\n        </Button>\n    );\n}\nexport default NextButton;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst PreviewButton = ({setModalOpen, isNextButtonDisable}) => {\n    return (\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)} disabled={isNextButtonDisable}>\n            Preview\n        </Button>\n    );\n}\nexport default PreviewButton;\n","import MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\n\nconst MobileStepperWidget = ({formType, steps, handleNext, handleBack, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton handleBack={handleBack} formType={formType}/>;\n    const nextButton = <NextButton handleNext={handleNext} isNextButtonDisable={isNextButtonDisable}/>;\n    const previewButton = <PreviewButton isNextButtonDisable={isNextButtonDisable} setModalOpen={setModalOpen}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    const stepsView = (\n        steps.map((label) => (\n            <Step key={label} style={{color: 'red'}}>\n                <StepLabel>{label}</StepLabel>\n            </Step>\n        ))\n    );\n\n    return (\n        <MobileStepper activeStep={formType.step} alternativeLabel\n                       backButton={backButton} nextButton={nextView}\n                       steps={stepsView} />\n    );\n}\n\nexport default MobileStepperWidget;\n","import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\n\nconst DesktopStepper = ({formType, steps}) => {\n    return (\n        <Stepper activeStep={formType.step} alternativeLabel>\n            {steps.map((label) => (\n                <Step key={label} style={{color: 'red'}}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    );\n}\nexport default DesktopStepper;\n","import React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\n\nconst DesktopStepperButtons = ({formType, steps, handleBack, handleNext, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton formType={formType} handleBack={handleBack}/>;\n    const nextButton = <NextButton isNextButtonDisable={isNextButtonDisable} handleNext={handleNext}/>;\n    const previewButton = <PreviewButton setModalOpen={setModalOpen} isNextButtonDisable={isNextButtonDisable}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    return (\n        <div>\n            {backButton}\n            {nextView}\n        </div>\n    );\n}\nexport default DesktopStepperButtons;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Form from \"components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"shared/forms/Forms\";\nimport formTypes from \"shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"store/actions/Form\";\nimport DialogView from \"components/modal/DialogView\";\nimport {UserContext} from \"providers/UserProvider\";\nimport {Redirect} from \"react-router\";\nimport {Container} from \"@material-ui/core\";\nimport MobileStepperWidget from \"components/form/mobileStepperWidget/MobileStepperWidget\";\nimport DesktopStepper from \"components/form/deskopStepper/DesktopStepper\";\nimport DesktopStepperButtons from \"components/form/deskopStepper/DesktopStepperButtons\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(updateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    const isFormComplete = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null)\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n\n    useEffect(() => {\n        clearFormData();\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                        }\n                    }\n                }\n            }\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n        }\n\n    }, []);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = !field.validation.required;\n                        field.validation.isTouched = !field.validation.required;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id || event.target.name;\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            toggleInputsDisabled(formType, !event.target.checked);\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            field.validation.isValid = field.pattern ? _.clone(field.pattern).test(field.value) : true;\n            field.helperText = !field.validation.isValid ? field.text : '';\n        }\n        setSubFormComplete(isValid(subForm));\n        setNextButtonDisable(!isValid(subForm));\n        setIdentityForm(newIdentityForm);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                if (!field.disabled && !field.validation.isValid) {\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n    if (isFormComplete) {\n        return <Redirect to=\"/identity/congrats\"/>\n    }\n\n    const mobileStepper = <MobileStepperWidget\n        formType={formType}\n        handleBack={handleBack}\n        handleNext={handleNext}\n        isNextButtonDisable={isNextButtonDisable}\n        setModalOpen={setModalOpen}\n        steps={steps}\n    />;\n\n    const desktopStepper = <DesktopStepper steps={steps} formType={formType}/>;\n    const desktopButton = <DesktopStepperButtons\n        formType={formType}\n        steps={steps}\n        setModalOpen={setModalOpen}\n        isNextButtonDisable={isNextButtonDisable}\n        handleNext={handleNext}\n        handleBack={handleBack}\n    />\n\n    const stepper = window.screen.width < 600 ? mobileStepper : desktopStepper;\n    const stepperButton = window.screen.width >= 600 ? desktopButton : null;\n\n    return (\n        <Container>\n            {stepper}\n            <Container className={classes.root}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                </Paper>\n                {stepperButton}\n                <DialogView\n                    form={form}\n                    open={isModalOpen}\n                    modalHandler={() => setModalOpen(false)}\n                    saveFormHandler={handleSaveForm}\n                />\n            </Container>\n        </Container>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\nimport {Container} from \"@material-ui/core\";\n\n\nconst Preview = () => {\n    const form = useSelector(state => state.form.form);\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper  elevation={3}>\n                <FormPreview form={form}/>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\n\nexport default GuardedRoute;\n","import Grid from '@material-ui/core/Grid';\nimport {Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nconst FormLink = ({to, label}) => {\n    return (\n        <Grid container>\n            <Grid item>\n                <Link to={to} style={{textDecoration: 'none', outline: 'none'}}>\n                    <Button size='small' color='primary'>\n                        {label}\n                    </Button>\n                </Link>\n            </Grid>\n        </Grid>\n    )\n}\nexport default FormLink;\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport {Redirect} from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport Grid from '@material-ui/core/Grid';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TryLoginHandler} from 'store/actions/Login';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant='h5' component='h2'>\n                                        Identity\n                                    </Typography>\n                                    <Typography variant='body2' color='textSecondary' component='p'>\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <FormLink to={'/identity/login'} label={'Sign In'}/>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Introduction;\n","import React from 'react';\nimport Introduction from 'components/introduction/Introduction';\nimport {Grid} from '@material-ui/core';\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{minHeight: 'calc(100vh - 11vh)'}}\n        >\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n        </Grid>\n    );\n}\nexport default Home;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginEmail = ({username, setUserName}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n            autoFocus\n            value={username}\n            onChange={(event) => setUserName(event.target.value)}\n        />\n\n    );\n}\n\nexport default LoginEmail;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginPassword = ({password, setPassword}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n        />\n    );\n}\n\nexport default LoginPassword;\n","import CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {forwardRef} from 'react';\n\nconst FormSpinner = forwardRef((props, ref) => {\n    return (\n        <CircularProgress ref={ref} style={{marginTop: '8px', display: 'inline-block'}}>\n            {props}\n        </CircularProgress>\n    );\n})\nexport default FormSpinner;\n","import Button from '@material-ui/core/Button';\nimport React, {forwardRef} from 'react';\n\nconst SubmitButton = forwardRef(({className, isDisable = false, label}, ref) => {\n    return (\n        <Button\n            ref={ref}\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            style={{display: 'inline-flex'}}\n            className={className}\n            disabled={isDisable}>\n            {label}\n        </Button>\n    );\n})\n\nexport default SubmitButton;\n","import Typography from '@material-ui/core/Typography';\nimport MaterialLink from '@material-ui/core/Link';\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\n\nconst CopyRight = () => {\n    return (\n        <Box mt={5}>\n            <Typography variant='body2' color='textSecondary' align='center'>\n                {'Copyright © '}\n                <MaterialLink color='inherit' href='https://github.com/UbaidurRehman1/identity'>\n                    Identity\n                </MaterialLink>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Box>\n    );\n}\nexport default CopyRight;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoginHandler} from 'store/actions/Login';\nimport LoginEmail from 'components/login/LoginEmail';\nimport LoginPassword from 'components/login/LoginPassword';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormLink from 'components/links/FormLink';\nimport CopyRight from 'components/copyright/CopyRight';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    const spinnerRef = createRef();\n    const loginButtonRef = createRef();\n\n    const showSpinnerAndHideLoginButton = useCallback(() => {\n        if (spinnerRef.current) {spinnerRef.current.style.display = 'inline-block';}\n        if (loginButtonRef.current) {loginButtonRef.current.style.display = 'none';}\n    }, [spinnerRef, loginButtonRef]);\n\n    const hideSpinnerAndShowLoginButton = useCallback(() => {\n        if (spinnerRef.current) {spinnerRef.current.style.display = 'none';}\n        if (loginButtonRef.current) {loginButtonRef.current.style.display = 'inline-flex';}\n    }, [spinnerRef, loginButtonRef])\n\n    useEffect(() => {\n        isLoginStart ? showSpinnerAndHideLoginButton() : hideSpinnerAndShowLoginButton();\n    }, [hideSpinnerAndShowLoginButton, isLoginStart, showSpinnerAndHideLoginButton])\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Log in\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => login(event)}>\n                    <LoginEmail value={username} setUserName={setUsername}/>\n                    <LoginPassword value={password} setPassword={setPassword}/>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton ref={loginButtonRef} isDisable={false} className={classes.submit} label={'Log In'}/>\n                    <FormLink label={'Don\\'t have an account? Sign Up'} to={'/identity/signup'}/>\n                </form>\n            </div>\n            <CopyRight />\n        </Container>\n    );\n}\nexport default Login;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {signup} from 'store/actions/SignUp';\nimport {validateEmail, validateFieldLength, validatePassword, validateWholeForm} from 'shared/util/Utils';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport CopyRight from 'components/copyright/CopyRight';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const spinnerRef = createRef();\n    const submitRef = createRef();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(signup(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            autoComplete: 'fname',\n            name: 'firstName',\n            variant: 'outlined',\n            fullWidth: true,\n            id: 'firstName',\n            key: 'firstName',\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'First Name'\n        },\n        lastName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'lastName',\n            ket: 'lastName',\n            name: 'lastName',\n            autoComplete: 'lname',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Last Name'\n        },\n        email: {\n            disabled: false,\n            value: '',\n            type: 'email',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'email',\n            key: 'email',\n            name: 'email',\n            autoComplete: 'email',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Email Address'\n        },\n        password: {\n            disabled: false,\n            value: '',\n            type: 'password',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            name: 'password',\n            id: 'password',\n            key: 'password',\n            autoComplete: 'current-password',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Password'\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n    const [isSignUpButtonEnable, setSignUpButtonEnable] = useState(false);\n\n    useEffect(() => {\n       if (isSignUpLoading) {\n           if (spinnerRef.current) spinnerRef.current.style.display = 'inline-block';\n           if (submitRef.current) submitRef.current.style.display = 'none';\n       } else {\n           if (spinnerRef.current) spinnerRef.current.style.display = 'none';\n           if (submitRef.current) submitRef.current.style.display = 'inline-flex';\n       }\n    }, [isSignUpLoading, spinnerRef, submitRef]);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n        setSignUpButtonEnable(validateWholeForm(newForm));\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        handleSignup(formData);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (<Grid item xs={12} sm={6} key={key}><TextField {...field}/></Grid>);\n                                } else {\n                                    return (<Grid item xs={12} key={key}><TextField{...field}/></Grid>);\n                                }\n                            })\n                        }\n                    </Grid>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton ref={submitRef} className={classes.submit} isDisable={!isSignUpButtonEnable} label='Sign Up'/>\n                    <FormLink to={'/identity/login'} label={'Already have an account? Sign in'}/>\n                </form>\n            </div>\n            <CopyRight />\n        </Container>\n    );\n}\n\nexport default SignUp;\n","export const validateFieldLength = field => {\n    if (field.validation.isTouched) {\n        if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n            field.validation.isValid = false;\n            field.error = true;\n            field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n        } else {\n            field.validation.isValid = true;\n            field.error = false;\n            field.helperText = '';\n        }\n    }\n}\n\nexport const validateEmail = emailField => {\n    const email = emailField.value;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isValid = re.test(String(email).toLowerCase());\n    if (!isValid) {\n        emailField.validation.isValid = false;\n        emailField.error = true;\n        emailField.helperText = 'Invalid Email Address';\n    } else {\n        emailField.validation.isValid = true;\n        emailField.error = false;\n        emailField.helperText = '';\n    }\n}\n\nexport const validatePassword = passwordField => {\n    const pw = passwordField.value;\n    const isValid = /[A-Z]/.test(pw) &&\n        /[a-z]/.test(pw) &&\n        /[0-9]/.test(pw) &&\n        /[^A-Za-z0-9]/.test(pw) &&\n        pw.length > 4;\n    if (!isValid) {\n        passwordField.validation.isValid = false;\n        passwordField.error = true;\n        passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n    } else {\n        passwordField.validation.isValid = true;\n        passwordField.error = false;\n        passwordField.helperText = '';\n    }\n}\n\nexport const validateWholeForm = (form) => {\n    let keys = Object.keys(form);\n    for (let key in keys) {\n        const field = form[keys[key]];\n        if (!field.validation.isValid) {\n            return false;\n        }\n    }\n    return true;\n}\n\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport {UserContext} from 'providers/UserProvider';\nimport {useSelector} from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport FormLink from 'components/links/FormLink';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        maxWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo ? state.login.formInfo.formId : null);\n    const isFormCompleted = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null);\n    const isFormTouched = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormTouched : null);\n\n    const formInfoView = useRef();\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = 'Welcome in Identity. Click below to start filling your Identity form';\n        } else if (!isFormCompleted) {\n            info = 'You have not completed your Identity form yet. Kindly complete your form as soon as possible';\n        } else if (isFormCompleted) {\n            info = 'Your Identity form is completed';\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2} justify={'flex-start'} style={{marginTop: '8px'}}>\n                    <Grid item>\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label='recipe' className={classes.avatar}>\n                                        U\n                                    </Avatar>\n                                }\n                                action={\n                                    <IconButton aria-label='settings'>\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                }\n                                title= 'Welcome Back'\n                                subheader={user.username}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image='/static/images/cards/paella.jpg'\n                                title='Paella dish'\n                            />\n                            <CardContent>\n                                <Typography ref={formInfoView} variant='body2' color='textSecondary' component='p'>\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label='add to favorites'>\n                                    <FavoriteIcon />\n                                </IconButton>\n                                <IconButton aria-label='share'>\n                                    <ShareIcon />\n                                </IconButton>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <FormLink label={'Click here to fill your identity form'} to={'/identity/create'}/>\n            </div>\n        </Container>\n    );\n}\n\nexport default Welcome;\n","import * as actionTypes from '../actions/ActionTypes';\n\nconst LogoutHandler = () => {\n    return dispatch => {\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"token\");\n        setTimeout(() => {\n            dispatch(_removeForm());\n            dispatch(_logoutHandler())\n        }, 2000);\n    }\n\n}\n\nconst _logoutHandler = () => {\n    return {\n        type: actionTypes.LOGOUT\n    }\n}\n\nconst _removeForm = () => {\n    return {\n        type: actionTypes.REMOVE_FORM\n    }\n}\n\nexport default LogoutHandler;\n","import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport LogoutHandler from 'store/actions/LogoutHandler';\n\nconst Logout = (props) => {\n\n    const dispatch = useDispatch();\n    const logout = useCallback(() => dispatch(LogoutHandler()), [dispatch]);\n\n    const userId = useSelector(state => state.login.id);\n\n    useEffect(() => {\n        logout();\n        if (!userId) {\n            props.location.pathname = '/identity'\n        }\n    });\n\n    return (\n        <p>You will be redirect to Introduction Page</p>\n    );\n}\nexport default Logout;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: 'auto',\n        marginTop: '5rem'\n    }\n});\n\nconst Congrats = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                    Congrats!\n                </Typography>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                    You have been registered in Identity. You will received your Identity Number through by SMS soon.\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <FormLink label='View Your Form' to='/identity/preview'/>\n                <FormLink label='Edit Your Form' to='/identity/create'/>\n            </CardActions>\n        </Card>\n    );\n}\nexport default Congrats;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\nimport UserProvider from \"./providers/UserProvider\";\nimport GuardedRoute from \"./hoc/gaurdedRoute/GaurdedRoute\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./containers/login/Login\";\nimport SignUp from \"./containers/signup/SignUp\";\nimport Welcome from \"./components/welcome/Welcome\";\nimport Logout from \"./containers/logout/Logout\";\nimport Congrats from \"./components/congrats/Congrats\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path=\"/identity/create\" exact component={Forms} />\n                <GuardedRoute path=\"/identity/preview\" exact component={Preview} />\n                <GuardedRoute path=\"/identity/welcome\" exact component={Welcome} />\n                <GuardedRoute path={\"/logout\"} exact component={Logout} />\n                <GuardedRoute path=\"/identity/congrats\" component={Congrats}/>\n                <Route path=\"/identity/signup\" exact component={SignUp}/>\n                <Route path=\"/identity/login\" exact component={Login}/>\n                <Route path=\"/identity\" exact component={Home}/>\n                <Route render={() => <Redirect to=\"/identity\" />}/>\n                {/*<Redirect to=\"/identity/preview\" />*/}\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AuthReducer from \"./store/reducers/AuthReducer\";\nimport LoginReducer from \"./store/reducers/LoginReducer\";\nimport ErrorReducer from \"./store/reducers/ErrorReducer\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer,\n        auth: AuthReducer,\n        login: LoginReducer,\n        error: ErrorReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.REMOVE_FORM:\n            return {...state, formId: null, form: null, isCompleted: false, error: null, isUpdating: false}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case actionTypes.POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        case actionTypes.REMOVE_FORM_ERROR:\n            return {...state, error: null}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: \"\",\n    isSignUpLoading: false,\n    timeout: null\n};\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case actionTypes.SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case actionTypes.SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case actionTypes.SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        case actionTypes.REMOVE_SIGNUP_ERROR:\n            return {...state, error: false, isSignUpLoading: false}\n        default:\n            return state;\n    }\n}\n\nexport default AuthReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case actionTypes.LOGIN_SUCCESS:\n            return {...state, isLogin: true, loginStart: false, loginError: false, username: action.username, token: action.token, id: action.id, entityId: action.entityId, formInfo: action.formInfo}\n        case actionTypes.LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case actionTypes.LOGOUT:\n            return {...state, isLogin: false, loginStart: false, loginError: false, username: null, id: null, entityId: null, token: null, formInfo: null}\n        case actionTypes.UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        case actionTypes.REMOVE_LOGIN_ERROR:\n            return {...state, loginError: false, loginStart: false}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n","import * as actionTypes from '../actions/ActionTypes';\n\nconst initialState = {\n    isError: false,\n    message: \"\"\n}\n\nconst ErrorReducer = (state  = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ERROR:\n            return {...state, isError: action.isError, message: action.message};\n        default:\n            return state;\n    }\n}\n\nexport default ErrorReducer;\n"],"sourceRoot":""}