{"version":3,"sources":["containers/appBar/AppNavBar.js","requestHandler/RequestHandler.js","store/actions/FormHandler.js","store/actions/ActionTypes.js","requestHandler/AuthHandler.js","store/actions/LoginHandler.js","store/actions/SignUpHandler.js","store/actions/ErrorHandler.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/inputs/FormTextField.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","components/preview/tables/PreviewTableRow.js","components/preview/tables/PreviewTableHead.js","components/preview/tables/PreviewTable.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","components/form/buttons/BackButton.js","components/form/buttons/NextButton.js","components/form/buttons/PreviewButton.js","components/form/mobileStepperWidget/MobileStepperWidget.js","components/form/deskopStepper/DesktopStepper.js","components/form/deskopStepper/DesktopStepperButtons.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/links/FormLink.js","components/introduction/Introduction.js","components/home/Home.js","components/login/LoginEmail.js","components/login/LoginPassword.js","components/inputs/FormSpinner.js","components/inputs/SubmitButton.js","components/copyright/CopyRight.js","containers/login/Login.js","containers/signup/SignUp.js","shared/util/Utils.js","components/welcome/Welcome.js","store/actions/LogoutHandler.js","containers/logout/Logout.js","components/congrats/Congrats.js","App.js","serviceWorker.js","index.js","store/reducers/FormReducer.js","store/reducers/SignupReducer.js","store/reducers/LoginReducer.js","store/reducers/ErrorReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","userId","useSelector","state","login","id","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","RequestResolver","axios","create","baseURL","updateUserInfo","formId","form","user","dispatch","formInfo","isFormCompleted","isFormTouched","put","entityId","username","then","UpdateUserInfo","catch","error","ErrorHandler","response","data","message","nextForm","info","type","formUpdating","populateForm","isCompleted","AuthHandler","params","key","loginStart","setInfoInLocalStorage","token","idToken","localId","expiryTime","expiresIn","localStorage","setItem","handleUserResponse","Object","keys","map","infoObject","loginSuccess","get","PopulateFormHandler","storeToken","timeout","setTimeout","removeItem","signUpStart","payload","signUpFinished","errorHandler","isError","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Layout","props","useState","open","setOpen","errorMessage","errorRef","useRef","useDispatch","removeError","useCallback","useEffect","Fragment","children","Modal","aria-labelledby","aria-describedby","onClose","prevState","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","ref","formControl","margin","minWidth","SelectInput","formType","field","handler","FormControl","required","validation","variant","disabled","InputLabel","label","Select","isTouched","isValid","native","labelId","name","value","onChange","event","aria-label","options","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","FormTextField","TextField","helperText","hidden","placeholder","flexDirection","marginTop","width","selectEmpty","Form","fields","filter","PERSONAL_INFO","firstName","text","pattern","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","PreviewTableRow","subForm","identityForm","subKey","TableRow","TableCell","component","scope","align","PreviewTableHead","TableHead","colSpan","fontWeight","replace","PreviewTable","Table","TableBody","FormPreview","IDENTITY_FORM","CssBaseline","Container","DialogView","modalHandler","saveFormHandler","descriptionElementRef","React","descriptionElement","current","focus","Dialog","fullWidth","scroll","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","Provider","backButton","BackButton","handleBack","NextButton","handleNext","isNextButtonDisable","PreviewButton","setModalOpen","MobileStepperWidget","steps","nextButton","previewButton","nextView","length","stepsView","Step","StepLabel","MobileStepper","activeStep","alternativeLabel","DesktopStepper","Stepper","DesktopStepperButtons","instructions","marginBottom","marginLeft","height","Forms","setFormType","isSubFormComplete","setSubFormComplete","useContext","submitFormInfo","post","UpdateForm","isFormComplete","setIdentityForm","setNextButtonDisable","isModalOpen","getFormData","_","clone","formData","subFormTypes","slice","includes","hasOwnProperty","clearFormData","newIdentityForm","subRemoteForm","setNextButtonEnable","prevActiveStep","console","log","mobileStepper","desktopStepper","desktopButton","stepper","window","screen","stepperButton","Paper","elevation","inputType","fieldName","target","isDisable","toggleInputsDisabled","test","Preview","GuardedRoute","Component","rest","render","FormLink","Grid","container","item","size","avatar","secondary","main","submit","Introduction","tryLoginHandler","getItem","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","Home","direction","justify","minHeight","xs","xl","sm","LoginEmail","setUserName","autoComplete","autoFocus","LoginPassword","password","setPassword","FormSpinner","forwardRef","CircularProgress","SubmitButton","CopyRight","Box","mt","href","Date","getFullYear","Login","setUsername","loginHandler","LoginHandler","isLoginStart","spinnerRef","createRef","loginButtonRef","showSpinnerAndHideLoginButton","hideSpinnerAndShowLoginButton","onSubmit","preventDefault","SignUp","submitRef","handleSignup","userData","SignUpHandler","auth","isSignUpLoading","SIGNUP_FORM","onChangeHandler","minLength","maxLength","ket","email","setForm","isSignUpButtonEnable","setSignUpButtonEnable","fieldId","newForm","emailField","String","toLowerCase","validateEmail","passwordField","pw","validatePassword","validateWholeForm","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","disableSpacing","logoutHandler","removeForm","LogoutHandler","Logout","logout","location","pathname","Congrats","App","routes","fallback","path","exact","Boolean","hostname","match","store","initialState","isUpdating","FormReducer","SignupReducer","loginError","LoginReducer","ErrorReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27482ca0.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    const userId = useSelector(state => state.login.id);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/welcome\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"/logout\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>{userId ? \"Logout\" : null}</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import {\n    REMOVE_FORM_ERROR,\n    NEXT_FORM,\n    FORM_UPDATING,\n    POPULATE_FORM\n} from 'store/actions/ActionTypes'\nimport RequestResolver from 'requestHandler/RequestHandler';\nimport {UpdateUserInfo} from 'store/actions/LoginHandler';\nimport ErrorHandler from 'store/actions/ErrorHandler';\n\nexport const UpdateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(() => {\n                    updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n\n        } else {\n            RequestResolver.post('/identity.json', form)\n                .then(response => {\n                    updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n        }\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        RequestResolver.get(`/identity/${formId}.json`)\n            .then(response => {\n                dispatch(populateForm(response.data, formId));\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nexport const RemoveFormError = () => {\n    return {\n        type: REMOVE_FORM_ERROR\n    }\n}\n\nconst updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    RequestResolver.put(`/users/${user.entityId}.json`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        dispatch(ErrorHandler(true, error.response.data.error.message));\n    })\n}\n\nconst nextForm = (info, id) => {\n    return {\n        type: NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nconst formUpdating = () => {\n    return {\n        type: FORM_UPDATING,\n    }\n}\n\nconst populateForm = (form, formId) => {\n    return {\n        type: POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n","export const NEXT_FORM = 'NEXT_FORM';\nexport const REMOVE_FORM = 'HALT_FORM';\nexport const FORM_UPDATING = 'FORM_UPDATING';\nexport const POPULATE_FORM = 'POPULATE_FORM';\n\n\nexport const SIGNUP = 'SIGNUP';\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_FINISHED = 'SIGNUP_FINISHED';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\nexport const SET_TIMEOUT = 'SET_TIMEOUT';\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR  = 'LOGIN_ERROR';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_TRY = 'LOGIN_TRY';\n\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO';\n\nexport const ERROR = 'ERROR';\nexport const REMOVE_LOGIN_ERROR = 'REMOVE_LOGIN_ERROR';\nexport const REMOVE_SIGNUP_ERROR = 'REMOVE_SIGNUP_ERROR';\nexport const REMOVE_FORM_ERROR = 'REMOVE_FORM_ERROR';\n","import axios from 'axios'\nconst AuthHandler = axios.create({\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/',\n    params: {\n        key: 'AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw'\n    }\n})\nexport default AuthHandler;\n","import {\n    UPDATE_USER_INFO,\n    REMOVE_LOGIN_ERROR,\n    LOGIN_START,\n    LOGIN_SUCCESS\n} from 'store/actions/ActionTypes'\nimport RequestResolver from 'requestHandler/RequestHandler';\nimport {PopulateFormHandler} from 'store/actions/FormHandler';\nimport ErrorHandler from 'store/actions/ErrorHandler';\nimport AuthHandler from 'requestHandler/AuthHandler';\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(loginStart())\n        AuthHandler.post('accounts:signInWithPassword', {\n            'email': username,\n            'password': password\n        }).then(response => {\n            setInfoInLocalStorage(response);\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                .then(response => handleUserResponse(response, dispatch, response.data.idToken))\n                .catch(error => dispatch(ErrorHandler(true, error.message)));\n        }).catch(error => dispatch(ErrorHandler(true, error.response.data.error.message)));\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => handleUserResponse(response, dispatch, token))\n                .catch(error => dispatch(ErrorHandler(true, error.response.data.error.message)));\n        }\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nexport const RemoveLoginError = () => {\n    return {\n        type: REMOVE_LOGIN_ERROR\n    }\n}\n\n\nconst loginStart = () => {\n    return {\n        type: LOGIN_START\n    }\n}\n\nconst setInfoInLocalStorage = (response) => {\n    const token = response.data.idToken;\n    const userId = response.data.localId;\n    const expiryTime = response.data.expiresIn;\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n}\n\nconst handleUserResponse = (response, dispatch, token) => {\n    const [entityId] = Object.keys(response.data);\n    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n    dispatch(loginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n    const formId = infoObject.formInfo ? infoObject.formInfo.formId : null;\n    if (formId) {\n        dispatch(PopulateFormHandler(formId))\n    }\n}\n\nconst loginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n","import {\n    SET_TIMEOUT,\n    SIGNUP_START,\n    SIGNUP_FINISHED,\n    REMOVE_SIGNUP_ERROR\n} from 'store/actions/ActionTypes';\nimport RequestResolver from \"requestHandler/RequestHandler\";\nimport ErrorHandler from \"store/actions/ErrorHandler\";\nimport AuthHandler from \"requestHandler/AuthHandler\";\n\nexport const SignUpHandler = (userData) => {\n    return dispatch => {\n        dispatch(signUpStart())\n        AuthHandler.post('accounts:signUp', userData)\n            .then(response => {\n                RequestResolver.post('/users.json', {\n                    username: userData.firstName + ' ' + userData.lastName,\n                    userId: response.data.localId\n                })\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(signUpFinished({\n                            ...response.data,\n                            username: userData.firstName + ' ' + userData.lastName\n                        }))\n                    })\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.response.data.error.message))\n                    })\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nexport const RemoveSignUpError = () => {\n    return {\n        type: REMOVE_SIGNUP_ERROR\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nconst signUpStart = () => {\n    return {\n        type: SIGNUP_START,\n        payload: null\n    }\n}\n\nconst signUpFinished = (data) => {\n    return {\n        type: SIGNUP_FINISHED,\n        payload: data\n    }\n}\n","import {ERROR} from 'store/actions/ActionTypes';\nimport {RemoveLoginError} from 'store/actions/LoginHandler';\nimport {RemoveSignUpError} from 'store/actions/SignUpHandler';\nimport {RemoveFormError} from 'store/actions/FormHandler';\n\nconst ErrorHandler = (isError, message) => {\n    return dispatch => {\n        if (!isError) {\n            dispatch(RemoveLoginError());\n            dispatch(RemoveSignUpError());\n            dispatch(RemoveFormError());\n        }\n        dispatch(errorHandler(isError, message));\n    }\n}\n\nconst errorHandler = (isError, message) => {\n    return {\n        type: ERROR,\n        isError: isError,\n        message: message\n    }\n}\nexport default ErrorHandler;\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ErrorHandler from \"../../store/actions/ErrorHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst Layout = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const isError = useSelector(state => state.error.isError);\n    const errorMessage = useSelector(state => state.error.message);\n\n    const errorRef = useRef();\n\n    const dispatch = useDispatch();\n    const removeError = useCallback(() => dispatch(ErrorHandler(false, \"\")), [dispatch]);\n\n    useEffect(() => {\n        setOpen(isError);\n    }, [isError])\n\n    const handler = () => {\n        setOpen(prevState => !prevState);\n        removeError();\n    }\n\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handler}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">Error</h2>\n                        <h3 ref={errorRef} id=\"transition-modal-description\">{errorMessage}</h3>\n                    </div>\n                </Fade>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {FormControl} from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    }\n}));\n\nconst SelectInput = ({formType, field, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={field.validation.required}\n            variant='outlined'\n            className={classes.formControl}\n            key={field.id}\n            disabled={field.disabled}\n        >\n            <InputLabel id={field.id}>{field.label}</InputLabel>\n            <Select\n                error={field.validation.isTouched && !field.validation.isValid}\n                required={field.required}\n                native\n                labelId={field.id}\n                key={field.id}\n                id={field.id}\n                name={field.id}\n                value={field.value}\n                label={field.label}\n                onChange={(event) => handler(event, formType, 'input')}\n            >\n                <option key={'none'} aria-label='None' value=''/>\n                {\n                    field.options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Check = ({field, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={field.id}\n            label={field.label}\n            labelPlacement={'end'}\n            control={\n                <Checkbox\n                    key={field.id}\n                    value={field.value}\n                    checked={field.value}\n                    onChange={event => handler(event, formType, 'check')}\n                    id={field.id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst FormTextField = ({type, field, handler, formType}) => {\n    return (\n        <TextField\n            type={type}\n            error={field.validation.isTouched && !field.validation.isValid}\n            helperText={field.helperText}\n            disabled={field.disabled}\n            hidden={field.hidden}\n            key={field.id}\n            required={field.validation.required}\n            id={field.id}\n            label={field.label}\n            variant='outlined'\n            value={field.value}\n            placeholder={field.placeholder}\n            onChange={(event) => handler(event, formType, 'input')}/>\n    );\n}\nexport default FormTextField;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from 'components/inputs/Select';\nimport Check from 'components/inputs/Check';\nimport FormTextField from 'components/inputs/FormTextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case 'text':\n                            return <FormTextField type={'text'} field={field} formType={formType} handler={handler}/>\n                        case 'number':\n                            return <FormTextField type={'number'} field={field} formType={formType} handler={handler}/>\n                        case 'select':\n                            return <SelectInput handler={handler} formType={formType} field={field}/>\n                        case 'check':\n                            return <Check handler={handler} formType={formType} field={field}/>\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 3 Alphabets',\n        pattern: /^[A-z]{3,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        text: 'No Digits/Space Allowed. Not more than 4',\n        pattern: /^[A-z]?[A-z]?[A-z]?[A-z]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 2 Alphabets',\n        pattern: /^[A-z]{2,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        text: 'Please Enter Age between 1 and 99',\n        pattern: /^[1-9][0-9]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        text: 'Mobile Number should be in this pattern +92-3xx-xxxxxx',\n        pattern: /^[+][9][2][-][3][0-4][0-9][-][0-9]{7}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"+92-3xx-xxxxxxx\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        text: 'Select CGPA',\n        pattern: /^[1-9]+$/g,\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        text: 'No Space is allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        text: 'No Space is allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        text: 'Select Type',\n        pattern: /^[A-z]+$/g,\n        disabled: true,\n        value: \"Bike\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        text: 'Not a valid plate number. Format should be like AKK-2915',\n        pattern: /^[A-Z]{3}-[0-9]{4}$/g,\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"AKK-2915\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Do you own a house?\"\n    },\n    houseNumber: {\n        text: 'Not a valid plate number. Format should be like JND-233232',\n        pattern: /^[A-Z]{3}-[0-9]{6}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"XXX-DDDDDD\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport React from 'react';\n\nconst PreviewTableRow = ({subForm, identityForm, id, subKey}) => {\n    return (\n        <TableRow key={subForm.name}>\n            <TableCell component='th' scope='row'>\n                {identityForm[id][subKey] ? identityForm[id][subKey].label : null}\n            </TableCell>\n            <TableCell\n                align='right'>{subForm[subKey] ? subForm[subKey] : null}\n            </TableCell>\n        </TableRow>\n    );\n}\nexport default PreviewTableRow;\n","import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {Typography} from '@material-ui/core';\nimport React from 'react';\n\nconst PreviewTableHead = ({id}) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell colSpan={2} style={{textAlign: 'center'}}>\n                    <Typography variant='h5' style={{fontWeight: 'bold'}}>\n                        {id && id !== 'isFormCompleted' ? id.replace('_', ' ') : null}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\nexport default PreviewTableHead;\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport React from 'react';\nimport PreviewTableRow from 'components/preview/tables/PreviewTableRow';\nimport PreviewTableHead from 'components/preview/tables/PreviewTableHead';\n\nconst PreviewTable = ({id, subForm, identityForm}) => {\n    return (\n        <Table aria-label='simple table'>\n            <PreviewTableHead id={id}/>\n            <TableBody>\n                {\n                    Object.keys(subForm).map(subKey => subKey !== 'isCompleted' ?\n                    <PreviewTableRow id={id} subForm={subForm} identityForm={identityForm} subKey={subKey}/>\n                    : null)\n                }\n            </TableBody>\n        </Table>\n    );\n}\nexport default PreviewTable;\n","import React, {useState} from 'react';\nimport {Container} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IDENTITY_FORM from 'shared/forms/Forms';\nimport PreviewTable from 'components/preview/tables/PreviewTable';\n\nconst FormPreview = ({form}) => {\n    const [identityForm,] = useState(IDENTITY_FORM);\n    return (\n        <>\n            <CssBaseline/>\n            <Container maxWidth='sm'>\n                {\n                    Object.keys(form).map(key =>\n                        <PreviewTable identityForm={identityForm} id={key} subForm={form[key]}/>)\n                }\n            </Container>\n        </>\n    );\n}\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from 'components/preview/FormPreview';\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                fullWidth={true}\n                maxWidth='md'\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby='scroll-dialog-title'\n                aria-describedby='scroll-dialog-description'\n            >\n                <DialogTitle id='scroll-dialog-title'>Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id='scroll-dialog-description'\n                        ref={descriptionElementRef}\n                        tabIndex={-1}>\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color='primary'>Cancel</Button>\n                    <Button onClick={saveFormHandler} color='primary'>Save</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserProvider;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backButton: {\n        marginRight: theme.spacing(1),\n    }\n}));\n\nconst BackButton = ({formType, handleBack}) => {\n    const classes = useStyles();\n    return (\n        <Button disabled={formType.step === 0} onClick={handleBack} className={classes.backButton}>\n            Back\n        </Button>\n    );\n}\nexport default BackButton;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst NextButton = ({handleNext, isNextButtonDisable}) => {\n    return (\n        <Button variant=\"contained\" color=\"primary\" onClick={handleNext} disabled={isNextButtonDisable}>\n            Next\n        </Button>\n    );\n}\nexport default NextButton;\n","import Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst PreviewButton = ({setModalOpen, isNextButtonDisable}) => {\n    return (\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)} disabled={isNextButtonDisable}>\n            Preview\n        </Button>\n    );\n}\nexport default PreviewButton;\n","import MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\n\nconst MobileStepperWidget = ({formType, steps, handleNext, handleBack, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton handleBack={handleBack} formType={formType}/>;\n    const nextButton = <NextButton handleNext={handleNext} isNextButtonDisable={isNextButtonDisable}/>;\n    const previewButton = <PreviewButton isNextButtonDisable={isNextButtonDisable} setModalOpen={setModalOpen}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    const stepsView = (\n        steps.map((label) => (\n            <Step key={label} style={{color: 'red'}}>\n                <StepLabel>{label}</StepLabel>\n            </Step>\n        ))\n    );\n\n    return (\n        <MobileStepper activeStep={formType.step} alternativeLabel\n                       backButton={backButton} nextButton={nextView}\n                       steps={stepsView} />\n    );\n}\n\nexport default MobileStepperWidget;\n","import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\n\nconst DesktopStepper = ({formType, steps}) => {\n    return (\n        <Stepper activeStep={formType.step} alternativeLabel>\n            {steps.map((label) => (\n                <Step key={label} style={{color: 'red'}}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    );\n}\nexport default DesktopStepper;\n","import React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\n\nconst DesktopStepperButtons = ({formType, steps, handleBack, handleNext, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton formType={formType} handleBack={handleBack}/>;\n    const nextButton = <NextButton isNextButtonDisable={isNextButtonDisable} handleNext={handleNext}/>;\n    const previewButton = <PreviewButton setModalOpen={setModalOpen} isNextButtonDisable={isNextButtonDisable}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    return (\n        <div>\n            {backButton}\n            {nextView}\n        </div>\n    );\n}\nexport default DesktopStepperButtons;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Form from \"components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"shared/forms/Forms\";\nimport formTypes from \"shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {UpdateForm} from \"store/actions/FormHandler\";\nimport DialogView from \"components/modal/DialogView\";\nimport {UserContext} from \"providers/UserProvider\";\nimport {Redirect} from \"react-router\";\nimport {Container} from \"@material-ui/core\";\nimport MobileStepperWidget from \"components/form/mobileStepperWidget/MobileStepperWidget\";\nimport DesktopStepper from \"components/form/deskopStepper/DesktopStepper\";\nimport DesktopStepperButtons from \"components/form/deskopStepper/DesktopStepperButtons\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(UpdateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    const isFormComplete = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null)\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    //one time execution when component re-renders\n    useEffect(() => {\n        clearFormData();\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                        }\n                    }\n                }\n            }\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n        }\n\n    }, []);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = !field.validation.required;\n                        field.validation.isTouched = !field.validation.required;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id || event.target.name;\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            toggleInputsDisabled(formType, !event.target.checked);\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            field.validation.isValid = field.pattern ? _.clone(field.pattern).test(field.value) : true;\n            field.helperText = !field.validation.isValid ? field.text : '';\n        }\n        setSubFormComplete(isValid(subForm));\n        setNextButtonDisable(!isValid(subForm));\n        setIdentityForm(newIdentityForm);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                if (!field.disabled && !field.validation.isValid) {\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n    if (isFormComplete) {\n        return <Redirect to=\"/identity/congrats\"/>\n    }\n\n    const mobileStepper = <MobileStepperWidget\n        formType={formType}\n        handleBack={handleBack}\n        handleNext={handleNext}\n        isNextButtonDisable={isNextButtonDisable}\n        setModalOpen={setModalOpen}\n        steps={steps}\n    />;\n\n    const desktopStepper = <DesktopStepper steps={steps} formType={formType}/>;\n    const desktopButton = <DesktopStepperButtons\n        formType={formType}\n        steps={steps}\n        setModalOpen={setModalOpen}\n        isNextButtonDisable={isNextButtonDisable}\n        handleNext={handleNext}\n        handleBack={handleBack}\n    />\n\n    const stepper = window.screen.width < 600 ? mobileStepper : desktopStepper;\n    const stepperButton = window.screen.width >= 600 ? desktopButton : null;\n\n    return (\n        <Container>\n            {stepper}\n            <Container className={classes.root}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                </Paper>\n                {stepperButton}\n                <DialogView\n                    form={form}\n                    open={isModalOpen}\n                    modalHandler={() => setModalOpen(false)}\n                    saveFormHandler={handleSaveForm}\n                />\n            </Container>\n        </Container>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\nimport {Container} from \"@material-ui/core\";\n\n\nconst Preview = () => {\n    const form = useSelector(state => state.form.form);\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper  elevation={3}>\n                <FormPreview form={form}/>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\n\nexport default GuardedRoute;\n","import Grid from '@material-ui/core/Grid';\nimport {Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nconst FormLink = ({to, label}) => {\n    return (\n        <Grid container>\n            <Grid item>\n                <Link to={to} style={{textDecoration: 'none', outline: 'none'}}>\n                    <Button size='small' color='primary'>\n                        {label}\n                    </Button>\n                </Link>\n            </Grid>\n        </Grid>\n    )\n}\nexport default FormLink;\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport {Redirect} from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport Grid from '@material-ui/core/Grid';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TryLoginHandler} from 'store/actions/LoginHandler';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant='h5' component='h2'>\n                                        Identity\n                                    </Typography>\n                                    <Typography variant='body2' color='textSecondary' component='p'>\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <FormLink to={'/identity/login'} label={'Sign In'}/>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Introduction;\n","import React from 'react';\nimport Introduction from 'components/introduction/Introduction';\nimport {Grid} from '@material-ui/core';\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{minHeight: 'calc(100vh - 11vh)'}}\n        >\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n        </Grid>\n    );\n}\nexport default Home;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginEmail = ({username, setUserName}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n            autoFocus\n            value={username}\n            onChange={(event) => setUserName(event.target.value)}\n        />\n\n    );\n}\n\nexport default LoginEmail;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginPassword = ({password, setPassword}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n        />\n    );\n}\n\nexport default LoginPassword;\n","import CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {forwardRef} from 'react';\n\nconst FormSpinner = forwardRef((props, ref) => {\n    return (\n        <CircularProgress ref={ref} style={{marginTop: '8px', display: 'inline-block'}}>\n            {props}\n        </CircularProgress>\n    );\n})\nexport default FormSpinner;\n","import Button from '@material-ui/core/Button';\nimport React, {forwardRef} from 'react';\n\nconst SubmitButton = forwardRef(({className, isDisable = false, label}, ref) => {\n    return (\n        <Button\n            ref={ref}\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            style={{display: 'inline-flex'}}\n            className={className}\n            disabled={isDisable}>\n            {label}\n        </Button>\n    );\n})\n\nexport default SubmitButton;\n","import Typography from '@material-ui/core/Typography';\nimport MaterialLink from '@material-ui/core/Link';\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\n\nconst CopyRight = () => {\n    return (\n        <Box mt={5}>\n            <Typography variant='body2' color='textSecondary' align='center'>\n                {'Copyright © '}\n                <MaterialLink color='inherit' href='https://github.com/UbaidurRehman1/identity'>\n                    Identity\n                </MaterialLink>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Box>\n    );\n}\nexport default CopyRight;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoginHandler} from 'store/actions/LoginHandler';\nimport LoginEmail from 'components/login/LoginEmail';\nimport LoginPassword from 'components/login/LoginPassword';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormLink from 'components/links/FormLink';\nimport CopyRight from 'components/copyright/CopyRight';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    const spinnerRef = createRef();\n    const loginButtonRef = createRef();\n\n    const showSpinnerAndHideLoginButton = useCallback(() => {\n        if (spinnerRef.current) {spinnerRef.current.style.display = 'inline-block';}\n        if (loginButtonRef.current) {loginButtonRef.current.style.display = 'none';}\n    }, [spinnerRef, loginButtonRef]);\n\n    const hideSpinnerAndShowLoginButton = useCallback(() => {\n        if (spinnerRef.current) {spinnerRef.current.style.display = 'none';}\n        if (loginButtonRef.current) {loginButtonRef.current.style.display = 'inline-flex';}\n    }, [spinnerRef, loginButtonRef])\n\n    useEffect(() => {\n        isLoginStart ? showSpinnerAndHideLoginButton() : hideSpinnerAndShowLoginButton();\n    }, [hideSpinnerAndShowLoginButton, isLoginStart, showSpinnerAndHideLoginButton])\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Log in\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => login(event)}>\n                    <LoginEmail value={username} setUserName={setUsername}/>\n                    <LoginPassword value={password} setPassword={setPassword}/>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton ref={loginButtonRef} isDisable={false} className={classes.submit} label={'Log In'}/>\n                    <FormLink label={'Don\\'t have an account? Sign Up'} to={'/identity/signup'}/>\n                </form>\n            </div>\n            <CopyRight />\n        </Container>\n    );\n}\nexport default Login;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {SignUpHandler} from 'store/actions/SignUpHandler';\nimport {validateEmail, validateFieldLength, validatePassword, validateWholeForm} from 'shared/util/Utils';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport CopyRight from 'components/copyright/CopyRight';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const spinnerRef = createRef();\n    const submitRef = createRef();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(SignUpHandler(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            autoComplete: 'fname',\n            name: 'firstName',\n            variant: 'outlined',\n            fullWidth: true,\n            id: 'firstName',\n            key: 'firstName',\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'First Name'\n        },\n        lastName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'lastName',\n            ket: 'lastName',\n            name: 'lastName',\n            autoComplete: 'lname',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Last Name'\n        },\n        email: {\n            disabled: false,\n            value: '',\n            type: 'email',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'email',\n            key: 'email',\n            name: 'email',\n            autoComplete: 'email',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Email Address'\n        },\n        password: {\n            disabled: false,\n            value: '',\n            type: 'password',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            name: 'password',\n            id: 'password',\n            key: 'password',\n            autoComplete: 'current-password',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Password'\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n    const [isSignUpButtonEnable, setSignUpButtonEnable] = useState(false);\n\n    useEffect(() => {\n       if (isSignUpLoading) {\n           if (spinnerRef.current) spinnerRef.current.style.display = 'inline-block';\n           if (submitRef.current) submitRef.current.style.display = 'none';\n       } else {\n           if (spinnerRef.current) spinnerRef.current.style.display = 'none';\n           if (submitRef.current) submitRef.current.style.display = 'inline-flex';\n       }\n    }, [isSignUpLoading, spinnerRef, submitRef]);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n        setSignUpButtonEnable(validateWholeForm(newForm));\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        handleSignup(formData);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (<Grid item xs={12} sm={6} key={key}><TextField {...field}/></Grid>);\n                                } else {\n                                    return (<Grid item xs={12} key={key}><TextField{...field}/></Grid>);\n                                }\n                            })\n                        }\n                    </Grid>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton ref={submitRef} className={classes.submit} isDisable={!isSignUpButtonEnable} label='Sign Up'/>\n                    <FormLink to={'/identity/login'} label={'Already have an account? Sign in'}/>\n                </form>\n            </div>\n            <CopyRight />\n        </Container>\n    );\n}\n\nexport default SignUp;\n","export const validateFieldLength = field => {\n    if (field.validation.isTouched) {\n        if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n            field.validation.isValid = false;\n            field.error = true;\n            field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n        } else {\n            field.validation.isValid = true;\n            field.error = false;\n            field.helperText = '';\n        }\n    }\n}\n\nexport const validateEmail = emailField => {\n    const email = emailField.value;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isValid = re.test(String(email).toLowerCase());\n    if (!isValid) {\n        emailField.validation.isValid = false;\n        emailField.error = true;\n        emailField.helperText = 'Invalid Email Address';\n    } else {\n        emailField.validation.isValid = true;\n        emailField.error = false;\n        emailField.helperText = '';\n    }\n}\n\nexport const validatePassword = passwordField => {\n    const pw = passwordField.value;\n    const isValid = /[A-Z]/.test(pw) &&\n        /[a-z]/.test(pw) &&\n        /[0-9]/.test(pw) &&\n        /[^A-Za-z0-9]/.test(pw) &&\n        pw.length > 4;\n    if (!isValid) {\n        passwordField.validation.isValid = false;\n        passwordField.error = true;\n        passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n    } else {\n        passwordField.validation.isValid = true;\n        passwordField.error = false;\n        passwordField.helperText = '';\n    }\n}\n\nexport const validateWholeForm = (form) => {\n    let keys = Object.keys(form);\n    for (let key in keys) {\n        const field = form[keys[key]];\n        if (!field.validation.isValid) {\n            return false;\n        }\n    }\n    return true;\n}\n\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport {UserContext} from 'providers/UserProvider';\nimport {useSelector} from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport FormLink from 'components/links/FormLink';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        maxWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo ? state.login.formInfo.formId : null);\n    const isFormCompleted = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null);\n    const isFormTouched = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormTouched : null);\n\n    const formInfoView = useRef();\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = 'Welcome in Identity. Click below to start filling your Identity form';\n        } else if (!isFormCompleted) {\n            info = 'You have not completed your Identity form yet. Kindly complete your form as soon as possible';\n        } else if (isFormCompleted) {\n            info = 'Your Identity form is completed';\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2} justify={'flex-start'} style={{marginTop: '8px'}}>\n                    <Grid item>\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label='recipe' className={classes.avatar}>\n                                        U\n                                    </Avatar>\n                                }\n                                action={\n                                    <IconButton aria-label='settings'>\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                }\n                                title= 'Welcome Back'\n                                subheader={user.username}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image='/static/images/cards/paella.jpg'\n                                title='Paella dish'\n                            />\n                            <CardContent>\n                                <Typography ref={formInfoView} variant='body2' color='textSecondary' component='p'>\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label='add to favorites'>\n                                    <FavoriteIcon />\n                                </IconButton>\n                                <IconButton aria-label='share'>\n                                    <ShareIcon />\n                                </IconButton>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <FormLink label={'Click here to fill your identity form'} to={'/identity/create'}/>\n            </div>\n        </Container>\n    );\n}\n\nexport default Welcome;\n","import {REMOVE_FORM, LOGOUT} from 'store/actions/ActionTypes'\n\nconst LogoutHandler = () => {\n    return dispatch => {\n        localStorage.removeItem('userId');\n        localStorage.removeItem('token');\n        setTimeout(() => {\n            dispatch(removeForm());\n            dispatch(logoutHandler())\n        }, 2000);\n    }\n}\n\nconst logoutHandler = () => {\n    return {\n        type: LOGOUT\n    }\n}\n\nconst removeForm = () => {\n    return {\n        type: REMOVE_FORM\n    }\n}\n\nexport default LogoutHandler;\n","import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport LogoutHandler from 'store/actions/LogoutHandler';\n\nconst Logout = (props) => {\n\n    const dispatch = useDispatch();\n    const logout = useCallback(() => dispatch(LogoutHandler()), [dispatch]);\n\n    const userId = useSelector(state => state.login.id);\n\n    useEffect(() => {\n        logout();\n        if (!userId) {\n            props.location.pathname = '/identity'\n        }\n    });\n\n    return (\n        <p>You will be redirect to Introduction Page</p>\n    );\n}\nexport default Logout;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: 'auto',\n        marginTop: '5rem'\n    }\n});\n\nconst Congrats = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                    Congrats!\n                </Typography>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                    You have been registered in Identity. You will received your Identity Number through by SMS soon.\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <FormLink label='View Your Form' to='/identity/preview'/>\n                <FormLink label='Edit Your Form' to='/identity/create'/>\n            </CardActions>\n        </Card>\n    );\n}\nexport default Congrats;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\nimport UserProvider from \"./providers/UserProvider\";\nimport GuardedRoute from \"./hoc/gaurdedRoute/GaurdedRoute\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./containers/login/Login\";\nimport SignUp from \"./containers/signup/SignUp\";\nimport Welcome from \"./components/welcome/Welcome\";\nimport Logout from \"./containers/logout/Logout\";\nimport Congrats from \"./components/congrats/Congrats\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path=\"/identity/create\" exact component={Forms} />\n                <GuardedRoute path=\"/identity/preview\" exact component={Preview} />\n                <GuardedRoute path=\"/identity/welcome\" exact component={Welcome} />\n                <GuardedRoute path={\"/logout\"} exact component={Logout} />\n                <GuardedRoute path=\"/identity/congrats\" component={Congrats}/>\n                <Route path=\"/identity/signup\" exact component={SignUp}/>\n                <Route path=\"/identity/login\" exact component={Login}/>\n                <Route path=\"/identity\" exact component={Home}/>\n                <Route render={() => <Redirect to=\"/identity\" />}/>\n                {/*<Redirect to=\"/identity/preview\" />*/}\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport FormReducer from \"./store/reducers/FormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport SignupReducer from \"./store/reducers/SignupReducer\";\nimport LoginReducer from \"./store/reducers/LoginReducer\";\nimport ErrorReducer from \"./store/reducers/ErrorReducer\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: FormReducer,\n        auth: SignupReducer,\n        login: LoginReducer,\n        error: ErrorReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import {\n    NEXT_FORM,\n    REMOVE_FORM,\n    FORM_UPDATING,\n    POPULATE_FORM,\n    REMOVE_FORM_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst FormReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case REMOVE_FORM:\n            return {...state, formId: null, form: null, isCompleted: false, error: null, isUpdating: false}\n        case FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        case REMOVE_FORM_ERROR:\n            return {...state, error: null}\n        default:\n            return state;\n    }\n}\nexport default FormReducer;\n","import {\n    SIGNUP_START,\n    SIGNUP_FINISHED,\n    SIGNUP_ERROR,\n    SET_TIMEOUT,\n    REMOVE_SIGNUP_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: \"\",\n    isSignUpLoading: false,\n    timeout: null\n};\nconst SignupReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        case REMOVE_SIGNUP_ERROR:\n            return {...state, error: false, isSignUpLoading: false}\n        default:\n            return state;\n    }\n}\nexport default SignupReducer;\n","import {\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOGOUT,\n    UPDATE_USER_INFO,\n    REMOVE_LOGIN_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLogin: true,\n                loginStart: false,\n                loginError: false,\n                username: action.username,\n                token: action.token,\n                id: action.id,\n                entityId: action.entityId,\n                formInfo: action.formInfo\n            }\n        case LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                loginStart: false,\n                loginError: false,\n                username: null,\n                id: null,\n                entityId: null,\n                token: null,\n                formInfo: null\n            }\n        case UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        case REMOVE_LOGIN_ERROR:\n            return {...state, loginError: false, loginStart: false}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n","import {ERROR} from 'store/actions/ActionTypes';\n\nconst initialState = {\n    isError: false,\n    message: \"\"\n}\n\nconst ErrorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ERROR:\n            return {...state, isError: action.isError, message: action.message};\n        default:\n            return state;\n    }\n}\nexport default ErrorReducer;\n"],"sourceRoot":""}