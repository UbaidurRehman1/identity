{"version":3,"sources":["containers/appBar/AppNavBar.js","hoc/Layout/Layout.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","containers/Forms/Forms.js","App.js","serviceWorker.js","index.js","store/reducers/NextForm.js","store/actions/ActionTypes.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","className","AppBar","position","Toolbar","Typography","MenuItem","Layout","props","Fragment","children","alignItems","justifyContent","display","flexDirection","marginTop","margin","width","Form","form","fields","Object","keys","map","key","field","TextField","id","required","label","variant","IDENTITY_FORM","firstName","value","middleName","lastName","age","mobileNumber","metricMarks","intermediateMarks","bachelorCGPA","status","companyName","designationName","isVehicle","type","plateNumber","isHouse","houseNumber","formTypes","backButton","instructions","marginBottom","paper","padding","marginLeft","height","Forms","stepIndex","React","useState","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","length","Button","onClick","Paper","elevation","disabled","prevActiveStep","color","App","Boolean","window","location","hostname","match","store","initialState","personalInfo","educationalInfo","professionalInfo","exciseInfo","residentInfo","isPreview","NextFormReducer","state","action","formType","info","Error","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c3e2d38.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <MenuItem>Home</MenuItem>\n                    <MenuItem>Preview Form</MenuItem>\n                    <MenuItem className={classes.authItem}>Auth</MenuItem>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n}));\n\n\nconst Form = ({form}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).map(key => {\n        form[key]['id'] = key\n        return form[key];\n    });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    return (\n                        <TextField key={field.id} required={field.required} id={field.id} label={field.label} variant=\"outlined\" />\n                    );\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","export const PERSONAL_INFO = {\n    firstName: {\n        value: \"\",\n        required: true,\n        label: \"First Name\"\n    },\n    middleName: {\n        value: \"\",\n        required: false,\n        label: \"Middle Name\"\n    },\n    lastName: {\n        value: \"\",\n        required: true,\n        label: \"Last Name\"\n    },\n    age: {\n        value: \"\",\n        required: true,\n        label: \"Last Name\"\n    },\n    mobileNumber: {\n        value: \"\",\n        required: true,\n        label: \"Last Name\"\n    }\n}\n\nexport const EDUCATIONAL_INFO = {\n    metricMarks: {\n        value: \"\",\n        required: true,\n        label: \"Marks in Metric\"\n    },\n    intermediateMarks: {\n        value: \"\",\n        required: true,\n        label: \"Marks in Intermediate\"\n    },\n    bachelorCGPA: {\n        value: \"\",\n        required: true,\n        label: \"Bachelor CGPA\"\n    }\n}\nexport const PROFESSIONAL_INFO  = {\n    status: {\n        value: \"\",\n        required: true,\n        label: \"Current Status\"\n    },\n    companyName: {\n        value: \"\",\n        required: true,\n        label: \"Name of Company\"\n    },\n    designationName: {\n        value: \"\",\n        required: true,\n        label: \"Designation Name\"\n    }\n}\nexport const EXCISE_INFO = {\n    isVehicle: {\n        value: \"\",\n        required: true,\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        value: \"\",\n        required: true,\n        label: \"Type\"\n    },\n    plateNumber: {\n        value: \"\",\n        required: true,\n        label: \"Plate Number\"\n    }\n}\nexport const RESIDENT_INFO = {\n    isHouse: {\n        value: \"\",\n        required: true,\n        label: \"Are you own a house?\"\n    },\n    houseNumber: {\n        value: \"\",\n        required: true,\n        label: \"houseNumber\"\n    },\n}\n\nconst IDENTITY_FORM = [PERSONAL_INFO, EDUCATIONAL_INFO, PROFESSIONAL_INFO, EXCISE_INFO, RESIDENT_INFO];\nexport default IDENTITY_FORM;\n","export const PERSONAL_INFO = {label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_INFO = {label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_INFO = {label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_INFO = {label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_INFO = {label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nconst formTypes = [PERSONAL_INFO, EDUCATIONAL_INFO, PROFESSIONAL_INFO, EXCISE_INFO, RESIDENT_INFO];\nexport default formTypes;\n","import React from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    }\n}));\n\n\n\nfunction getSteps() {\n    return formTypes.map(type => type.label);\n}\n\n\n\nfunction getStepContent(stepIndex) {\n    return <Form form={IDENTITY_FORM[stepIndex]}/>;\n}\n\n\n\nconst Forms = () => {\n\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {activeStep === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>All steps completed</Typography>\n                        <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            {getStepContent(activeStep)}\n                        </Paper>\n                        <div>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Forms;\n","import React from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Forms>\n\n                </Forms>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextForm\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nlet store;\nif (env) {\n    store = createStore(NextFormReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(NextFormReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    personalInfo: null,\n    educationalInfo: null,\n    professionalInfo: null,\n    exciseInfo: null,\n    residentInfo: null,\n    isPreview: false,\n}\n\nconst NextFormReducer = (state, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...initialState, [action.formType]:action.info}\n        default:\n            return new Error();\n    }\n}\n\nexport default NextFormReducer;\n","export const NEXT_FORM = \"NEXT_FORM\";\n"],"sourceRoot":""}