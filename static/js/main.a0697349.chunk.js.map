{"version":3,"sources":["containers/appBar/AppNavBar.js","requestHandler/RequestHandler.js","store/actions/Form.js","store/actions/ActionTypes.js","store/actions/Login.js","store/actions/SignUp.js","store/actions/Error.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/introduction/Introduction.js","components/home/Home.js","components/login/Login.js","components/signup/SignUp.js","components/welcome/Welcome.js","store/actions/LogoutHandler.js","components/logout/Logout.js","components/congrats/Congrats.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js","store/reducers/AuthReducer.js","store/reducers/LoginReducer.js","store/reducers/ErrorReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","userId","useSelector","state","login","id","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","RequestResolver","axios","create","baseURL","_updateUserInfo","formId","form","user","dispatch","formInfo","isFormCompleted","isFormTouched","put","entityId","username","then","UpdateUserInfo","catch","error","ErrorHandler","response","data","message","nextForm","info","type","formUpdating","PopulateForm","isCompleted","_handleUserResponse","token","Object","keys","map","key","infoObject","LoginSuccess","get","console","log","PopulateFormHandler","LoginStart","storeToken","expiryTime","localStorage","setItem","timeout","setTimeout","removeItem","SignUpStart","payload","SignUpFinished","_ErrorHandler","isError","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Layout","props","useState","open","setOpen","errorMessage","errorRef","useRef","useDispatch","removeError","useCallback","useEffect","Fragment","children","Modal","aria-labelledby","aria-describedby","onClose","prevState","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","ref","formControl","margin","minWidth","SelectInput","formType","required","disabled","label","value","options","handler","FormControl","variant","InputLabel","Select","native","labelId","name","onChange","event","aria-label","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","flexDirection","marginTop","width","selectEmpty","Form","fields","filter","field","TextField","validation","isTouched","isValid","helperText","hidden","placeholder","PERSONAL_INFO","firstName","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","FormPreview","IDENTITY_FORM","identityForm","CssBaseline","Container","subForm","replace","Grid","container","subKey","item","DialogView","modalHandler","saveFormHandler","descriptionElementRef","React","descriptionElement","current","focus","Dialog","scroll","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","Provider","backButton","instructions","marginBottom","marginLeft","height","stepProgress","Forms","setFormType","isSubFormComplete","setSubFormComplete","steps","useContext","submitFormInfo","post","updateForm","isFormComplete","setIdentityForm","isNextButtonDisable","setNextButtonDisable","isModalOpen","setModalOpen","getFormData","_","clone","formData","subFormTypes","slice","includes","hasOwnProperty","clearFormData","newIdentityForm","subRemoteForm","setNextButtonEnable","handleNext","prevActiveStep","handleBack","toggleInputsDisabled","isDisable","mobileStepper","MobileStepper","activeStep","alternativeLabel","nextButton","length","Step","StepLabel","desktopStepper","Stepper","desktopButton","window","screen","Paper","elevation","inputType","fieldName","target","undefined","_isValid","test","Preview","GuardedRoute","Component","component","rest","render","avatar","secondary","main","submit","Introduction","tryLoginHandler","getItem","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","size","Home","direction","justify","minHeight","xs","xl","sm","Copyright","align","href","Date","getFullYear","Login","setUsername","password","setPassword","loginHandler","idToken","localId","expiresIn","LoginHandler","isLoginStart","loginStart","onSubmit","preventDefault","fullWidth","autoComplete","autoFocus","CircularProgress","Box","mt","SignUp","handleSignup","userData","signup","auth","isSignUpLoading","isSignUpButtonEnable","setSignUpButtonEnable","SIGNUP_FORM","onChangeHandler","minLength","maxLength","ket","email","setForm","fieldId","newForm","validateFieldLength","validateEmail","validatePassword","validateWholeForm","emailField","String","toLowerCase","passwordField","pw","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","disableSpacing","_logoutHandler","_removeForm","LogoutHandler","Logout","logout","location","pathname","Congrats","App","routes","fallback","path","exact","Boolean","hostname","match","store","initialState","isUpdating","NextFormReducer","AuthReducer","loginError","LoginReducer","ErrorReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0697349.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    const userId = useSelector(state => state.login.id);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/welcome\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"/logout\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>{userId ? \"Logout\" : null}</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {UpdateUserInfo} from \"./Login\";\nimport ErrorHandler from \"./Error\";\n\nconst _updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    RequestResolver.put(`/users/${user.entityId}.json`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        dispatch(ErrorHandler(true, error.response.data.error.message));\n    })\n}\n\nexport const updateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(() => {\n                    _updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    _updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                    dispatch(ErrorHandler(true, error.response.data.error.message))\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        RequestResolver.get(`/identity/${formId}.json`)\n            .then(response => {\n                dispatch(PopulateForm(response.data, formId));\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nexport const PopulateForm = (form, formId) => {\n    return {\n        type: actionTypes.POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n\nexport const RemoveFormError = () => {\n    return {\n        type: actionTypes.REMOVE_FORM_ERROR\n    }\n}\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const REMOVE_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\nexport const POPULATE_FORM = \"POPULATE_FORM\";\n\n\nexport const SIGNUP = \"SIGNUP\";\nexport const SIGNUP_START = \"SIGNUP_START\";\nexport const SIGNUP_FINISHED = \"SIGNUP_FINISHED\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR  = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGIN_TRY = \"LOGIN_TRY\";\n\nexport const UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\n\nexport const ERROR = \"ERROR\";\nexport const REMOVE_LOGIN_ERROR = \"REMOVE_LOGIN_ERROR\";\nexport const REMOVE_SIGNUP_ERROR = \"REMOVE_SIGNUP_ERROR\";\nexport const REMOVE_FORM_ERROR = \"REMOVE_FORM_ERROR\";\n","import axios from 'axios'\nimport * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {PopulateFormHandler} from \"./Form\";\nimport ErrorHandler from \"./Error\";\n\nfunction _handleUserResponse(response, dispatch, token) {\n    const [entityId] = Object.keys(response.data);\n    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n    dispatch(LoginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n    const formId = infoObject.formInfo ? infoObject.formInfo.formId : null;\n    if (formId) {\n        dispatch(PopulateFormHandler(formId))\n    }\n}\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(LoginStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, {\n            \"email\": username,\n            \"password\": password\n        })\n            .then(response => {\n                const token = response.data.idToken;\n                const userId = response.data.localId;\n                const expiryTime = response.data.expiresIn;\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n                localStorage.setItem('expiryTime', expiryTime);\n                RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                    .then(response => _handleUserResponse(response, dispatch, token))\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.message))\n                    });\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            });\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => _handleUserResponse(response, dispatch, token))\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response.data.error.message));\n                });\n        }\n    }\n}\n\nconst LoginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\n\nconst LoginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: actionTypes.UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nexport const RemoveLoginError = () => {\n    return {\n        type: actionTypes.REMOVE_LOGIN_ERROR\n    }\n}\n\n","import RequestResolver from \"../../requestHandler/RequestHandler\";\nimport axios from 'axios';\nimport * as actionTypes from './ActionTypes';\nimport ErrorHandler from \"./Error\";\n\nexport const signup = (userData) => {\n    return dispatch => {\n        dispatch(SignUpStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, userData)\n            .then(response => {\n                RequestResolver.post('/users.json', {username: userData.firstName + ' ' + userData.lastName, userId: response.data.localId})\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(SignUpFinished({...response.data, username: userData.firstName + ' ' + userData.lastName}))\n                    })\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.response.data.error.message))\n                    })\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response.data.error.message))\n            })\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: actionTypes.SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nexport const SignUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START,\n        payload: null\n    }\n}\n\nexport const SignUpFinished = (data) => {\n    return {\n        type: actionTypes.SIGNUP_FINISHED,\n        payload: data\n    }\n}\n\nexport const RemoveSignUpError = () => {\n    return {\n        type: actionTypes.REMOVE_SIGNUP_ERROR\n    }\n}\n","import * as actionTypes from '../actions/ActionTypes';\nimport {RemoveLoginError} from \"./Login\";\nimport {RemoveSignUpError} from \"./SignUp\";\nimport {RemoveFormError} from \"./Form\";\n\nconst ErrorHandler = (isError, message) => {\n    return dispatch => {\n        if (!isError) {\n            dispatch(RemoveLoginError());\n            dispatch(RemoveSignUpError());\n            dispatch(RemoveFormError());\n        }\n        dispatch(_ErrorHandler(isError, message));\n    }\n}\n\nconst _ErrorHandler = (isError, message) => {\n    return {\n        type: actionTypes.ERROR,\n        isError: isError,\n        message: message\n    }\n}\n\nexport default ErrorHandler;\n","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ErrorHandler from \"../../store/actions/Error\";\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst Layout = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const isError = useSelector(state => state.error.isError);\n    const errorMessage = useSelector(state => state.error.message);\n\n    const errorRef = useRef();\n\n    const dispatch = useDispatch();\n    const removeError = useCallback(() => dispatch(ErrorHandler(false, \"\")), [dispatch]);\n\n    useEffect(() => {\n        setOpen(isError);\n    }, [isError])\n\n    const handler = () => {\n        setOpen(prevState => !prevState);\n        removeError();\n    }\n\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handler}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id=\"transition-modal-title\">Error</h2>\n                        <h3 ref={errorRef} id=\"transition-modal-description\">{errorMessage}</h3>\n                    </div>\n                </Fade>\n            </Modal>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    }\n}));\n\nconst SelectInput = ({formType, required, id, disabled, label, value, options, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={required}\n            variant=\"outlined\"\n            className={classes.formControl}\n            key={id}\n            disabled={disabled}\n        >\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                required={required}\n                native\n                labelId={id}\n                key={id}\n                id={id}\n                name={id}\n                value={value}\n                label={label}\n                onChange={(event) => handler(event, formType, \"input\")}\n            >\n                <option key={\"none\"} aria-label=\"None\" value=\"\"/>\n                {\n                    options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Check = ({id, label, value, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={id}\n            label={label}\n            labelPlacement={\"end\"}\n            control={\n                <Checkbox\n                    key={id}\n                    value={value}\n                    checked={value}\n                    onChange={event => handler(event, formType, \"check\")}\n                    id={id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from \"../inputs/Select\";\nimport Check from \"../inputs/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case \"text\":\n                            return (\n                                <TextField\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    placeholder={field.placeholder}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"number\":\n                            return (\n                                <TextField\n                                    type={\"number\"}\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"select\":\n                            return (\n                                <SelectInput\n                                    required={field.validation.required}\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    value={field.value}\n                                    label={field.label}\n                                    id={field.id}\n                                    key={field.id}\n                                    options={field.options}\n                                    formType={formType}\n                                    handler={handler}\n                                />\n                            );\n                        case \"check\":\n                            return (\n                                <Check\n                                    key={field.id}\n                                    handler={handler}\n                                    formType={formType}\n                                    id={field.id}\n                                    label={field.label}\n                                    value={field.value}\n                                />\n                            )\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"+92-3xx-xxxxxxx\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        disabled: true,\n        value: \"Bike\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"AKK-2915\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Do you own a house?\"\n    },\n    houseNumber: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"XXX-DDDDDD\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import React, {useState} from \"react\";\nimport {Container, Grid, Typography} from \"@material-ui/core\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\n\n\nconst FormPreview = ({form}) => {\n\n    const [identityForm, ] = useState(IDENTITY_FORM);\n\n    return (\n        <>\n            <CssBaseline/>\n            <Container maxWidth=\"sm\">\n                {\n                    Object.keys(form).map(key => {\n                        const subForm = form[key];\n                        return (\n                            <>\n                                <h1>{key.replace(\"_\", \" \")}</h1>\n                                <Grid container>\n                                    {\n                                        Object.keys(subForm).map(subKey => {\n                                            return (\n                                                <>\n                                                    <Grid container spacing={4} alignItems=\"center\">\n                                                        <Grid item style={{flexGrow: 1}}>\n                                                            <Typography>\n                                                                {identityForm[key][subKey] ? identityForm[key][subKey].label : null}\n                                                            </Typography>\n                                                        </Grid>\n                                                        <Grid item style={{flexGrow: 1}}>\n                                                            {form[key][subKey]}\n                                                        </Grid>\n                                                    </Grid>\n                                                </>\n                                            )\n                                        })\n                                    }\n                                </Grid>\n                            </>\n                        )\n                    })\n                }\n            </Container>\n        </>\n    );\n}\n\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from \"../preview/FormPreview\";\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={saveFormHandler} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserProvider;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"../../store/actions/Form\";\nimport DialogView from \"../../components/modal/DialogView\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {Redirect} from \"react-router\";\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport {Container} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    },\n    stepProgress: {\n        color: \"red\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(updateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    const isFormComplete = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null)\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n\n    useEffect(() => {\n        clearFormData();\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                        }\n                    }\n                }\n            }\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n        }\n\n    }, []);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = false;\n                        field.validation.isTouched = false;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id;\n        if (fieldName === undefined) {\n            fieldName = event.target.name;\n        }\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            if (event.target.checked) {\n                toggleInputsDisabled(formType, false);\n            } else {\n                toggleInputsDisabled(formType, true);\n            }\n        } else if (inputType === \"select\") {\n            console.log(inputType);\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            let pattern;\n            let validation = field.validation;\n            field.helperText = '';\n            let _isValid;\n            switch (field.id) {\n                case 'firstName':\n                    pattern = /^[A-z]{3,8}$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 8 and less than 3 Alphabets\" : \"\";\n                    break;\n                case 'middleName':\n                    pattern = /^[A-z]?[A-z]?[A-z]?[A-z]?$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 4\" : \"\";\n                    break;\n                case 'lastName':\n                    pattern = /^[A-z]{2,8}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 8 and less than 2 Alphabets\" : \"\";\n                    break;\n                case 'age':\n                    pattern = /^[1-9][0-9]?$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Please Enter Age between 1 and 99\" : \"\";\n                    break;\n                case 'mobileNumber':\n                    pattern = /^[+][9][2][-][3][0-4][0-9][-][0-9]{7}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Mobile Number should be in this pattern +92-3xx-xxxxxx\" : \"\";\n                    break;\n                case 'metricMarks':\n                    pattern = /^[1-9][0-9]?%$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Invalid Input. Should like this xx%\" : \"\";\n                    break;\n                case 'intermediateMarks':\n                    pattern = /^[1-9][0-9]?%$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Invalid Input. Should like this xx%\" : \"\";\n                    break;\n                case 'bachelorCGPA':\n                    pattern = /^[1-9]+$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Select CGPA\" : \"\";\n                    break;\n                case 'companyName':\n                    pattern = /^[A-z]{3,15}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Space is allowed. Range [3, 15]\" : \"\";\n                    break;\n                case 'designationName':\n                    pattern = /^[A-z]{3,15}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Space is allowed. Range [3, 15]\" : \"\";\n                    break;\n                case 'type':\n                    pattern = /^[A-z]+$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Select Type\" : \"\";\n                    break;\n                case 'plateNumber':\n                    pattern = /^[A-Z]{3}-[0-9]{4}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Not a valid plate number. Format should be like AKK-2915\" : \"\";\n                    break;\n                case 'houseNumber':\n                    pattern = /^[A-Z]{3}-[0-9]{6}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Not a valid plate number. Format should be like JND-233232\" : \"\";\n                    break;\n                default:\n            }\n        }\n        //validation checking of whole subform\n        if (isValid(subForm)) {\n            setSubFormComplete(true);\n            setNextButtonDisable(false);\n        } else {\n            setSubFormComplete(false);\n            setNextButtonDisable(true)\n        }\n        //validation checking end\n        setIdentityForm(newIdentityForm);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                if (!field.disabled && !field.validation.isValid) {\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n    if (isFormComplete) {\n        return <Redirect to=\"/identity/congrats\"/>\n    }\n\n    const mobileStepper = (\n        <MobileStepper activeStep={formType.step} alternativeLabel backButton={\n            <Button\n                disabled={formType.step === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n            >\n                Back\n            </Button>\n\n        } nextButton={\n            formType.step !== steps.length - 1 ?\n                <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                        disabled={isNextButtonDisable}>\n                    Next\n                </Button> :\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)}\n                        disabled={isNextButtonDisable}>\n                    Preview\n                </Button>\n\n        } steps={\n            steps.map((label) => (\n                <Step\n                    key={label}\n                    className={classes.stepProgress}\n                >\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))\n        }>\n        </MobileStepper>\n\n    );\n\n    const desktopStepper = (\n        <Stepper activeStep={formType.step} alternativeLabel>\n            {steps.map((label) => (\n                <Step\n                    key={label}\n                    className={classes.stepProgress}\n                >\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    );\n\n    const desktopButton = (\n        <div>\n            <Button\n                disabled={formType.step === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n            >\n                Back\n            </Button>\n            {\n                formType.step !== steps.length - 1 ?\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                            disabled={isNextButtonDisable}>\n                        Next\n                    </Button> :\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)}\n                            disabled={isNextButtonDisable}>\n                        Preview\n                    </Button>\n            }\n        </div>\n    );\n\n    return (\n        <Container>\n            {\n                window.screen.width < 600 ? mobileStepper : desktopStepper\n            }\n            <div className={classes.root}>\n                <div>\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                        </Paper>\n                    </div>\n                    {\n                        window.screen.width >= 600 ? desktopButton : null\n                    }\n                </div>\n                <DialogView form={form} open={isModalOpen} modalHandler={() => setModalOpen(false)}\n                            saveFormHandler={handleSaveForm}/>\n            </div>\n        </Container>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\nimport {Container} from \"@material-ui/core\";\n\n\nconst Preview = () => {\n    const form = useSelector(state => state.form.form);\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper  elevation={3}>\n                <FormPreview form={form}/>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\n\nexport default GuardedRoute;\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link, Redirect} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TryLoginHandler} from \"../../store/actions/Login\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\" />\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        Identity\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Sign In\n                                    </Button>\n                                </Link>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Introduction;\n","import React from \"react\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport Introduction from \"../introduction/Introduction\";\nimport {Grid} from \"@material-ui/core\";\n\n// const useStyles = makeStyles(theme => ({\n//     paper: {\n//         padding: theme.spacing(1),\n//         textAlign: \"center\",\n//         color: theme.palette.text.primary,\n//         background: theme.palette.grey,\n//         height: `calc(100vh -  11vh)`\n//\n//     }\n// }));\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: 'calc(100vh - 11vh)' }}\n        >\n\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n\n        </Grid>     );\n}\nexport default Home;\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LoginHandler} from \"../../store/actions/Login\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => login(event)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    {\n                        isLoginStart ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Log In\n                            </Button>\n\n                    }\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/identity/signup\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Don't have an account? Sign Up\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default Login;\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signup} from \"../../store/actions/SignUp\";\n\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(signup(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n    const [isSignUpButtonEnable, setSignUpButtonEnable] = useState(false);\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            autoComplete: \"fname\",\n            name: \"firstName\",\n            variant: \"outlined\",\n            fullWidth: true,\n            id: \"firstName\",\n            key: \"firstName\",\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"First Name\"\n        },\n        lastName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            ket: \"lastName\",\n            name: \"lastName\",\n            autoComplete: \"lname\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Last Name\"\n        },\n        email: {\n            disabled: false,\n            value: \"\",\n            type: \"email\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            key: \"email\",\n            name: \"email\",\n            autoComplete: \"email\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Email Address\"\n        },\n        password: {\n            disabled: false,\n            value: \"\",\n            type: \"password\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            id: \"password\",\n            key: \"password\",\n            autoComplete: \"current-password\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Password\"\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n        setSignUpButtonEnable(validateWholeForm(newForm));\n    }\n\n    const validateFieldLength = field => {\n        if (field.validation.isTouched) {\n            if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n                field.validation.isValid = false;\n                field.error = true;\n                field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n            } else {\n                field.validation.isValid = true;\n                field.error = false;\n                field.helperText = '';\n            }\n        }\n    }\n\n    const validateEmail = emailField => {\n        const email = emailField.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isValid = re.test(String(email).toLowerCase());\n        if (!isValid) {\n            emailField.validation.isValid = false;\n            emailField.error = true;\n            emailField.helperText = 'Invalid Email Address';\n        } else {\n            emailField.validation.isValid = true;\n            emailField.error = false;\n            emailField.helperText = '';\n        }\n\n    }\n\n    const validatePassword = passwordField => {\n        const pw = passwordField.value;\n        const isValid = /[A-Z]/.test(pw) &&\n            /[a-z]/.test(pw) &&\n            /[0-9]/.test(pw) &&\n            /[^A-Za-z0-9]/.test(pw) &&\n            pw.length > 4;\n        if (!isValid) {\n            passwordField.validation.isValid = false;\n            passwordField.error = true;\n            passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n        } else {\n            passwordField.validation.isValid = true;\n            passwordField.error = false;\n            passwordField.helperText = '';\n        }\n\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        handleSignup(formData);\n    }\n\n    const validateWholeForm = (form) => {\n        let keys = Object.keys(form);\n        for (let key in keys) {\n            const field = form[keys[key]];\n            if (!field.validation.isValid) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (\n                                        <Grid item xs={12} sm={6} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                } else {\n                                    return (\n                                        <Grid item xs={12} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                }\n                            })\n                        }\n                    </Grid>\n                    {\n                        isSignUpLoading ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                disabled={!isSignUpButtonEnable}\n                            >\n                                Sign Up\n                            </Button>\n                    }\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Already have an account? Sign in\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default SignUp;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        maxWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo ? state.login.formInfo.formId : null);\n    const isFormCompleted = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null);\n    const isFormTouched = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormTouched : null);\n\n    const formInfoView = useRef();\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = \"Welcome in Identity. Click below to start filling your Identity form\";\n        } else if (!isFormCompleted) {\n            info = \"You have not completed your Identity form yet. Kindly complete your form as soon as possible\";\n        } else if (isFormCompleted) {\n            info = \"Your Identity form is completed\";\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2} justify={\"flex-start\"} style={{marginTop: '8px'}}>\n                    <Grid item>\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        U\n                                    </Avatar>\n                                }\n                                action={\n                                    <IconButton aria-label=\"settings\">\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                }\n                                title= \"Welcome Back\"\n                                subheader={user.username}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/paella.jpg\"\n                                title=\"Paella dish\"\n                            />\n                            <CardContent>\n                                <Typography ref={formInfoView} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label=\"add to favorites\">\n                                    <FavoriteIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"share\">\n                                    <ShareIcon />\n                                </IconButton>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} justify={\"flex-start\"}>\n                    <Grid item>\n                        <Link to=\"/identity/create\" style={{textDecoration: 'none', outline: \"none\"}}>\n                            <Button size=\"small\" color=\"primary\">\n                                Click here to fill your identity form\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Welcome;\n","import * as actionTypes from '../actions/ActionTypes';\n\nconst LogoutHandler = () => {\n    return dispatch => {\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"token\");\n        setTimeout(() => {\n            dispatch(_removeForm());\n            dispatch(_logoutHandler())\n        }, 2000);\n    }\n\n}\n\nconst _logoutHandler = () => {\n    return {\n        type: actionTypes.LOGOUT\n    }\n}\n\nconst _removeForm = () => {\n    return {\n        type: actionTypes.REMOVE_FORM\n    }\n}\n\nexport default LogoutHandler;\n","import React, {useCallback, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport LogoutHandler from \"../../store/actions/LogoutHandler\";\n\nconst Logout = (props) => {\n    const dispatch = useDispatch();\n    const logout = useCallback(() => dispatch(LogoutHandler()), [dispatch]);\n\n    const logoutHandler  = () => {\n        logout();\n    }\n\n    const userId = useSelector(state => state.login.id);\n\n    useEffect(() => {\n        logoutHandler();\n       if (!userId) {\n           props.location.pathname = \"/identity\"\n       }\n    });\n\n    return (\n        <p>You will be redirect to Introduction Page</p>\n    );\n}\n\nexport default Logout;\n","import React from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: \"auto\",\n        marginTop: \"5rem\"\n    }\n});\n\nconst Congrats = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Congrats!\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    You have been registered in Identity. You will received your Identity Number through by SMS soon.\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Link to=\"/identity/preview\" style={{textDecoration: 'none', outline: \"none\"}}>\n                    <Button size=\"small\" color=\"primary\">\n                        View Your Form\n                    </Button>\n                </Link>\n                <Link to=\"/identity/create\" style={{textDecoration: 'none', outline: \"none\"}}>\n                    <Button size=\"small\" color=\"primary\">\n                        Edit Your Form\n                    </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Congrats;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\nimport UserProvider from \"./providers/UserProvider\";\nimport GuardedRoute from \"./hoc/gaurdedRoute/GaurdedRoute\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./components/login/Login\";\nimport SignUp from \"./components/signup/SignUp\";\nimport Welcome from \"./components/welcome/Welcome\";\nimport Logout from \"./components/logout/Logout\";\nimport Congrats from \"./components/congrats/Congrats\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path=\"/identity/create\" exact component={Forms} />\n                <GuardedRoute path=\"/identity/preview\" exact component={Preview} />\n                <GuardedRoute path=\"/identity/welcome\" exact component={Welcome} />\n                <GuardedRoute path={\"/logout\"} exact component={Logout} />\n                <GuardedRoute path=\"/identity/congrats\" component={Congrats}/>\n                <Route path=\"/identity/signup\" exact component={SignUp}/>\n                <Route path=\"/identity/login\" exact component={Login}/>\n                <Route path=\"/identity\" exact component={Home}/>\n                <Route render={() => <Redirect to=\"/identity\" />}/>\n                {/*<Redirect to=\"/identity/preview\" />*/}\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AuthReducer from \"./store/reducers/AuthReducer\";\nimport LoginReducer from \"./store/reducers/LoginReducer\";\nimport ErrorReducer from \"./store/reducers/ErrorReducer\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer,\n        auth: AuthReducer,\n        login: LoginReducer,\n        error: ErrorReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.REMOVE_FORM:\n            return {...state, formId: null, form: null, isCompleted: false, error: null, isUpdating: false}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case actionTypes.POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        case actionTypes.REMOVE_FORM_ERROR:\n            return {...state, error: null}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: \"\",\n    isSignUpLoading: false,\n    timeout: null\n};\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case actionTypes.SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case actionTypes.SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case actionTypes.SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        case actionTypes.REMOVE_SIGNUP_ERROR:\n            return {...state, error: false, isSignUpLoading: false}\n        default:\n            return state;\n    }\n}\n\nexport default AuthReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case actionTypes.LOGIN_SUCCESS:\n            return {...state, isLogin: true, loginStart: false, loginError: false, username: action.username, token: action.token, id: action.id, entityId: action.entityId, formInfo: action.formInfo}\n        case actionTypes.LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case actionTypes.LOGOUT:\n            return {...state, isLogin: false, loginStart: false, loginError: false, username: null, id: null, entityId: null, token: null, formInfo: null}\n        case actionTypes.UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        case actionTypes.REMOVE_LOGIN_ERROR:\n            return {...state, loginError: false, loginStart: false}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n","import * as actionTypes from '../actions/ActionTypes';\n\nconst initialState = {\n    isError: false,\n    message: \"\"\n}\n\nconst ErrorReducer = (state  = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ERROR:\n            return {...state, isError: action.isError, message: action.message};\n        default:\n            return state;\n    }\n}\n\nexport default ErrorReducer;\n"],"sourceRoot":""}