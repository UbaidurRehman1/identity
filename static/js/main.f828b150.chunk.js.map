{"version":3,"sources":["containers/appBar/AppNavBar.js","requestHandler/RequestHandler.js","store/actions/FormHandler.js","store/actions/ActionTypes.js","requestHandler/AuthHandler.js","store/actions/LoginHandler.js","store/actions/SignUpHandler.js","store/actions/ErrorHandler.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/inputs/FormTextField.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","components/preview/tables/PreviewTableRow.js","components/preview/tables/PreviewTableHead.js","components/preview/tables/PreviewTable.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","components/form/buttons/BackButton.js","components/form/buttons/NextButton.js","components/form/buttons/PreviewButton.js","components/form/mobileStepperWidget/MobileStepperWidget.js","components/form/deskopStepper/DesktopStepper.js","components/form/deskopStepper/DesktopStepperButtons.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/links/FormLink.js","components/introduction/Introduction.js","components/home/Home.js","components/login/LoginEmail.js","components/login/LoginPassword.js","components/inputs/FormSpinner.js","components/inputs/SubmitButton.js","components/copyright/CopyRight.js","containers/login/Login.js","containers/signup/SignUp.js","shared/util/Utils.js","components/welcome/Welcome.js","store/actions/LogoutHandler.js","containers/logout/Logout.js","components/congrats/Congrats.js","hoc/editForm/EditForm.js","App.js","serviceWorker.js","index.js","store/reducers/FormReducer.js","store/reducers/SignupReducer.js","store/reducers/LoginReducer.js","store/reducers/ErrorReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","userId","useSelector","state","login","id","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","RequestResolver","axios","create","baseURL","updateUserInfo","formId","form","user","dispatch","formInfo","isFormCompleted","isFormTouched","token","localStorage","getItem","put","entityId","username","then","UpdateUserInfo","catch","error","ErrorHandler","response","data","message","nextForm","info","type","formUpdating","populateForm","isCompleted","AuthHandler","params","key","process","returnSecureToken","loginStart","setInfoInLocalStorage","idToken","localId","expiryTime","expiresIn","setItem","handleUserResponse","Object","keys","map","infoObject","loginSuccess","get","PopulateFormHandler","storeToken","timeout","setTimeout","removeItem","signUpStart","payload","signUpFinished","errorHandler","isError","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","Layout","props","useState","open","setOpen","errorMessage","errorRef","useRef","useDispatch","removeError","useCallback","useEffect","Fragment","children","Modal","aria-labelledby","aria-describedby","onClose","prevState","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","ref","formControl","margin","minWidth","SelectInput","formType","field","handler","FormControl","required","validation","variant","disabled","InputLabel","label","Select","isTouched","isValid","native","labelId","name","value","onChange","event","aria-label","options","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","FormTextField","TextField","helperText","hidden","placeholder","flexDirection","marginTop","width","selectEmpty","Form","fields","filter","PERSONAL_INFO","firstName","text","pattern","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","PreviewTableRow","subForm","identityForm","subKey","TableRow","TableCell","component","scope","align","PreviewTableHead","TableHead","colSpan","fontWeight","replace","PreviewTable","checkedFields","Table","TableBody","includes","FormPreview","IDENTITY_FORM","CssBaseline","Container","DialogView","modalHandler","saveFormHandler","Dialog","fullWidth","scroll","DialogTitle","DialogContent","dividers","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","Provider","backButton","BackButton","handleBack","NextButton","handleNext","isNextButtonDisable","PreviewButton","setModalOpen","MobileStepperWidget","steps","nextButton","previewButton","nextView","length","Grid","container","justify","item","StepLabel","MobileStepper","activeStep","alternativeLabel","DesktopStepper","Stepper","Step","DesktopStepperButtons","instructions","marginBottom","marginLeft","height","Forms","isEdit","location","React","setFormType","isSubFormComplete","setSubFormComplete","useContext","submitFormInfo","post","UpdateForm","isFormComplete","setIdentityForm","setNextButtonDisable","isModalOpen","getFormData","_","clone","formData","subFormTypes","slice","hasOwnProperty","clearFormData","newIdentityForm","subRemoteForm","setNextButtonEnable","prevActiveStep","pathname","mobileStepper","desktopStepper","desktopButton","stepper","window","screen","stepperButton","Paper","elevation","inputType","fieldName","target","isDisable","toggleInputsDisabled","test","Preview","GuardedRoute","Component","rest","render","FormLink","size","avatar","secondary","main","submit","Introduction","tryLoginHandler","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","Home","direction","minHeight","xs","xl","sm","LoginEmail","setUserName","autoComplete","autoFocus","LoginPassword","password","setPassword","FormSpinner","forwardRef","CircularProgress","SubmitButton","CopyRight","Box","mt","href","Date","getFullYear","Login","setUsername","loginHandler","LoginHandler","isLoginStart","spinnerRef","createRef","loginButtonRef","showSpinnerAndHideLoginButton","current","hideSpinnerAndShowLoginButton","onSubmit","preventDefault","SignUp","submitRef","handleSignup","userData","SignUpHandler","auth","isSignUpLoading","SIGNUP_FORM","onChangeHandler","minLength","maxLength","ket","email","setForm","isSignUpButtonEnable","setSignUpButtonEnable","fieldId","newForm","emailField","String","toLowerCase","validateEmail","passwordField","pw","validatePassword","validateWholeForm","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","logoutHandler","removeForm","LogoutHandler","Logout","logout","Congrats","EditForm","App","routes","fallback","path","exact","Boolean","hostname","match","store","initialState","isUpdating","FormReducer","SignupReducer","loginError","LoginReducer","ErrorReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f828b150.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: 'center',\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    const userId = useSelector(state => state.login.id);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position='static'>\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to='/identity/welcome' style={{textDecoration: 'none', outline: 'none'}}>\n                        <MenuItem style={{color: 'white'}}>Home</MenuItem>\n                    </Link>\n                    <Link to='/logout' style={{textDecoration: 'none', outline: 'none'}}>\n                        <MenuItem style={{color: 'white'}}>{userId ? 'Logout' : null}</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import axios from 'axios'\n\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\",\n});\nexport default RequestResolver;\n","import {\n    REMOVE_FORM_ERROR,\n    NEXT_FORM,\n    FORM_UPDATING,\n    POPULATE_FORM\n} from 'store/actions/ActionTypes'\nimport RequestResolver from 'requestHandler/RequestHandler';\nimport {UpdateUserInfo} from 'store/actions/LoginHandler';\nimport ErrorHandler from 'store/actions/ErrorHandler';\n\nexport const UpdateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            const token = localStorage.getItem('token');\n            RequestResolver.put(`/identity/${id}.json?auth=${token}`, form)\n                .then(() => {\n                    updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message))\n                })\n\n        } else {\n            const token = localStorage.getItem('token');\n            RequestResolver.post(`/identity.json?auth=${token}`, form)\n                .then(response => {\n                    updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message))\n                })\n        }\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        RequestResolver.get(`/identity/${formId}.json?auth=${token}`)\n            .then(response => {\n                dispatch(populateForm(response.data, formId));\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message))\n            })\n    }\n}\n\nexport const RemoveFormError = () => {\n    return {\n        type: REMOVE_FORM_ERROR\n    }\n}\n\nconst updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    const token = localStorage.getItem('token');\n    RequestResolver.put(`/users/${user.entityId}.json?auth=${token}`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message));\n    })\n}\n\nconst nextForm = (info, id) => {\n    return {\n        type: NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nconst formUpdating = () => {\n    return {\n        type: FORM_UPDATING,\n    }\n}\n\nconst populateForm = (form, formId) => {\n    return {\n        type: POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n","export const NEXT_FORM = 'NEXT_FORM';\nexport const REMOVE_FORM = 'HALT_FORM';\nexport const FORM_UPDATING = 'FORM_UPDATING';\nexport const POPULATE_FORM = 'POPULATE_FORM';\n\n\nexport const SIGNUP = 'SIGNUP';\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_FINISHED = 'SIGNUP_FINISHED';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\nexport const SET_TIMEOUT = 'SET_TIMEOUT';\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_TRY = 'LOGIN_TRY';\n\nexport const UPDATE_USER_INFO = 'UPDATE_USER_INFO';\n\nexport const ERROR = 'ERROR';\nexport const REMOVE_LOGIN_ERROR = 'REMOVE_LOGIN_ERROR';\nexport const REMOVE_SIGNUP_ERROR = 'REMOVE_SIGNUP_ERROR';\nexport const REMOVE_FORM_ERROR = 'REMOVE_FORM_ERROR';\n","import axios from 'axios'\n\nconst AuthHandler = axios.create({\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/',\n    params: {\n        key:`${process.env.REACT_APP_API_KEY}`,\n        returnSecureToken: true\n    }\n})\nexport default AuthHandler;\n","import {\n    UPDATE_USER_INFO,\n    REMOVE_LOGIN_ERROR,\n    LOGIN_START,\n    LOGIN_SUCCESS\n} from 'store/actions/ActionTypes'\nimport RequestResolver from 'requestHandler/RequestHandler';\nimport {PopulateFormHandler} from 'store/actions/FormHandler';\nimport ErrorHandler from 'store/actions/ErrorHandler';\nimport AuthHandler from 'requestHandler/AuthHandler';\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(loginStart())\n        AuthHandler.post('accounts:signInWithPassword', {\n            'email': username,\n            'password': password\n        }).then(response => {\n            setInfoInLocalStorage(response);\n            const token = response.data.idToken;\n            RequestResolver.get(`users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                .then(response => handleUserResponse(response, dispatch, response.data.idToken))\n                .catch(error => dispatch(ErrorHandler(true,  error.response ? error.response.data.error.message : error.message)));\n        }).catch(error => dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message)));\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => handleUserResponse(response, dispatch, token))\n                .catch(error => dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message)));\n        }\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nexport const RemoveLoginError = () => {\n    return {\n        type: REMOVE_LOGIN_ERROR\n    }\n}\n\n\nconst loginStart = () => {\n    return {\n        type: LOGIN_START\n    }\n}\n\nconst setInfoInLocalStorage = (response) => {\n    const token = response.data.idToken;\n    const userId = response.data.localId;\n    const expiryTime = response.data.expiresIn;\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n}\n\nconst handleUserResponse = (response, dispatch, token) => {\n    const [entityId] = Object.keys(response.data);\n    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n    dispatch(loginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n    const formId = infoObject.formInfo ? infoObject.formInfo.formId : null;\n    if (formId) {\n        dispatch(PopulateFormHandler(formId))\n    }\n}\n\nconst loginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n","import {\n    SET_TIMEOUT,\n    SIGNUP_START,\n    SIGNUP_FINISHED,\n    REMOVE_SIGNUP_ERROR\n} from 'store/actions/ActionTypes';\nimport RequestResolver from 'requestHandler/RequestHandler';\nimport ErrorHandler from 'store/actions/ErrorHandler';\nimport AuthHandler from 'requestHandler/AuthHandler';\n\nexport const SignUpHandler = (userData) => {\n    return dispatch => {\n        dispatch(signUpStart())\n        AuthHandler.post('accounts:signUp', userData)\n            .then(response => {\n                const token = response.data.idToken;\n                RequestResolver.post(`/users.json?auth=${token}`, {\n                    username: userData.firstName + ' ' + userData.lastName,\n                    userId: response.data.localId\n                })\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(signUpFinished({\n                            ...response.data,\n                            username: userData.firstName + ' ' + userData.lastName\n                        }))\n                    })\n                    .catch(error => {\n                        dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message))\n                    })\n            })\n            .catch(error => {\n                dispatch(ErrorHandler(true, error.response ? error.response.data.error.message : error.message))\n            })\n    }\n}\n\nexport const RemoveSignUpError = () => {\n    return {\n        type: REMOVE_SIGNUP_ERROR\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nconst signUpStart = () => {\n    return {\n        type: SIGNUP_START,\n        payload: null\n    }\n}\n\nconst signUpFinished = (data) => {\n    return {\n        type: SIGNUP_FINISHED,\n        payload: data\n    }\n}\n","import {ERROR} from 'store/actions/ActionTypes';\nimport {RemoveLoginError} from 'store/actions/LoginHandler';\nimport {RemoveSignUpError} from 'store/actions/SignUpHandler';\nimport {RemoveFormError} from 'store/actions/FormHandler';\n\nconst ErrorHandler = (isError, message) => {\n    return dispatch => {\n        if (!isError) {\n            dispatch(RemoveLoginError());\n            dispatch(RemoveSignUpError());\n            dispatch(RemoveFormError());\n        }\n        dispatch(errorHandler(isError, message));\n    }\n}\n\nconst errorHandler = (isError, message) => {\n    return {\n        type: ERROR,\n        isError: isError,\n        message: message\n    }\n}\nexport default ErrorHandler;\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport AppNavBar from 'containers/appBar/AppNavBar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Modal from '@material-ui/core/Modal';\nimport {useDispatch, useSelector} from 'react-redux';\nimport ErrorHandler from 'store/actions/ErrorHandler';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nconst Layout = props => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const isError = useSelector(state => state.error.isError);\n    const errorMessage = useSelector(state => state.error.message);\n\n    const errorRef = useRef();\n\n    const dispatch = useDispatch();\n    const removeError = useCallback(() => dispatch(ErrorHandler(false, '')), [dispatch]);\n\n    useEffect(() => {\n        setOpen(isError);\n    }, [isError])\n\n    const handler = () => {\n        setOpen(prevState => !prevState);\n        removeError();\n    }\n\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n            <Modal\n                aria-labelledby='transition-modal-title'\n                aria-describedby='transition-modal-description'\n                className={classes.modal}\n                open={open}\n                onClose={handler}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <h2 id='transition-modal-title'>Error</h2>\n                        <h3 ref={errorRef} id='transition-modal-description'>{errorMessage}</h3>\n                    </div>\n                </Fade>\n            </Modal>\n        </React.Fragment>\n    );\n}\nexport default Layout;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormControl} from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    }\n}));\n\nconst SelectInput = ({formType, field, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={field.validation.required}\n            variant='outlined'\n            className={classes.formControl}\n            key={field.id}\n            disabled={field.disabled}\n        >\n            <InputLabel id={field.id}>{field.label}</InputLabel>\n            <Select\n                error={field.validation.isTouched && !field.validation.isValid}\n                required={field.required}\n                native\n                labelId={field.id}\n                key={field.id}\n                id={field.id}\n                name={field.id}\n                value={field.value}\n                label={field.label}\n                onChange={(event) => handler(event, formType, 'input')}\n            >\n                <option key={'none'} aria-label='None' value=''/>\n                {\n                    field.options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\nexport default SelectInput;\n\nSelectInput.propTypes = {\n    formType: PropTypes.object,\n    field: PropTypes.object,\n    handler: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Check = ({field, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={field.id}\n            label={field.label}\n            labelPlacement={'end'}\n            control={\n                <Checkbox\n                    key={field.id}\n                    value={field.value}\n                    checked={field.value}\n                    onChange={event => handler(event, formType, 'check')}\n                    id={field.id}\n                />\n            }\n        />\n    );\n}\nexport default Check;\n\nCheck.propTypes = {\n    field: PropTypes.object,\n    formType: PropTypes.object,\n    handler: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst FormTextField = ({type, field, handler, formType}) => {\n    return (\n        <TextField\n            type={type}\n            error={field.validation.isTouched && !field.validation.isValid}\n            helperText={field.helperText}\n            disabled={field.disabled}\n            hidden={field.hidden}\n            key={field.id}\n            required={field.validation.required}\n            id={field.id}\n            label={field.label}\n            variant='outlined'\n            value={field.value}\n            placeholder={field.placeholder}\n            onChange={(event) => handler(event, formType, 'input')}/>\n    );\n}\nexport default FormTextField;\n\nFormTextField.propTypes = {\n    type: PropTypes.string,\n    field: PropTypes.object,\n    handler: PropTypes.func,\n    formType: PropTypes.object\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport SelectInput from 'components/inputs/Select';\nimport Check from 'components/inputs/Check';\nimport FormTextField from 'components/inputs/FormTextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: 'left'\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case 'text':\n                            return <FormTextField key={field.id} type={'text'} field={field} formType={formType} handler={handler}/>\n                        case 'number':\n                            return <FormTextField key={field.id} type={'number'} field={field} formType={formType} handler={handler}/>\n                        case 'select':\n                            return <SelectInput key={field.id} handler={handler} formType={formType} field={field}/>\n                        case 'check':\n                            return <Check key={field.id} handler={handler} formType={formType} field={field}/>\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\nexport default Form;\n\nForm.propTypes = {\n    form: PropTypes.object,\n    handler: PropTypes.func,\n    formType: PropTypes.object\n}\n","const PERSONAL_INFO = {\n    firstName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 3 Alphabets',\n        pattern: /^[A-z]{3,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        text: 'No Digits/Space Allowed. Not more than 4',\n        pattern: /^[A-z]?[A-z]?[A-z]?[A-z]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        text: 'No Digits/Space Allowed. Not more than 8 and less than 2 Alphabets',\n        pattern: /^[A-z]{2,8}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        text: 'Please Enter Age between 1 and 99',\n        pattern: /^[1-9][0-9]?$/g,\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        text: 'Mobile Number should be in this pattern +92-3xx-xxxxxx',\n        pattern: /^[+][9][2][-][3][0-4][0-9][-][0-9]{7}$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"+92-3xx-xxxxxxx\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        text: 'Invalid Input. Should like this xx%',\n        pattern: /^[1-9][0-9]?%$/g,\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        text: 'Select CGPA',\n        pattern: /^[1-9]+$/g,\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        text: 'No Digits/Space Allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        text: 'No Digits/Space Allowed. Range [3, 15]',\n        pattern: /^[A-z]{3,15}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        text: 'Select Type',\n        pattern: /^[A-z]+$/g,\n        disabled: true,\n        value: \"Bike\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        text: 'Not a valid plate number. Format should be like AKK-2915',\n        pattern: /^[A-Z]{3}-[0-9]{4}$/g,\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"AKK-2915\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Do you own a house?\"\n    },\n    houseNumber: {\n        text: 'Not a valid plate number. Format should be like JND-233232',\n        pattern: /^[A-Z]{3}-[0-9]{6}$/g,\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"XXX-DDDDDD\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import PropTypes from 'prop-types';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport React from 'react';\nimport {Typography} from \"@material-ui/core\";\n\nconst PreviewTableRow = ({subForm, identityForm, id, subKey}) => {\n    return (\n        <TableRow key={subForm.name}>\n            <TableCell component='th' scope='row'>\n                <Typography>\n                    {identityForm[id][subKey] ? identityForm[id][subKey].label : ''}\n                </Typography>\n            </TableCell>\n            <TableCell align='right'>\n                <Typography>\n                    {subForm[subKey] ? subForm[subKey] : ''}\n                </Typography>\n            </TableCell>\n        </TableRow>\n    );\n}\nexport default PreviewTableRow;\n\nPreviewTableRow.propTypes = {\n    subForm: PropTypes.object,\n    identityForm: PropTypes.object,\n    id: PropTypes.string,\n    subKey: PropTypes.string\n}\n","import PropTypes from 'prop-types';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport {Typography} from '@material-ui/core';\nimport React from 'react';\n\nconst PreviewTableHead = ({id}) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell colSpan={2} style={{textAlign: 'center'}}>\n                    <Typography variant='h5' style={{fontWeight: 'bold'}}>\n                        {id && id !== 'isFormCompleted' ? id.replace('_', ' ') : null}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\nexport default PreviewTableHead;\n\nPreviewTableHead.propTypes = {\n    id: PropTypes.string\n}\n","import PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport React from 'react';\nimport PreviewTableRow from 'components/preview/tables/PreviewTableRow';\nimport PreviewTableHead from 'components/preview/tables/PreviewTableHead';\n\nconst PreviewTable = ({id, subForm, identityForm}) => {\n    const checkedFields = ['isCompleted', 'isVehicle', 'isHouse', 'status'];\n\n    const isCheckField = field => {\n        return checkedFields.includes(field);\n    }\n\n    return (\n        <Table aria-label='simple table'>\n            <PreviewTableHead id={id}/>\n            <TableBody>\n                {\n                    Object.keys(subForm).map(subKey => !isCheckField(subKey) ?\n                        <PreviewTableRow id={id} key={subKey} subForm={subForm} identityForm={identityForm}\n                                         subKey={subKey}/>\n                        : null)\n                }\n            </TableBody>\n        </Table>\n    );\n}\nexport default PreviewTable;\n\nPreviewTable.propTypes = {\n    id: PropTypes.string,\n    subForm: PropTypes.object,\n    identityForm: PropTypes.object\n}\n","import PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Container} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IDENTITY_FORM from 'shared/forms/Forms';\nimport PreviewTable from 'components/preview/tables/PreviewTable';\n\nconst FormPreview = ({form}) => {\n    const [identityForm,] = useState(IDENTITY_FORM);\n    const isObject = (subForm) => {\n        return typeof subForm === 'object';\n    }\n    return (\n        <>\n            <CssBaseline/>\n            <Container maxWidth='sm'>\n                {\n                    Object.keys(form).map(key => isObject(form[key]) ?\n                        <PreviewTable key={key} identityForm={identityForm} id={key} subForm={form[key]}/> :\n                    null)\n                }\n            </Container>\n        </>\n    );\n}\nexport default FormPreview;\n\nFormPreview.propTypes = {\n    form: PropTypes.object\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from 'components/preview/FormPreview';\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    return (\n        <div>\n            <Dialog\n                fullWidth={true}\n                maxWidth='md'\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby='scroll-dialog-title'\n                aria-describedby='scroll-dialog-description'\n            >\n                <DialogTitle id='scroll-dialog-title'>Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <FormPreview form={form} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color='primary'>Cancel</Button>\n                    <Button onClick={saveFormHandler} color='primary'>Save</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nexport default DialogView;\n\nDialogView.propTypes = {\n    open: PropTypes.bool,\n    modalHandler: PropTypes.func,\n    form: PropTypes.object,\n    saveFormHandler: PropTypes.func\n}\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\nexport default UserProvider;\n","import PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backButton: {\n        marginRight: theme.spacing(1),\n    }\n}));\n\nconst BackButton = ({formType, handleBack}) => {\n    const classes = useStyles();\n    return (\n        <Button disabled={formType.step === 0} onClick={handleBack} className={classes.backButton}>\n            Back\n        </Button>\n    );\n}\nexport default BackButton;\n\nBackButton.propTypes = {\n    formType: PropTypes.object,\n    handleBack: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst NextButton = ({handleNext, isNextButtonDisable}) => {\n    return (\n        <Button id={'nextFormButton'} variant=\"contained\" color=\"primary\" onClick={handleNext} disabled={isNextButtonDisable}>\n            Next\n        </Button>\n    );\n}\nexport default NextButton;\n\nNextButton.propTypes = {\n    handleNext: PropTypes.func,\n    isNextButtonDisable: PropTypes.bool\n}\n","import PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst PreviewButton = ({handleNext, setModalOpen, isNextButtonDisable}) => {\n    return (\n        <Button id={'previewButton'} variant=\"contained\" color=\"primary\" onClick={() => {handleNext(); setModalOpen(true)}} disabled={isNextButtonDisable}>\n            Preview\n        </Button>\n    );\n}\nexport default PreviewButton;\n\nPreviewButton.propTypes = {\n    handleNext: PropTypes.func,\n    setModalOpen: PropTypes.func,\n    isNextButtonDisable: PropTypes.bool\n}\n","import PropTypes from 'prop-types';\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\nimport {Grid} from \"@material-ui/core\";\n\nconst MobileStepperWidget = ({formType, steps, handleNext, handleBack, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton handleBack={handleBack} formType={formType}/>;\n    const nextButton = <NextButton handleNext={handleNext} isNextButtonDisable={isNextButtonDisable}/>;\n    const previewButton = <PreviewButton handleNext={handleNext} isNextButtonDisable={isNextButtonDisable} setModalOpen={setModalOpen}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    return (\n        <>\n            <Grid container justify={'center'} style={{marginTop: '8px'}}>\n                <Grid item>\n                    <StepLabel>{steps[formType.step]}</StepLabel>\n                </Grid>\n            </Grid>\n            <MobileStepper activeStep={formType.step} alternativeLabel\n                           variant={'text'}\n                           backButton={backButton} nextButton={nextView}\n                           steps={steps.length} />\n        </>\n    );\n}\n\nexport default MobileStepperWidget;\n\nMobileStepperWidget.propTypes = {\n    formType: PropTypes.object,\n    steps: PropTypes.array,\n    handleNext: PropTypes.func,\n    handleBack: PropTypes.func,\n    isNextButtonDisable: PropTypes.bool,\n    setModalOpen: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport React from \"react\";\n\nconst DesktopStepper = ({formType, steps}) => {\n    return (\n        <Stepper activeStep={formType.step} alternativeLabel>\n            {steps.map((label) => (\n                <Step key={label} style={{color: 'red'}}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    );\n}\nexport default DesktopStepper;\n\nDesktopStepper.propTypes = {\n    formType: PropTypes.object,\n    steps: PropTypes.array\n}\n","import PropTypes from 'prop-types';\nimport React from \"react\";\nimport BackButton from \"components/form/buttons/BackButton\";\nimport NextButton from \"components/form/buttons/NextButton\";\nimport PreviewButton from \"components/form/buttons/PreviewButton\";\n\nconst DesktopStepperButtons = ({formType, steps, handleBack, handleNext, isNextButtonDisable, setModalOpen}) => {\n\n    const backButton = <BackButton formType={formType} handleBack={handleBack}/>;\n    const nextButton = <NextButton isNextButtonDisable={isNextButtonDisable} handleNext={handleNext}/>;\n    const previewButton = <PreviewButton handleNext={handleNext} setModalOpen={setModalOpen} isNextButtonDisable={isNextButtonDisable}/>;\n\n    const nextView = formType.step !== steps.length - 1 ? nextButton : previewButton;\n\n    return (\n        <div>\n            {backButton}\n            {nextView}\n        </div>\n    );\n}\nexport default DesktopStepperButtons;\n\nDesktopStepperButtons.propTypes = {\n    formType: PropTypes.object,\n    steps: PropTypes.array,\n    handleBack: PropTypes.func,\n    handleNext: PropTypes.func,\n    isNextButtonDisable: PropTypes.bool,\n    setModalOpen: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Form from 'components/form/Form';\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from 'shared/forms/Forms';\nimport formTypes from 'shared/forms/FormTypes';\nimport {useDispatch, useSelector} from 'react-redux';\nimport _ from 'lodash'\nimport {UpdateForm} from 'store/actions/FormHandler';\nimport DialogView from 'components/modal/DialogView';\nimport {UserContext} from 'providers/UserProvider';\nimport {Redirect} from 'react-router';\nimport {Container} from '@material-ui/core';\nimport MobileStepperWidget from 'components/form/mobileStepperWidget/MobileStepperWidget';\nimport DesktopStepper from 'components/form/deskopStepper/DesktopStepper';\nimport DesktopStepperButtons from 'components/form/deskopStepper/DesktopStepperButtons';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        width: '80%',\n        height: '500px'\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = ({isEdit = false, location}) => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(UpdateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    const isFormComplete = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null)\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    //one time execution when component re-renders\n    useEffect(() => {\n        clearFormData();\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].disabled = false;\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                        }\n                    }\n                }\n            }\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n        }\n\n    }, []);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = '';\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = '';\n                        field.validation.isValid = !field.validation.required;\n                        field.validation.isTouched = !field.validation.required;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n        location.pathname = '/identity/congrats'\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        const previewFormStep = 4;\n        if (formType.step !== previewFormStep) {\n            setFormType((prevActiveStep) => {\n                setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n                return formTypes[prevActiveStep.step + 1]\n            });\n        }\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id || event.target.name;\n        if (inputType === 'check') {\n            subForm[fieldName].value = event.target.checked;\n            toggleInputsDisabled(formType, !event.target.checked);\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            field.validation.isValid = field.pattern ? _.clone(field.pattern).test(field.value) : true;\n            field.helperText = !field.validation.isValid ? field.text : '';\n        }\n        setSubFormComplete(isValid(subForm));\n        setNextButtonDisable(!isValid(subForm));\n        setIdentityForm(newIdentityForm);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                if (!field.disabled && !field.validation.isValid) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    if ((isFormComplete && !isEdit) || (location.pathname === '/identity/congrats')) {\n        return <Redirect to='/identity/congrats'/>\n    }\n\n    const mobileStepper = <MobileStepperWidget\n        formType={formType}\n        handleBack={handleBack}\n        handleNext={handleNext}\n        isNextButtonDisable={isNextButtonDisable}\n        setModalOpen={setModalOpen}\n        steps={steps}\n    />;\n\n    const desktopStepper = <DesktopStepper steps={steps} formType={formType}/>;\n    const desktopButton = <DesktopStepperButtons\n        formType={formType}\n        steps={steps}\n        setModalOpen={setModalOpen}\n        isNextButtonDisable={isNextButtonDisable}\n        handleNext={handleNext}\n        handleBack={handleBack}\n    />\n\n    const stepper = window.screen.width < 600 ? mobileStepper : desktopStepper;\n    const stepperButton = window.screen.width >= 600 ? desktopButton : null;\n\n    return (\n        <Container>\n            {stepper}\n            <Container className={classes.root}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                </Paper>\n                {stepperButton}\n                <DialogView\n                    form={form}\n                    open={isModalOpen}\n                    modalHandler={() => setModalOpen(false)}\n                    saveFormHandler={handleSaveForm}\n                />\n            </Container>\n        </Container>\n    );\n}\nexport default Forms;\n\nForms.propTypes = {\n    isEdit: PropTypes.bool,\n    location: PropTypes.object\n}\n","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\nimport {Container} from \"@material-ui/core\";\n\nconst Preview = () => {\n\n    const form = useSelector(state => state.form.form);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper  elevation={3}>\n                <FormPreview form={form}/>\n            </Paper>\n        </Container>\n    );\n}\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {UserContext} from 'providers/UserProvider';\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\nexport default GuardedRoute;\n","import PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport {Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nconst FormLink = ({id, to, label}) => {\n    return (\n        <Grid container>\n            <Grid item>\n                <Link to={to} style={{textDecoration: 'none', outline: 'none'}}>\n                    <Button id={id} size='small' color='primary'>\n                        {label}\n                    </Button>\n                </Link>\n            </Grid>\n        </Grid>\n    )\n}\nexport default FormLink;\n\nFormLink.propTypes = {\n    id: PropTypes.string,\n    to: PropTypes.string,\n    label: PropTypes.string\n}\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport {Redirect} from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport Grid from '@material-ui/core/Grid';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {TryLoginHandler} from 'store/actions/LoginHandler';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant='h5' component='h2'>\n                                        Identity\n                                    </Typography>\n                                    <Typography variant='body2' color='textSecondary' component='p'>\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <FormLink id={'toLogin'} to={'/identity/login'} label={'Sign In'}/>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\nexport default Introduction;\n","import React from 'react';\nimport Introduction from 'components/introduction/Introduction';\nimport {Grid} from '@material-ui/core';\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{minHeight: 'calc(100vh - 11vh)'}}\n        >\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n        </Grid>\n    );\n}\nexport default Home;\n","import PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginEmail = ({username, setUserName}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label='Email Address'\n            name='email'\n            autoComplete='email'\n            autoFocus\n            value={username}\n            onChange={(event) => setUserName(event.target.value)}\n        />\n\n    );\n}\nexport default LoginEmail;\n\nLoginEmail.propTypes = {\n    username: PropTypes.string,\n    setUserName: PropTypes.func\n}\n","import PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst LoginPassword = ({password, setPassword}) => {\n    return (\n        <TextField\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label='Password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n        />\n    );\n}\nexport default LoginPassword;\n\nLoginPassword.propTypes = {\n    password: PropTypes.string,\n    setPassword: PropTypes.func\n}\n","import CircularProgress from '@material-ui/core/CircularProgress';\nimport React, {forwardRef} from 'react';\n\nconst FormSpinner = forwardRef((props, ref) => {\n    return (\n        <CircularProgress ref={ref} style={{marginTop: '8px', display: 'inline-block'}}>\n            {props}\n        </CircularProgress>\n    );\n})\nexport default FormSpinner;\n","import PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport React, {forwardRef} from 'react';\n\nconst SubmitButton = forwardRef(({id, className, isDisable = false, label}, ref) => {\n    return (\n        <Button\n            id={id}\n            ref={ref}\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            style={{display: 'inline-flex'}}\n            className={className}\n            disabled={isDisable}>\n            {label}\n        </Button>\n    );\n})\nexport default SubmitButton;\n\nSubmitButton.propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    isDisable: PropTypes.bool,\n    label: PropTypes.string,\n}\n\n","import Typography from '@material-ui/core/Typography';\nimport MaterialLink from '@material-ui/core/Link';\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\n\nconst CopyRight = () => {\n    return (\n        <Box mt={5}>\n            <Typography variant='body2' color='textSecondary' align='center'>\n                {'Copyright © '}\n                <MaterialLink color='inherit' href='https://github.com/UbaidurRehman1/identity'>\n                    Identity\n                </MaterialLink>{' '}\n                {new Date().getFullYear()}\n                {'.'}\n            </Typography>\n        </Box>\n    );\n}\nexport default CopyRight;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoginHandler} from 'store/actions/LoginHandler';\nimport LoginEmail from 'components/login/LoginEmail';\nimport LoginPassword from 'components/login/LoginPassword';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormLink from 'components/links/FormLink';\nimport CopyRight from 'components/copyright/CopyRight';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    const spinnerRef = createRef();\n    const loginButtonRef = createRef();\n\n    const showSpinnerAndHideLoginButton = useCallback(() => {\n        if (spinnerRef.current) {\n            spinnerRef.current.style.display = 'inline-block';\n        }\n        if (loginButtonRef.current) {\n            loginButtonRef.current.style.display = 'none';\n        }\n    }, [spinnerRef, loginButtonRef]);\n\n    const hideSpinnerAndShowLoginButton = useCallback(() => {\n        if (spinnerRef.current) {\n            spinnerRef.current.style.display = 'none';\n        }\n        if (loginButtonRef.current) {\n            loginButtonRef.current.style.display = 'inline-flex';\n        }\n    }, [spinnerRef, loginButtonRef])\n\n    useEffect(() => {\n        isLoginStart ? showSpinnerAndHideLoginButton() : hideSpinnerAndShowLoginButton();\n    }, [hideSpinnerAndShowLoginButton, isLoginStart, showSpinnerAndHideLoginButton])\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Log in\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => login(event)}>\n                    <LoginEmail value={username} setUserName={setUsername}/>\n                    <LoginPassword value={password} setPassword={setPassword}/>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton id={'login'} ref={loginButtonRef} isDisable={false} className={classes.submit} label={'Log In'}/>\n                    <FormLink id={'toSignUp'} label={'Don\\'t have an account? Sign Up'} to={'/identity/signup'}/>\n                </form>\n            </div>\n            <CopyRight/>\n        </Container>\n    );\n}\nexport default Login;\n","import React, {createRef, useCallback, useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from 'react-router-dom';\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {SignUpHandler} from 'store/actions/SignUpHandler';\nimport {validateEmail, validateFieldLength, validatePassword, validateWholeForm} from 'shared/util/Utils';\nimport SubmitButton from 'components/inputs/SubmitButton';\nimport FormSpinner from 'components/inputs/FormSpinner';\nimport CopyRight from 'components/copyright/CopyRight';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const spinnerRef = createRef();\n    const submitRef = createRef();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(SignUpHandler(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            autoComplete: 'fname',\n            name: 'firstName',\n            variant: 'outlined',\n            fullWidth: true,\n            id: 'firstName',\n            key: 'firstName',\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'First Name'\n        },\n        lastName: {\n            disabled: false,\n            value: '',\n            type: 'text',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'lastName',\n            ket: 'lastName',\n            name: 'lastName',\n            autoComplete: 'lname',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Last Name'\n        },\n        email: {\n            disabled: false,\n            value: '',\n            type: 'email',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            id: 'email',\n            key: 'email',\n            name: 'email',\n            autoComplete: 'email',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Email Address'\n        },\n        password: {\n            disabled: false,\n            value: '',\n            type: 'password',\n            variant: 'outlined',\n            required: true,\n            fullWidth: true,\n            name: 'password',\n            id: 'password',\n            key: 'password',\n            autoComplete: 'current-password',\n            error: false,\n            helperText: '',\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: 'Password'\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n    const [isSignUpButtonEnable, setSignUpButtonEnable] = useState(false);\n\n    useEffect(() => {\n        if (isSignUpLoading) {\n            if (spinnerRef.current) spinnerRef.current.style.display = 'inline-block';\n            if (submitRef.current) submitRef.current.style.display = 'none';\n        } else {\n            if (spinnerRef.current) spinnerRef.current.style.display = 'none';\n            if (submitRef.current) submitRef.current.style.display = 'inline-flex';\n        }\n    }, [isSignUpLoading, spinnerRef, submitRef]);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n        setSignUpButtonEnable(validateWholeForm(newForm));\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        handleSignup(formData);\n    }\n\n    if (isLogin) {\n        return <Redirect to='/identity/welcome'/>\n    }\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component='h1' variant='h5'>\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (<Grid item xs={12} sm={6} key={key}><TextField {...field}/></Grid>);\n                                } else {\n                                    return (<Grid item xs={12} key={key}><TextField{...field}/></Grid>);\n                                }\n                            })\n                        }\n                    </Grid>\n                    <FormSpinner ref={spinnerRef}/>\n                    <SubmitButton id={'signUp'} ref={submitRef} className={classes.submit} isDisable={!isSignUpButtonEnable}\n                                  label='Sign Up'/>\n                    <FormLink to={'/identity/login'} label={'Already have an account? Sign in'}/>\n                </form>\n            </div>\n            <CopyRight/>\n        </Container>\n    );\n}\nexport default SignUp;\n","export const validateFieldLength = field => {\n    if (field.validation.isTouched) {\n        if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n            field.validation.isValid = false;\n            field.error = true;\n            field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n        } else {\n            field.validation.isValid = true;\n            field.error = false;\n            field.helperText = '';\n        }\n    }\n}\n\nexport const validateEmail = emailField => {\n    const email = emailField.value;\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isValid = re.test(String(email).toLowerCase());\n    if (!isValid) {\n        emailField.validation.isValid = false;\n        emailField.error = true;\n        emailField.helperText = 'Invalid Email Address';\n    } else {\n        emailField.validation.isValid = true;\n        emailField.error = false;\n        emailField.helperText = '';\n    }\n}\n\nexport const validatePassword = passwordField => {\n    const pw = passwordField.value;\n    const isValid = /[A-Z]/.test(pw) &&\n        /[a-z]/.test(pw) &&\n        /[0-9]/.test(pw) &&\n        /[^A-Za-z0-9]/.test(pw) &&\n        pw.length > 4;\n    if (!isValid) {\n        passwordField.validation.isValid = false;\n        passwordField.error = true;\n        passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n    } else {\n        passwordField.validation.isValid = true;\n        passwordField.error = false;\n        passwordField.helperText = '';\n    }\n}\n\nexport const validateWholeForm = (form) => {\n    let keys = Object.keys(form);\n    for (let key in keys) {\n        const field = form[keys[key]];\n        if (!field.validation.isValid) {\n            return false;\n        }\n    }\n    return true;\n}\n\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport {UserContext} from 'providers/UserProvider';\nimport {useSelector} from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport FormLink from 'components/links/FormLink';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '5rem'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        minWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo ? state.login.formInfo.formId : null);\n    const isFormCompleted = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null);\n    const isFormTouched = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormTouched : null);\n\n    const formInfoView = useRef();\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = 'Welcome in Identity. Click below to start filling your Identity form';\n        } else if (!isFormCompleted) {\n            info = 'You have not completed your Identity form yet. Kindly complete your form as soon as possible';\n        } else if (isFormCompleted) {\n            info = 'Your Identity form is completed';\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component='main' maxWidth='xs' className={classes.root}>\n            <CssBaseline/>\n            <Grid container spacing={2} justify={'center'}>\n                <Grid item>\n                    <Card className={classes.card}>\n                        <CardHeader\n                            avatar={<Avatar aria-label='recipe' className={classes.avatar}>U</Avatar>}\n                            action={\n                                <IconButton aria-label='settings'>\n                                    <MoreVertIcon/>\n                                </IconButton>\n                            }\n                            title='Welcome Back'\n                            subheader={user.username}\n                        />\n                        <CardMedia\n                            className={classes.media}\n                            image='/static/images/cards/paella.jpg'\n                            title='Paella dish'\n                        />\n                        <CardContent>\n                            <Typography ref={formInfoView} variant='body2' color='textSecondary' component='p'>\n                            </Typography>\n                        </CardContent>\n                        <Grid container justify={'flex-start'}>\n                            <Grid item>\n                                <FormLink id={'fillIdentityForm'} label={'Click here to fill your identity form'} to={'/identity/create'}/>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\nexport default Welcome;\n","import {REMOVE_FORM, LOGOUT} from 'store/actions/ActionTypes'\n\nconst LogoutHandler = () => {\n    return dispatch => {\n        localStorage.removeItem('userId');\n        localStorage.removeItem('token');\n        setTimeout(() => {\n            dispatch(removeForm());\n            dispatch(logoutHandler())\n        }, 2000);\n    }\n}\n\nconst logoutHandler = () => {\n    return {\n        type: LOGOUT\n    }\n}\n\nconst removeForm = () => {\n    return {\n        type: REMOVE_FORM\n    }\n}\n\nexport default LogoutHandler;\n","import PropTypes from 'prop-types';\nimport React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport LogoutHandler from 'store/actions/LogoutHandler';\n\nconst Logout = (props) => {\n\n    const dispatch = useDispatch();\n    const logout = useCallback(() => dispatch(LogoutHandler()), [dispatch]);\n\n    const userId = useSelector(state => state.login.id);\n\n    useEffect(() => {\n        logout();\n        if (!userId) {\n            props.location.pathname = '/identity'\n        }\n    });\n\n    return (\n        <p>You will be redirect to Introduction Page</p>\n    );\n}\nexport default Logout;\n\nLogout.propTypes = {\n    pathname: PropTypes.object\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormLink from 'components/links/FormLink';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: 'auto',\n        marginTop: '5rem'\n    }\n});\n\nconst Congrats = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                    Congrats!\n                </Typography>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                    You have been registered in Identity. You will received your Identity Number through by SMS soon.\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <FormLink label='View Your Form' to='/identity/preview'/>\n                <FormLink label='Edit Your Form' to='/identity/edit'/>\n            </CardActions>\n        </Card>\n    );\n}\nexport default Congrats;\n","import React from 'react';\nimport Forms from 'containers/Forms/Forms';\n\nconst EditForm = (props) => {\n    return <Forms isEdit={true} {...props}/>;\n}\nexport default EditForm;\n","import React, {Suspense} from 'react';\nimport 'App.css';\nimport Layout from 'hoc/Layout/Layout';\nimport Forms from 'containers/Forms/Forms';\nimport {Redirect, Route, Switch} from 'react-router';\nimport Preview from 'containers/preview/Preview';\nimport UserProvider from 'providers/UserProvider';\nimport GuardedRoute from 'hoc/gaurdedRoute/GaurdedRoute';\nimport Home from 'components/home/Home';\nimport Login from 'containers/login/Login';\nimport SignUp from 'containers/signup/SignUp';\nimport Welcome from 'components/welcome/Welcome';\nimport Logout from 'containers/logout/Logout';\nimport Congrats from 'components/congrats/Congrats';\nimport EditForm from 'hoc/editForm/EditForm';\n\nconst App = () => {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path='/identity/create' exact component={Forms} />\n                <GuardedRoute path='/identity/edit' exact component={EditForm} />\n                <GuardedRoute path='/identity/preview' exact component={Preview} />\n                <GuardedRoute path='/identity/welcome' exact component={Welcome} />\n                <GuardedRoute path={'/logout'} exact component={Logout} />\n                <GuardedRoute path='/identity/congrats' component={Congrats}/>\n                <Route path='/identity/signup' exact component={SignUp}/>\n                <Route path='/identity/login' exact component={Login}/>\n                <Route path='/identity' exact component={Home}/>\n                <Route render={() => <Redirect to='/identity' />}/>\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className='App'>\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport 'fontsource-roboto';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport FormReducer from 'store/reducers/FormReducer';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport SignupReducer from 'store/reducers/SignupReducer';\nimport LoginReducer from 'store/reducers/LoginReducer';\nimport ErrorReducer from 'store/reducers/ErrorReducer';\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: FormReducer,\n        auth: SignupReducer,\n        login: LoginReducer,\n        error: ErrorReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import {\n    NEXT_FORM,\n    REMOVE_FORM,\n    FORM_UPDATING,\n    POPULATE_FORM,\n    REMOVE_FORM_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst FormReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case REMOVE_FORM:\n            return {...state, formId: null, form: null, isCompleted: false, error: null, isUpdating: false}\n        case FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        case REMOVE_FORM_ERROR:\n            return {...state, error: null}\n        default:\n            return state;\n    }\n}\nexport default FormReducer;\n","import {\n    SIGNUP_START,\n    SIGNUP_FINISHED,\n    SIGNUP_ERROR,\n    SET_TIMEOUT,\n    REMOVE_SIGNUP_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: '',\n    isSignUpLoading: false,\n    timeout: null\n};\nconst SignupReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        case REMOVE_SIGNUP_ERROR:\n            return {...state, error: false, isSignUpLoading: false}\n        default:\n            return state;\n    }\n}\nexport default SignupReducer;\n","import {\n    LOGIN_START,\n    LOGIN_SUCCESS,\n    LOGIN_ERROR,\n    LOGOUT,\n    UPDATE_USER_INFO,\n    REMOVE_LOGIN_ERROR\n} from 'store/actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLogin: true,\n                loginStart: false,\n                loginError: false,\n                username: action.username,\n                token: action.token,\n                id: action.id,\n                entityId: action.entityId,\n                formInfo: action.formInfo\n            }\n        case LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                loginStart: false,\n                loginError: false,\n                username: null,\n                id: null,\n                entityId: null,\n                token: null,\n                formInfo: null\n            }\n        case UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        case REMOVE_LOGIN_ERROR:\n            return {...state, loginError: false, loginStart: false}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n","import {ERROR} from 'store/actions/ActionTypes';\n\nconst initialState = {\n    isError: false,\n    message: ''\n}\n\nconst ErrorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ERROR:\n            return {...state, isError: action.isError, message: action.message};\n        default:\n            return state;\n    }\n}\nexport default ErrorReducer;\n"],"sourceRoot":""}