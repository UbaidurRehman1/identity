{"version":3,"sources":["containers/appBar/AppNavBar.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","requestHandler/RequestHandler.js","store/actions/Login.js","store/actions/ActionTypes.js","store/actions/Form.js","components/preview/FormPreview.js","components/modal/DialogView.js","providers/UserProvider.js","containers/Forms/Forms.js","containers/preview/Preview.js","hoc/gaurdedRoute/GaurdedRoute.js","components/introduction/Introduction.js","components/home/Home.js","components/login/Login.js","store/actions/SignUp.js","components/signup/SignUp.js","components/welcome/Welcome.js","store/actions/LogoutHandler.js","components/logout/Logout.js","components/congrats/Congrats.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js","store/reducers/AuthReducer.js","store/reducers/LoginReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","userId","useSelector","state","login","id","className","AppBar","position","Toolbar","Typography","to","style","textDecoration","outline","MenuItem","color","Layout","props","Fragment","children","formControl","margin","minWidth","SelectInput","formType","required","disabled","label","value","options","handler","FormControl","variant","key","InputLabel","Select","native","labelId","name","onChange","event","aria-label","map","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","alignItems","justifyContent","display","flexDirection","marginTop","width","selectEmpty","Form","form","fields","Object","keys","filter","field","type","TextField","error","validation","isTouched","isValid","helperText","hidden","placeholder","PERSONAL_INFO","firstName","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","RequestResolver","axios","create","baseURL","_handleUserResponse","response","dispatch","token","data","entityId","infoObject","LoginSuccess","username","formInfo","formId","PopulateFormHandler","LoginStart","LoginError","_updateUserInfo","user","isFormCompleted","isFormTouched","put","then","UpdateUserInfo","catch","console","log","nextForm","info","formUpdating","get","PopulateForm","isCompleted","FormPreview","useState","IDENTITY_FORM","identityForm","CssBaseline","Container","subForm","replace","Grid","container","subKey","item","DialogView","open","modalHandler","saveFormHandler","descriptionElementRef","React","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Button","onClick","UserContext","createContext","isLogin","UserProvider","newUser","Provider","backButton","instructions","marginBottom","paper","padding","marginLeft","height","stepProgress","Forms","setFormType","isSubFormComplete","setSubFormComplete","steps","useContext","useDispatch","submitFormInfo","useCallback","post","updateForm","isFormComplete","setIdentityForm","isNextButtonDisable","setNextButtonDisable","isModalOpen","setModalOpen","getFormData","_","clone","formData","subFormTypes","slice","includes","hasOwnProperty","clearFormData","newIdentityForm","subRemoteForm","setNextButtonEnable","toggleInputsDisabled","isDisable","Stepper","activeStep","alternativeLabel","Step","StepLabel","length","Paper","elevation","inputType","fieldName","target","undefined","_isValid","test","prevActiveStep","Preview","GuardedRoute","Component","component","rest","render","avatar","backgroundColor","palette","secondary","main","submit","Introduction","tryLoginHandler","localStorage","getItem","Card","CardActionArea","CardMedia","media","Avatar","CardContent","gutterBottom","CardActions","size","Home","direction","justify","minHeight","xs","xl","sm","Copyright","align","href","Date","getFullYear","Login","setUsername","password","setPassword","loginHandler","idToken","localId","expiryTime","expiresIn","setItem","LoginHandler","isLoginStart","loginStart","noValidate","onSubmit","preventDefault","fullWidth","autoComplete","autoFocus","CircularProgress","Box","mt","storeToken","timeout","setTimeout","removeItem","SignUpStart","payload","SignUpFinished","ErrorInSignup","SignUp","handleSignup","userData","message","signup","auth","isSignUpLoading","SIGNUP_FORM","onChangeHandler","minLength","maxLength","ket","email","setForm","fieldId","newForm","validateFieldLength","validateEmail","validatePassword","emailField","String","toLowerCase","passwordField","pw","newFormData","signUpHandler","card","Welcome","formInfoView","innerHTML","CardHeader","action","IconButton","subheader","image","disableSpacing","_logoutHandler","_removeForm","LogoutHandler","Logout","logout","location","pathname","Congrats","App","routes","fallback","path","exact","Boolean","window","hostname","match","store","initialState","isUpdating","NextFormReducer","isError","AuthReducer","loginError","LoginReducer","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sTAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHC,SAAU,IACVC,SAAU,GACVJ,YAAa,GACbK,UAAW,UAEfC,SAAU,GAEVC,QAAS,OAIE,SAASC,IACpB,IAAMC,EAAUf,IAEVgB,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAEhD,OACI,yBAAKC,UAAWN,EAAQZ,MACpB,kBAACmB,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAASH,UAAWN,EAAQF,SACxB,kBAACY,EAAA,EAAD,CAAYJ,UAAWN,EAAQP,OAA/B,YACA,kBAAC,IAAD,CAAMkB,GAAG,oBAAoBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SAClE,kBAACC,EAAA,EAAD,CAAUH,MAAO,CAACI,MAAO,UAAzB,SAEJ,kBAAC,IAAD,CAAML,GAAG,UAAUC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SACxD,kBAACC,EAAA,EAAD,CAAUH,MAAO,CAACI,MAAO,UAAWf,EAAS,SAAW,UCtChF,IAaegB,EAbA,SAAAC,GACX,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACpB,EAAD,MAGA,8BACKmB,EAAME,Y,gFCHjBnC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkC,YAAa,CACTC,OAAQnC,EAAMK,QAAQ,GACtB+B,SAAU,IACV3B,UAAW,YAqCJ4B,EAjCK,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,SAAUrB,EAAkD,EAAlDA,GAAIsB,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QACrE/B,EAAUf,IAChB,OACI,kBAAC+C,EAAA,EAAD,CACIN,SAAUA,EACVO,QAAQ,WACR3B,UAAWN,EAAQqB,YACnBa,IAAK7B,EACLsB,SAAUA,GAEV,kBAACQ,EAAA,EAAD,CAAY9B,GAAIA,GAAKuB,GACrB,kBAACQ,EAAA,EAAD,CACIV,SAAUA,EACVW,QAAM,EACNC,QAASjC,EACT6B,IAAK7B,EACLA,GAAIA,EACJkC,KAAMlC,EACNwB,MAAOA,EACPD,MAAOA,EACPY,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAOhB,EAAU,WAE9C,4BAAQS,IAAK,OAAQQ,aAAW,OAAOb,MAAM,KAEzCC,EAAQa,KAAI,SAAAd,GACR,OAAO,4BAAQK,IAAKL,EAAOA,MAAOA,GAAQA,S,kBCjBnDe,EAnBD,SAAC,GAA2C,IAA1CvC,EAAyC,EAAzCA,GAAIuB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOJ,EAAuB,EAAvBA,SAAUM,EAAa,EAAbA,QACxC,OACI,kBAACc,EAAA,EAAD,CACIX,IAAK7B,EACLuB,MAAOA,EACPkB,eAAgB,MAChBC,QACI,kBAACC,EAAA,EAAD,CACId,IAAK7B,EACLwB,MAAOA,EACPoB,QAASpB,EACTW,SAAU,SAAAC,GAAK,OAAIV,EAAQU,EAAOhB,EAAU,UAC5CpB,GAAIA,OCVlBpB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF8D,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,cAAe,SACfC,UAAWnE,EAAMK,QAAQ,GACzB,QAAS,CACL8B,OAAQnC,EAAMK,QAAQ,GACtB+D,MAAO,QAGflC,YAAa,CACTC,OAAQnC,EAAMK,QAAQ,GACtB+B,SAAU,IACV3B,UAAW,QAEf4D,YAAa,CACTF,UAAWnE,EAAMK,QAAQ,QAuFlBiE,EAlFF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAM3B,EAAuB,EAAvBA,QAASN,EAAc,EAAdA,SACpBzB,EAAUf,IAEV0E,EAASC,OAAOC,KAAKH,GAAMI,QAAO,SAAA5B,GAAG,MAAY,gBAARA,KAC1CS,KAAI,SAAAT,GAED,OADAwB,EAAKxB,GAAL,GAAkBA,EACXwB,EAAKxB,MAGpB,OACI,0BAAM5B,UAAWN,EAAQZ,MAEjBuE,EAAOhB,KAAI,SAAAoB,GACP,OAAQA,EAAMC,MACV,IAAK,OACD,OACI,kBAACC,EAAA,EAAD,CACIC,MAAOH,EAAMI,WAAWC,YAAcL,EAAMI,WAAWE,QACvDC,WAAYP,EAAMO,WAClB3C,SAAUoC,EAAMpC,SAChB4C,OAAQR,EAAMQ,OACdrC,IAAK6B,EAAM1D,GACXqB,SAAUqC,EAAMI,WAAWzC,SAC3BrB,GAAI0D,EAAM1D,GACVuB,MAAOmC,EAAMnC,MACbK,QAAQ,WACRJ,MAAOkC,EAAMlC,MACb2C,YAAaT,EAAMS,YACnBhC,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAOhB,EAAU,YAE1D,IAAK,SACD,OACI,kBAACwC,EAAA,EAAD,CACID,KAAM,SACNE,MAAOH,EAAMI,WAAWC,YAAcL,EAAMI,WAAWE,QACvDC,WAAYP,EAAMO,WAClB3C,SAAUoC,EAAMpC,SAChB4C,OAAQR,EAAMQ,OACdrC,IAAK6B,EAAM1D,GACXqB,SAAUqC,EAAMI,WAAWzC,SAC3BrB,GAAI0D,EAAM1D,GACVuB,MAAOmC,EAAMnC,MACbK,QAAQ,WACRJ,MAAOkC,EAAMlC,MACbW,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAOhB,EAAU,YAE1D,IAAK,SACD,OACI,kBAAC,EAAD,CACIC,SAAUqC,EAAMI,WAAWzC,SAC3BwC,MAAOH,EAAMI,WAAWC,YAAcL,EAAMI,WAAWE,QACvDC,WAAYP,EAAMO,WAClB3C,SAAUoC,EAAMpC,SAChBE,MAAOkC,EAAMlC,MACbD,MAAOmC,EAAMnC,MACbvB,GAAI0D,EAAM1D,GACV6B,IAAK6B,EAAM1D,GACXyB,QAASiC,EAAMjC,QACfL,SAAUA,EACVM,QAASA,IAGrB,IAAK,QACD,OACI,kBAAC,EAAD,CACIG,IAAK6B,EAAM1D,GACX0B,QAASA,EACTN,SAAUA,EACVpB,GAAI0D,EAAM1D,GACVuB,MAAOmC,EAAMnC,MACbC,MAAOkC,EAAMlC,QAGzB,QACI,OAAO,W,SCkIpB6B,EARF,CACTe,cAhOkB,CAClBC,UAAW,CACP/C,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,cAEX+C,WAAY,CACRhD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,eAEXgD,SAAU,CACNjD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,aAEXiD,IAAK,CACDlD,UAAU,EACVE,MAAO,GACPmC,KAAM,SACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,OAEXkD,aAAc,CACVnD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZE,YAAa,kBACbL,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,kBAgKXmD,iBA5JqB,CACrBC,YAAa,CACTrD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAGbzC,MAAO,wBAEXqD,kBAAmB,CACftD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAGbzC,MAAO,8BAEXsD,aAAc,CACVvD,UAAU,EACVE,MAAO,GACPmC,KAAM,SACNlC,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBoC,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAGbzC,MAAO,sBAmHXuD,kBAhHuB,CACvBC,OAAQ,CACJvD,OAAO,EACPmC,KAAM,QACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,qBAEXyD,YAAa,CACT1D,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,mBAEX0D,gBAAiB,CACb3D,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,qBA4EX2D,YAzEgB,CAChBC,UAAW,CACP3D,OAAO,EACPmC,KAAM,QACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV2C,SAAS,GAEbzC,MAAO,qBAEXoC,KAAM,CACFrC,UAAU,EACVE,MAAO,OACPmC,KAAM,SACNlC,QAAS,CAAC,OAAQ,OAClBoC,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,QAEX6D,YAAa,CACT9D,UAAU,EACVqC,KAAM,OACNnC,MAAO,GACPqC,OAAO,EACPI,WAAY,GACZE,YAAa,WACbL,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,iBAoCX8D,cAjCkB,CAClBC,QAAS,CACL9D,OAAO,EACPmC,KAAM,QACNE,OAAO,EACPI,WAAY,GACZH,WAAY,CACRzC,UAAU,EACV2C,SAAS,GAEbzC,MAAO,uBAEXgE,YAAa,CACTjE,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNE,OAAO,EACPI,WAAY,GACZE,YAAa,aACbL,WAAY,CACRzC,UAAU,EACV0C,WAAW,EACXC,SAAS,GAEbzC,MAAO,kBCtNAiE,EADG,CANW,CAACC,KAAM,EAAGlE,MAAO,gBAAiBC,MAAO,iBACtC,CAACiE,KAAM,EAAGlE,MAAO,mBAAoBC,MAAO,oBAC3C,CAACiE,KAAM,EAAGlE,MAAO,oBAAqBC,MAAO,qBACnD,CAACiE,KAAM,EAAGlE,MAAO,cAAeC,MAAO,eACrC,CAACiE,KAAM,EAAGlE,MAAO,gBAAiBC,MAAO,iBAC/C,CAACiE,KAAM,EAAGlE,MAAO,UAAWC,MAAO,Y,kCCA3CkE,EAJSC,IAAMC,OAAO,CAClCC,QAAS,6CCGZ,SAASC,EAAoBC,EAAUC,EAAUC,GAAQ,IAAD,EACjC1C,OAAOC,KAAKuC,EAASG,MAAjCC,EAD6C,sBAE/B5C,OAAOC,KAAKuC,EAASG,MAAM5D,KAAI,SAAAT,GAAG,OAAIkE,EAASG,KAAKrE,MAAlEuE,EAF6C,oBAGpDJ,EAASK,EAAaD,EAAWE,SAAUL,EAAOG,EAAWxG,OAAQuG,EAAUC,EAAWG,WAC1F,IAAMC,EAASJ,EAAWG,SAAWH,EAAWG,SAASC,OAAS,KAC9DA,GACAR,EAASS,EAAoBD,IAI9B,IA2CDE,EAAa,WACf,MAAO,CACH/C,KChDmB,gBDoDrB0C,EAAe,SAACC,EAAUL,EAAOjG,EAAImG,EAAUI,GACjD,MAAO,CACH5C,KCrDqB,gBDsDrB2C,SAAUA,EACVL,MAAOA,EACPjG,GAAIA,EACJmG,SAAUA,EACVI,SAAUA,IAWZI,EAAa,WACf,MAAO,CACHhD,KCtEoB,gBCVtBiD,EAAkB,SAACJ,EAAQnD,EAAMwD,EAAMb,GACzC,IAAMO,EAAW,CAACC,OAAQA,EAAQM,gBAAiBzD,EAAKyD,gBAAiBC,eAAe,GACxFrB,EAAgBsB,IAAhB,iBAA8BH,EAAKV,SAAnC,SAAoD,CAChDvG,OAAQiH,EAAKjH,OACb0G,SAAUO,EAAKP,SACfC,SAAUA,IAETU,MAAK,WACFjB,EF+DkB,SAACO,GAC3B,MAAO,CACH5C,KC3DwB,mBD4DxB4C,SAAUA,GElEGW,CAAeX,OACzBY,OAAM,SAAAtD,GACTuD,QAAQC,IAAIxD,OA8BPyD,EAAW,SAACC,EAAMvH,GAC3B,MAAO,CACH2D,KD9CiB,YC+CjB4D,KAAMA,EACNf,OAAQxG,IAIHwH,EAAe,WACxB,MAAO,CACH7D,KDpDqB,kBCwDhB8C,EAAsB,SAACD,GAChC,OAAO,SAAAR,GACHN,EAAgB+B,IAAhB,oBAAiCjB,EAAjC,UACKS,MAAK,SAAAlB,GACFC,EAAS0B,EAAa3B,EAASG,KAAMM,OAExCW,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,QAKf6D,EAAe,SAACrE,EAAMmD,GAC/B,MAAO,CACH7C,KDrEqB,gBCsErBN,KAAMA,EACNmD,OAAQA,EACRmB,YAAatE,EAAKyD,kB,4EC1BXc,GA3CK,SAAC,GAAY,IAAXvE,EAAU,EAAVA,KAAU,EAEHwE,mBAASC,GAA3BC,EAFqB,oBAI5B,OACI,oCACI,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAW5I,SAAS,MAEZkE,OAAOC,KAAKH,GAAMf,KAAI,SAAAT,GAClB,IAAMqG,EAAU7E,EAAKxB,GACrB,OACI,oCACI,4BAAKA,EAAIsG,QAAQ,IAAK,MACtB,kBAACC,GAAA,EAAD,CAAMC,WAAS,GAEP9E,OAAOC,KAAK0E,GAAS5F,KAAI,SAAAgG,GACrB,OACI,oCACI,kBAACF,GAAA,EAAD,CAAMC,WAAS,EAAClJ,QAAS,EAAG0D,WAAW,UACnC,kBAACuF,GAAA,EAAD,CAAMG,MAAI,EAAChI,MAAO,CAACvB,SAAU,IACzB,kBAACqB,EAAA,EAAD,KACK0H,EAAalG,GAAKyG,GAAUP,EAAalG,GAAKyG,GAAQ/G,MAAQ,OAGvE,kBAAC6G,GAAA,EAAD,CAAMG,MAAI,EAAChI,MAAO,CAACvB,SAAU,IACxBqE,EAAKxB,GAAKyG,iBCqBxDE,GA5CI,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,aAAcrF,EAA2B,EAA3BA,KAAMsF,EAAqB,EAArBA,gBAErCC,EAAwBC,IAAMC,OAAO,MAU3C,OATAD,IAAME,WAAU,WACZ,GAAIN,EAAM,CAAC,IACUO,EAAuBJ,EAAhCK,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACT,IAGA,6BACI,kBAACU,EAAA,EAAD,CACIV,KAAMA,EACNW,QAASV,EACTW,OAAQ,QACRC,kBAAgB,sBAChBC,mBAAiB,6BAEjB,kBAACC,GAAA,EAAD,CAAaxJ,GAAG,uBAAhB,gBACA,kBAACyJ,EAAA,EAAD,CAAeC,UAAU,GACrB,kBAACC,EAAA,EAAD,CACI3J,GAAG,4BACH4J,IAAKhB,EACLiB,UAAW,GAEX,kBAAC,GAAD,CAAaxG,KAAMA,MAG3B,kBAACyG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAStB,EAAc/H,MAAM,WAArC,UAGA,kBAACoJ,EAAA,EAAD,CAAQC,QAASrB,EAAiBhI,MAAM,WAAxC,YClCPsJ,GAAcC,wBAPN,CACjB5D,SAAU,KACV1G,OAAQ,KACRuK,SAAS,EACThE,SAAU,OA0BCiE,GArBM,SAACvJ,GAElB,IAKMwJ,EAAU,CACZ/D,SANazG,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMuG,YAO9C1G,OANWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAO5CmK,QANYtK,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoK,WAO7ChE,SANatG,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoG,aASlD,OACI,kBAAC8D,GAAYK,SAAb,CAAsB9I,MAAO6I,GACxBxJ,EAAME,W,SCTbnC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFmE,MAAO,QAEXqH,WAAY,CACRrL,YAAaJ,EAAMK,QAAQ,IAE/BqL,aAAc,CACVvH,UAAWnE,EAAMK,QAAQ,GACzBsL,aAAc3L,EAAMK,QAAQ,IAEhCuL,MAAO,CACHC,QAAS7L,EAAMK,QAAQ,GACvB8B,OAAQnC,EAAMK,QAAQ,GACtBD,YAAa,OACb0L,WAAY,OACZ1H,MAAO,MACP2H,OAAQ,SAEZC,aAAc,CACVnK,MAAO,WAUf,IAyVeoK,GAzVD,WACV,IAAMpL,EAAUf,KADA,EAEgBiK,IAAMhB,SAASrC,EAAU,IAFzC,mBAETpE,EAFS,KAEC4J,EAFD,OAGgCnD,oBAAS,GAHzC,mBAGToD,EAHS,KAGUC,EAHV,KAIVC,EARC3F,EAAU/B,QAAO,SAAAE,GAAI,OAAkB,IAAdA,EAAK8B,QAAYnD,KAAI,SAAAqB,GAAI,OAAIA,EAAKpC,SAU5DsF,EAAOuE,qBAAWnB,IAElBjE,EAAWqF,cACXC,EAAiBC,uBAAY,SAAChE,EAAMvH,EAAI6G,GAAX,OAAoBb,EJxCjC,SAAC3C,EAAMrD,EAAI6G,GACjC,OAAO,SAAAb,GACChG,GACAgG,EAASwB,KACT9B,EAAgBsB,IAAhB,oBAAiChH,EAAjC,SAA4CqD,GACvC4D,MAAK,WACFL,EAAgB5G,EAAIqD,EAAMwD,EAAMb,GAChCA,EAASsB,EAASjE,EAAMrD,OAE3BmH,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,OAIpB6B,EAAgB8F,KAAK,iBAAkBnI,GAClC4D,MAAK,SAAAlB,GACFa,EAAgBb,EAASG,KAAKhE,KAAMmB,EAAMwD,EAAMb,GAChDA,EAASsB,EAASjE,EAAM0C,EAASG,KAAKhE,UAEzCiF,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,OIoBoC4H,CAAWlE,EAAMvH,EAAI6G,MAAQ,CAACb,IACxFQ,EAAS3G,aAAY,SAAAC,GAAK,OAAIA,EAAMuD,KAAKmD,UACzCnD,EAAOxD,aAAY,SAAAC,GAAK,OAAIA,EAAMuD,KAAKA,QACvCqI,EAAiB7L,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMwG,SAAWzG,EAAMC,MAAMwG,SAASO,gBAAkB,QAZ1F,EAcwBe,mBAASC,GAdjC,mBAcTC,EAdS,KAcK4D,EAdL,OAeoC9D,oBAAS,GAf7C,mBAeT+D,EAfS,KAeYC,EAfZ,OAiBoBhE,oBAAS,GAjB7B,mBAiBTiE,EAjBS,KAiBIC,EAjBJ,KA6ChB,SAASC,IACL,IAAM3I,EAAO4I,IAAEC,MAAMnE,GACfoE,EAAW,GACjB,IAAK,IAAItK,KAAOwB,EAAM,CAClB,IAAM6E,EAAU7E,EAAKxB,GACjB0F,EAAO,GACL6E,EAAe5G,EAAU6G,MAAM,EAAGjL,EAASqE,KAAO,GAAGnD,KAAI,SAAAd,GAAK,OAAIA,EAAMA,SAI9E,IAAK,IAAI8G,KAHL8D,EAAaE,SAASzK,KACtB0F,EAAI,YAAkB0D,GAEP/C,EACf,GAAIA,EAAQqE,eAAejE,GAAS,CAChC,IAAM9G,EAAQ0G,EAAQI,GACjB9G,EAAMF,WACPiG,EAAKe,GAAU9G,EAAK,OAIhC2K,EAAStK,GAAO0F,EAEpB,OAAO4E,EA7CXpD,qBAAU,WAEN,GADAyD,IACe,OAAXhG,EAAiB,CACjB,IAAMiG,EAAkBR,IAAEC,MAAMnE,GAChC,IAAK,IAAIlG,KAAO4K,EAAiB,CAC7B,IAAMvE,EAAUuE,EAAgB5K,GAC1B6K,EAAgBrJ,EAAKxB,GAC3B,IAAK,IAAI6B,KAASgJ,EACA,gBAAVhJ,GACAgJ,EAAcH,eAAe7I,IACzBgJ,EAAc/E,cACduD,GAAmB,GACnBhD,EAAQxE,GAAOlC,MAAQkL,EAAchJ,GACrCwE,EAAQxE,GAAOI,WAAWE,SAAU,EACpCkE,EAAQxE,GAAOI,WAAWC,WAAY,GAKtD4H,EAAgBc,GAChBE,EAAoBnH,EAAU,OAGnC,IAyBH,IAAMgH,EAAgB,WAClB,IAAMC,EAAkBR,IAAEC,MAAMnE,GAChC,IAAK,IAAIlG,KAAO4K,EAAiB,CAC7B,IAAMvE,EAAUuE,EAAgB5K,GAChC,GAAIqG,IAAYJ,EAAchD,mBAAqBoD,IAAYJ,EAAc5C,aAAegD,IAAYJ,EAAczC,eAClH,IAAK,IAAIxD,KAAOqG,EACZ,GAAY,gBAARrG,GACAqG,EAAQqE,eAAe1K,GAAM,CAC7B,IAAM6B,EAAQwE,EAAQrG,GACH,UAAf6B,EAAMC,KACND,EAAMlC,OAAQ,GAEdkC,EAAMpC,UAAW,EACjBoC,EAAMlC,MAAQ,GACdkC,EAAMI,WAAWE,SAAU,EAC3BN,EAAMI,WAAWC,WAAY,SAKzC,IAAK,IAAIlC,KAAOqG,EACZ,GAAIA,EAAQqE,eAAe1K,GAAM,CAC7B,IAAM6B,EAAQwE,EAAQrG,GACtB6B,EAAMlC,MAAQ,GACdkC,EAAMI,WAAWE,SAAU,EAC3BN,EAAMI,WAAWC,WAAY,GAK7C4H,EAAgBc,IA8BdE,EAAsB,SAACvL,GACzB,IACM8G,EADkB+D,IAAEC,MAAMnE,GACA3G,EAASI,OACrCwC,EAAQkE,GACR2D,GAAqB,GAErBA,GAAqB,IASvBe,EAAuB,SAACxL,EAAUyL,GACpC,IAAMJ,EAAkBR,IAAEC,MAAMnE,GAC1BG,EAAUuE,EAAgBrL,EAASI,OACzC,IAAK,IAAIkC,KAASwE,EACVA,EAAQqE,eAAe7I,KACK,SAAxBwE,EAAQxE,GAAOC,MAA2C,WAAxBuE,EAAQxE,GAAOC,OACjDuE,EAAQxE,GAAOpC,SAAWuL,IAItClB,EAAgBc,IA2HdzI,EAAU,SAACkE,GACb,IAAK,IAAIrG,KAAOqG,EACZ,GAAY,gBAARrG,GACAqG,EAAQqE,eAAe1K,GAAM,CAC7B,IAAM6B,EAAQwE,EAAQrG,GACtB,IAAK6B,EAAMpC,WAAaoC,EAAMI,WAAWE,QACrC,OAAO,EAKnB,OADAoD,QAAQC,IAAI,kBACL,GAGX,OAAIqE,EACO,kBAAC,KAAD,CAAUpL,GAAG,uBAIpB,yBAAKL,UAAWN,EAAQZ,MACpB,kBAAC+N,EAAA,EAAD,CAASC,WAAY3L,EAASqE,KAAMuH,kBAAgB,GAC/C7B,EAAM7I,KAAI,SAACf,GAAD,OACP,kBAAC0L,EAAA,EAAD,CACIpL,IAAKN,EACLtB,UAAWN,EAAQmL,cAEnB,kBAACoC,EAAA,EAAD,KAAY3L,QAIxB,6BACKH,EAASqE,OAAS0F,EAAMgC,OACrB,6BACI,kBAAC9M,EAAA,EAAD,CAAYJ,UAAWN,EAAQ6K,cAA/B,uBACA,kBAACT,EAAA,EAAD,CAAQC,QA3KR,WAChBgB,EAAYxF,EAAU,MA0KN,UAGJ,6BACI,kBAAC4H,EAAA,EAAD,CAAOC,UAAW,EAAGpN,UAAWN,EAAQ+K,OACpC,kBAAC,EAAD,CAAMrH,KAAM0E,EAAa3G,EAASI,OAAQJ,SAAUA,EAAUM,QA/JhE,SAACU,EAAOhB,EAAUkM,GACpC,IAAMb,EAAkBR,IAAEC,MAAMnE,GAC1BG,EAAUuE,EAAgBrL,EAASI,OACrC+L,EAAYnL,EAAMoL,OAAOxN,GAI7B,QAHkByN,IAAdF,IACAA,EAAYnL,EAAMoL,OAAOtL,MAEX,UAAdoL,EACApF,EAAQqF,GAAW/L,MAAQY,EAAMoL,OAAO5K,QACpCR,EAAMoL,OAAO5K,QACbgK,EAAqBxL,GAAU,GAE/BwL,EAAqBxL,GAAU,QAEhC,GAAkB,WAAdkM,EACPlG,QAAQC,IAAIiG,OACT,CACH,IAAM5J,EAAQwE,EAAQqF,GACtB7J,EAAMO,WAAa,GACnBP,EAAMlC,MAAQY,EAAMoL,OAAOhM,MAC3BkC,EAAMI,WAAWC,WAAY,EAG7B,IAEI2J,EAFA5J,EAAaJ,EAAMI,WAGvB,OAFAJ,EAAMO,WAAa,GAEXP,EAAM1D,IACV,IAAK,YAED0N,EADU,gBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAkF,GAAvE,qEAC/B,MACJ,IAAK,aAEDA,EADU,8BACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAwD,GAA7C,2CAC/B,MACJ,IAAK,WAEDA,EADU,gBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAkF,GAAvE,qEAC/B,MACJ,IAAK,MAEDA,EADU,iBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAiD,GAAtC,oCAC/B,MACJ,IAAK,eAEDA,EADU,0CACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAsE,GAA3D,yDAC/B,MACJ,IAAK,cAML,IAAK,oBAEDA,EADU,kBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAmD,GAAxC,sCAC/B,MACJ,IAAK,eAEDA,EADU,YACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAA2B,GAAhB,cAC/B,MACJ,IAAK,cAML,IAAK,kBAEDA,EADU,iBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAkD,GAAvC,qCAC/B,MACJ,IAAK,OAEDA,EADU,YACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAA2B,GAAhB,cAC/B,MACJ,IAAK,cAEDA,EADU,uBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAAwE,GAA7D,2DAC/B,MACJ,IAAK,cAEDA,EADU,uBACSC,KAAKjK,EAAMlC,OAC9BsC,EAAWE,QAAU0J,EACrBhK,EAAMO,WAAcyJ,EAA0E,GAA/D,8DAMvC1J,EAAQkE,IACRgD,GAAmB,GACnBW,GAAqB,KAErBX,GAAmB,GACnBW,GAAqB,IAGzBF,EAAgBc,OA4CA,6BACI,kBAAC1C,EAAA,EAAD,CACIzI,SAA4B,IAAlBF,EAASqE,KACnBuE,QAvMT,WACfgB,GAAY,SAAC4C,GAET,OADAjB,EAAoBnH,EAAUoI,EAAenI,KAAO,IAC7CD,EAAUoI,EAAenI,KAAO,OAqMnBxF,UAAWN,EAAQ4K,YAHvB,QAQInJ,EAASqE,OAAS0F,EAAMgC,OAAS,EAC7B,kBAACpD,EAAA,EAAD,CAAQnI,QAAQ,YAAYjB,MAAM,UAAUqJ,QAxNzD,WACf,IAAMmC,EAAWH,IACjBG,EAAQ,iBAAsB,EAC9Bb,EAAea,EAAU3F,EAAQK,GACjCmE,GAAY,SAAC4C,GAET,OADAjB,EAAoBnH,EAAUoI,EAAenI,KAAO,IAC7CD,EAAUoI,EAAenI,KAAO,OAmNPnE,SAAUsK,GADlB,QAIA,kBAAC7B,EAAA,EAAD,CAAQnI,QAAQ,YAAYjB,MAAM,UAAUqJ,QAAS,kBAAM+B,GAAa,IAChEzK,SAAUsK,GADlB,cASxB,kBAAC,GAAD,CAAYvI,KAAMA,EAAMoF,KAAMqD,EAAapD,aAAc,kBAAMqD,GAAa,IAAQpD,gBA/OrE,WACnBoD,GAAa,GACb,IAAMI,EAAWH,IACjBG,EAAQ,iBAAsB,EAC9Bb,EAAea,EAAU3F,EAAQK,GACjCmE,EAAYxF,EAAU,IACtBqG,GAAqB,GACrBW,SC3IOqB,GAXC,WACZ,IAAMxK,EAAOxD,aAAY,SAAAC,GAAK,OAAIA,EAAMuD,KAAKA,QAC7C,OACI,kBAAC4E,GAAA,EAAD,CAAW5I,SAAS,MAChB,kBAAC+N,EAAA,EAAD,CAAQC,UAAW,GACf,kBAAC,GAAD,CAAahK,KAAMA,O,UCGpByK,GAXM,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,8BAChDpH,EAAOuE,qBAAWnB,IACxB,OACI,kBAAC,KAAD,iBAAWgE,EAAX,CAAiBC,OAAQ,SAACrN,GAAD,OACJ,IAAjBgG,EAAKsD,QACC,kBAAC4D,EAAclN,GACf,kBAAC,KAAD,CAAUP,GAAG,mB,iFCQzB1B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4L,MAAO,CACHzH,UAAWnE,EAAMK,SAAS,IAC1B4D,QAAS,OACTC,cAAe,SACfH,WAAY,UAEhBsL,OAAQ,CACJlN,OAAQnC,EAAMK,QAAQ,GACtBiP,gBAAiBtP,EAAMuP,QAAQC,UAAUC,MAE7ClL,KAAM,CACFH,MAAO,OACPD,UAAWnE,EAAMK,QAAQ,IAE7BqP,OAAQ,CACJvN,OAAQnC,EAAMK,QAAQ,EAAG,EAAG,QA6DrBsP,GAxDM,WACjB,IAAM9O,EAAUf,KAGVoH,EAAWqF,cACXqD,EAAkBnD,uBAAY,kBAAMvF,GTAnC,SAAAA,GACH,IAAMpG,EAAS+O,aAAaC,QAAQ,UAC9B3I,EAAQ0I,aAAaC,QAAQ,SAC/BhP,GAAUqG,GACVP,EAAgB+B,IAAhB,+CAA4D7H,EAA5D,MACKqH,MAAK,SAAAlB,GAAQ,OAAID,EAAoBC,EAAUC,EAAUC,MACzDkB,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,GACZmC,EAASW,aSR8C,CAACX,IAClEmE,EAAUtK,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoK,WAIjD,OAFAuE,IAEIvE,EACO,kBAAC,KAAD,CAAU7J,GAAG,sBAIpB,kBAAC2H,GAAA,EAAD,CAAW+F,UAAU,OAAO3O,SAAS,MACjC,kBAAC2I,GAAA,EAAD,MACA,yBAAK/H,UAAWN,EAAQ+K,OACpB,kBAACtC,GAAA,EAAD,CAAMC,WAAS,EAAClJ,QAAS,GACrB,kBAACiJ,GAAA,EAAD,CAAMG,MAAI,GACN,kBAACsG,GAAA,EAAD,CAAM5O,UAAWN,EAAQZ,MACrB,kBAAC+P,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI9O,UAAWN,EAAQqP,OAGnB,kBAACC,GAAA,EAAD,CAAQhP,UAAWN,EAAQwO,QACvB,kBAAC,KAAD,QAIR,kBAACe,GAAA,EAAD,KACI,kBAAC7O,EAAA,EAAD,CAAY8O,cAAY,EAACvN,QAAQ,KAAKoM,UAAU,MAAhD,YAGA,kBAAC3N,EAAA,EAAD,CAAYuB,QAAQ,QAAQjB,MAAM,gBAAgBqN,UAAU,KAA5D,+FAMR,kBAACoB,GAAA,EAAD,KACI,kBAAC,IAAD,CAAM9O,GAAG,kBAAkBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SAChE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,mBCjDrB2O,GAjBF,WACT,OACI,kBAAClH,GAAA,EAAD,CACIC,WAAS,EACTlJ,QAAS,EACToQ,UAAU,SACV1M,WAAW,SACX2M,QAAQ,SACRjP,MAAO,CAAEkP,UAAW,uBAGpB,kBAACrH,GAAA,EAAD,CAAMG,MAAI,EAACmH,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC,GAAD,S,kDCXVC,GAAY,WACd,OACI,kBAACxP,EAAA,EAAD,CAAYuB,QAAQ,QAAQjB,MAAM,gBAAgBmP,MAAM,UACnD,kBACD,kBAAC,KAAD,CAAcnP,MAAM,UAAUoP,KAAK,8CAAnC,YAEgB,KACf,IAAIC,MAAOC,cACX,MAKPrR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4L,MAAO,CACHzH,UAAWnE,EAAMK,QAAQ,GACzB4D,QAAS,OACTC,cAAe,SACfH,WAAY,UAEhBsL,OAAQ,CACJlN,OAAQnC,EAAMK,QAAQ,GACtBiP,gBAAiBtP,EAAMuP,QAAQC,UAAUC,MAE7ClL,KAAM,CACFH,MAAO,OACPD,UAAWnE,EAAMK,QAAQ,IAE7BqP,OAAQ,CACJvN,OAAQnC,EAAMK,QAAQ,EAAG,EAAG,QA6FrB+Q,GAzFD,WACV,IAAMvQ,EAAUf,KADA,EAGgBiJ,mBAAS,IAHzB,mBAGTvB,EAHS,KAGC6J,EAHD,OAIgBtI,mBAAS,IAJzB,mBAITuI,EAJS,KAICC,EAJD,KAMVrK,EAAWqF,cACXiF,EAAe/E,uBAAY,SAACjF,EAAU8J,GAAX,OAAwBpK,EX1CjC,SAACM,EAAU8J,GACnC,OAAO,SAAApK,GACHA,EAASU,KACTf,IAAM6F,KAAN,oHAAgI,CAC5H,MAASlF,EACT,SAAY8J,IAEXnJ,MAAK,SAAAlB,GACF,IAAME,EAAQF,EAASG,KAAKqK,QACtB3Q,EAASmG,EAASG,KAAKsK,QACvBC,EAAa1K,EAASG,KAAKwK,UACjC/B,aAAagC,QAAQ,QAAS1K,GAC9B0I,aAAagC,QAAQ,SAAU/Q,GAC/B+O,aAAagC,QAAQ,aAAcF,GACnC/K,EAAgB+B,IAAhB,+CAA4D1B,EAASG,KAAKsK,QAA1E,MACKvJ,MAAK,SAAAlB,GAAQ,OAAID,EAAoBC,EAAUC,EAAUC,MACzDkB,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,GACZuD,QAAQC,IAAIxD,SAGvBsD,OAAM,SAAAtD,GACHmC,EAASW,KACTS,QAAQC,IAAIxD,OWmB0C+M,CAAatK,EAAU8J,MAAY,CAACpK,IAChG6K,EAAehR,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM+Q,cAChD3G,EAAUtK,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMoK,WAQjD,OAAIA,EACO,kBAAC,KAAD,CAAU7J,GAAG,sBAIpB,kBAAC2H,GAAA,EAAD,CAAW+F,UAAU,OAAO3O,SAAS,MACjC,kBAAC2I,GAAA,EAAD,MACA,yBAAK/H,UAAWN,EAAQ+K,OACpB,kBAACuE,GAAA,EAAD,CAAQhP,UAAWN,EAAQwO,QACvB,kBAAC,KAAD,OAEJ,kBAAC9N,EAAA,EAAD,CAAY2N,UAAU,KAAKpM,QAAQ,MAAnC,UAGA,0BAAM3B,UAAWN,EAAQ0D,KAAM0N,YAAU,EAACC,SAAU,SAAC5O,GAAD,OAnBlD,SAACA,GACXA,EAAM6O,iBACNX,EAAahK,EAAU8J,GAiBgDrQ,CAAMqC,KACjE,kBAACwB,EAAA,EAAD,CACIhC,QAAQ,WACRX,OAAO,SACPI,UAAQ,EACR6P,WAAS,EACTlR,GAAG,QACHuB,MAAM,gBACNW,KAAK,QACLiP,aAAa,QACbC,WAAS,EACT5P,MAAO8E,EACPnE,SAAU,SAACC,GAAD,OAAW+N,EAAY/N,EAAMoL,OAAOhM,UAElD,kBAACoC,EAAA,EAAD,CACIhC,QAAQ,WACRX,OAAO,SACPI,UAAQ,EACR6P,WAAS,EACThP,KAAK,WACLX,MAAM,WACNoC,KAAK,WACL3D,GAAG,WACHmR,aAAa,mBACb3P,MAAO4O,EACPjO,SAAU,SAACC,GAAD,OAAWiO,EAAYjO,EAAMoL,OAAOhM,UAG9CqP,EAAe,kBAACQ,GAAA,EAAD,CAAkB9Q,MAAO,CAAC0C,UAAW,SAChD,kBAAC8G,EAAA,EAAD,CACIpG,KAAK,SACLuN,WAAS,EACTtP,QAAQ,YACRjB,MAAM,UACNV,UAAWN,EAAQ6O,QALvB,UAWR,kBAACpG,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMG,MAAI,GACN,kBAAC,IAAD,CAAMjI,GAAG,mBAAmBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SACjE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,uCAQpB,kBAAC2Q,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,GAAD,S,QC3GVC,GAAa,SAACvL,EAAOwK,EAAY7Q,GASnC,OARA+O,aAAagC,QAAQ,QAAS1K,GAC9B0I,aAAagC,QAAQ,SAAU/Q,GAC/B+O,aAAagC,QAAQ,aAAcF,GAM5B,CACH9M,KX1BmB,cW2BnB8N,QAPYC,YAAW,WACvB/C,aAAagD,WAAW,SACxBhD,aAAagD,WAAW,UACxBhD,aAAagD,WAAW,gBACZ,IAAblB,KAQMmB,GAAc,WACvB,MAAO,CACHjO,KXrCoB,eWsCpBkO,QAAS,OAIJC,GAAiB,SAAC5L,GAC3B,MAAO,CACHvC,KX3CuB,kBW4CvBkO,QAAS3L,IAIJ6L,GAAgB,SAAClO,GAC1B,MAAO,CACHF,KXjDoB,eWkDpBkO,QAAS,KACThO,MAAOA,ICzCTgM,GAAY,WACd,OACI,kBAACxP,EAAA,EAAD,CAAYuB,QAAQ,QAAQjB,MAAM,gBAAgBmP,MAAM,UACnD,kBACD,kBAAC,KAAD,CAAcnP,MAAM,UAAUoP,KAAK,8CAAnC,YAEgB,KACf,IAAIC,MAAOC,cACX,MAKPrR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4L,MAAO,CACHzH,UAAWnE,EAAMK,QAAQ,GACzB4D,QAAS,OACTC,cAAe,SACfH,WAAY,UAEhBsL,OAAQ,CACJlN,OAAQnC,EAAMK,QAAQ,GACtBiP,gBAAiBtP,EAAMuP,QAAQC,UAAUC,MAE7ClL,KAAM,CACFH,MAAO,OACPD,UAAWnE,EAAMK,QAAQ,IAE7BqP,OAAQ,CACJvN,OAAQnC,EAAMK,QAAQ,EAAG,EAAG,QA0PrB6S,GAtPA,WACX,IAAMrS,EAAUf,KAEVoH,EAAWqF,cACX4G,EAAe1G,uBAAY,SAAC2G,GAAD,OAAclM,EDpD7B,SAACkM,GACnB,OAAO,SAAAlM,GACHA,EAAS4L,MACTjM,IAAM6F,KAAN,wGAAoH0G,GAC/GjL,MAAK,SAAAlB,GACFL,EAAgB8F,KAAK,cAAe,CAAClF,SAAU4L,EAAS7N,UAAY,IAAM6N,EAAS3N,SAAU3E,OAAQmG,EAASG,KAAKsK,UAC9GvJ,MAAK,WACFjB,EAASwL,GAAWzL,EAASG,KAAKqK,QAASxK,EAASG,KAAKwK,UAAW3K,EAASG,KAAKsK,UAClFxK,EAAS8L,GAAe,6BAAI/L,EAASG,MAAd,IAAoBI,SAAU4L,EAAS7N,UAAY,IAAM6N,EAAS3N,gBAE5F4C,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,GACZmC,EAAS+L,GAAclO,EAAMsO,gBAGxChL,OAAM,SAAAtD,GACHuD,QAAQC,IAAIxD,GACZmC,EAAS+L,GAAclO,EAAMsO,cCmCeC,CAAOF,MAAY,CAAClM,IAEtEmE,EAAUtK,aAAY,SAAAC,GAAK,OAAIA,EAAMuS,KAAKlI,WAC1CmI,EAAkBzS,aAAY,SAAAC,GAAK,OAAIA,EAAMuS,KAAKC,mBAGlDC,EAAc,CAChBlO,UAAW,CACP/C,UAAU,EACVE,MAAO,GACPmC,KAAM,OACNwN,aAAc,QACdjP,KAAM,YACNN,QAAS,WACTsP,WAAW,EACXlR,GAAI,YACJ6B,IAAK,YACLuP,WAAW,EACX/P,UAAU,EACVwC,OAAO,EACPI,WAAY,GACZ9B,SAAU,SAACC,GAAD,OAAWoQ,EAAgB,YAAapQ,IAClD0B,WAAY,CACR2O,UAAW,EACXC,UAAW,IACX3O,WAAW,EACXC,SAAS,GAEbzC,MAAO,cAEXgD,SAAU,CACNjD,UAAU,EACVE,MAAO,GACPmC,KAAM,OACN/B,QAAS,WACTP,UAAU,EACV6P,WAAW,EACXlR,GAAI,WACJ2S,IAAK,WACLzQ,KAAM,WACNiP,aAAc,QACdtN,OAAO,EACPI,WAAY,GACZ9B,SAAU,SAACC,GAAD,OAAWoQ,EAAgB,WAAYpQ,IACjD0B,WAAY,CACRzC,UAAU,EACVoR,UAAW,EACXC,UAAW,IACX3O,WAAW,EACXC,SAAS,GAEbzC,MAAO,aAEXqR,MAAO,CACHtR,UAAU,EACVE,MAAO,GACPmC,KAAM,QACN/B,QAAS,WACTP,UAAU,EACV6P,WAAW,EACXlR,GAAI,QACJ6B,IAAK,QACLK,KAAM,QACNiP,aAAc,QACdtN,OAAO,EACPI,WAAY,GACZ9B,SAAU,SAACC,GAAD,OAAWoQ,EAAgB,QAASpQ,IAC9C0B,WAAY,CACR2O,UAAW,EACXC,UAAW,IACX3O,WAAW,EACXC,SAAS,GAEbzC,MAAO,iBAEX6O,SAAU,CACN9O,UAAU,EACVE,MAAO,GACPmC,KAAM,WACN/B,QAAS,WACTP,UAAU,EACV6P,WAAW,EACXhP,KAAM,WACNlC,GAAI,WACJ6B,IAAK,WACLsP,aAAc,mBACdtN,OAAO,EACPI,WAAY,GACZ9B,SAAU,SAACC,GAAD,OAAWoQ,EAAgB,WAAYpQ,IACjD0B,WAAY,CACR2O,UAAW,EACXC,UAAW,GACX3O,WAAW,EACXC,SAAS,GAEbzC,MAAO,aAnGE,EAuGOsG,mBAAS0K,GAvGhB,mBAuGVlP,EAvGU,KAuGJwP,EAvGI,KAyGXL,EAAkB,SAACM,EAAS1Q,GAC9B,IAAM2Q,EAAU9G,IAAEC,MAAM7I,GACxB0P,EAAQD,GAAShP,WAAWC,WAAY,EACxCgP,EAAQD,GAAStR,MAAQY,EAAMoL,OAAOhM,MAClCsR,IAAYzP,EAAKgB,UAAUrE,IAAM8S,IAAYzP,EAAKkB,SAASvE,GAC3DgT,EAAoBD,EAAQD,IACrBA,IAAYzP,EAAKuP,MAAM5S,GAC9BiT,EAAcF,EAAQD,IACfA,IAAYzP,EAAK+M,SAASpQ,IACjCkT,EAAiBH,EAAQD,IAE7BD,EAAQE,IAGNC,EAAsB,SAAAtP,GACpBA,EAAMI,WAAWC,YACbL,EAAMlC,MAAM2L,OAASzJ,EAAMI,WAAW2O,WAAa/O,EAAMlC,MAAM2L,OAASzJ,EAAMI,WAAW4O,WACzFhP,EAAMI,WAAWE,SAAU,EAC3BN,EAAMG,OAAQ,EACdH,EAAMO,WAAa,YAAcP,EAAMI,WAAW2O,UAAY,cAAgB/O,EAAMI,WAAW4O,YAE/FhP,EAAMG,OAAQ,EACdH,EAAMO,WAAa,MAKzBgP,EAAgB,SAAAE,GAClB,IAAMP,EAAQO,EAAW3R,MACd,uJACQmM,KAAKyF,OAAOR,GAAOS,gBAMlCF,EAAWtP,OAAQ,EACnBsP,EAAWlP,WAAa,KALxBkP,EAAWrP,WAAWE,SAAU,EAChCmP,EAAWtP,OAAQ,EACnBsP,EAAWlP,WAAa,0BAQ1BiP,EAAmB,SAAAI,GACrB,IAAMC,EAAKD,EAAc9R,MACT,QAAQmM,KAAK4F,IACzB,QAAQ5F,KAAK4F,IACb,QAAQ5F,KAAK4F,IACb,eAAe5F,KAAK4F,IACpBA,EAAGpG,OAAS,GAOZmG,EAAczP,OAAQ,EACtByP,EAAcrP,WAAa,KAN3BqP,EAAcxP,WAAWE,SAAU,EACnCsP,EAAczP,OAAQ,EACtByP,EAAcrP,WAAa,uIAoBnC,OAAIkG,EACO,kBAAC,KAAD,CAAU7J,GAAG,sBAIpB,kBAAC2H,GAAA,EAAD,CAAW+F,UAAU,OAAO3O,SAAS,MACjC,kBAAC2I,GAAA,EAAD,MACA,yBAAK/H,UAAWN,EAAQ+K,OACpB,kBAACuE,GAAA,EAAD,CAAQhP,UAAWN,EAAQwO,QACvB,kBAAC,KAAD,OAEJ,kBAAC9N,EAAA,EAAD,CAAY2N,UAAU,KAAKpM,QAAQ,MAAnC,WAGA,0BAAM3B,UAAWN,EAAQ0D,KAAM0N,YAAU,EAACC,SAAU,SAAC5O,GAAD,OAzB1C,SAACA,GACnBA,EAAM6O,iBACN,IAAMuC,EAAcvH,IAAEC,MAAM7I,GACtB8I,EAAW,GACjB5I,OAAOC,KAAKgQ,GAAalR,KAAI,SAAAT,GAEzB,OADAsK,EAAStK,GAAO2R,EAAY3R,GAAKL,MAC1B,QAEXyQ,EAAa9F,GAiB0DsH,CAAcrR,KACzE,kBAACgG,GAAA,EAAD,CAAMC,WAAS,EAAClJ,QAAS,GAEjBoE,OAAOC,KAAKH,GAAMf,KAAI,SAAAT,GAClB,IAAM6B,EAAQL,EAAKxB,GACnB,OAAI6B,IAAUL,EAAKgB,WAAaX,IAAUL,EAAKkB,SAEvC,kBAAC6D,GAAA,EAAD,CAAMG,MAAI,EAACmH,GAAI,GAAIE,GAAI,EAAG/N,IAAKA,GAC3B,kBAAC+B,EAAA,EACOF,IAMZ,kBAAC0E,GAAA,EAAD,CAAMG,MAAI,EAACmH,GAAI,GAAI7N,IAAKA,GACpB,kBAAC+B,EAAA,EACOF,QAS5B4O,EAAkB,kBAACjB,GAAA,EAAD,CAAkB9Q,MAAO,CAAC0C,UAAW,SACnD,kBAAC8G,EAAA,EAAD,CACIpG,KAAK,SACLuN,WAAS,EACTtP,QAAQ,YACRjB,MAAM,UACNV,UAAWN,EAAQ6O,QALvB,WAUR,kBAACpG,GAAA,EAAD,CAAMC,WAAS,EAACmH,QAAQ,YACpB,kBAACpH,GAAA,EAAD,CAAMG,MAAI,GACN,kBAAC,IAAD,CAAMjI,GAAG,kBAAkBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SAChE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,yCAQpB,kBAAC2Q,GAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,GAAD,S,mFC7QV3S,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4L,MAAO,CACHzH,UAAWnE,EAAMK,QAAQ,GACzB4D,QAAS,OACTC,cAAe,SACfH,WAAY,UAEhBsL,OAAQ,CACJlN,OAAQnC,EAAMK,QAAQ,GACtBiP,gBAAiBtP,EAAMuP,QAAQC,UAAUC,MAE7ClL,KAAM,CACFH,MAAO,OACPD,UAAWnE,EAAMK,QAAQ,IAE7BqP,OAAQ,CACJvN,OAAQnC,EAAMK,QAAQ,EAAG,EAAG,IAEhCuU,KAAM,CACFrU,SAAU,SAmFHsU,GA/EC,WAEZ,IAAM9M,EAAOuE,qBAAWnB,IAElBzD,EAAS3G,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMwG,SAAWzG,EAAMC,MAAMwG,SAASC,OAAS,QACnFM,EAAkBjH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMwG,SAAWzG,EAAMC,MAAMwG,SAASO,gBAAkB,QACrGC,EAAgBlH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMwG,SAAWzG,EAAMC,MAAMwG,SAASQ,cAAgB,QAEjG6M,EAAe9K,mBAErBC,qBAAU,WACN,IAAIxB,EAAO,KACG,MAAVf,EACAe,EAAO,uEACCT,EAEDA,IACPS,EAAO,mCAFPA,EAAO,+FAKXqM,EAAa3K,QAAQ4K,UAAYtM,IAClC,CAACf,EAAQM,EAAiBC,IAE7B,IAAMpH,EAAUf,KAChB,OACI,kBAACqJ,GAAA,EAAD,CAAW+F,UAAU,OAAO3O,SAAS,MACjC,kBAAC2I,GAAA,EAAD,MACA,yBAAK/H,UAAWN,EAAQ+K,OACpB,kBAACtC,GAAA,EAAD,CAAMC,WAAS,EAAClJ,QAAS,EAAGqQ,QAAS,aAAcjP,MAAO,CAAC0C,UAAW,QAClE,kBAACmF,GAAA,EAAD,CAAMG,MAAI,GACN,kBAACsG,GAAA,EAAD,CAAM5O,UAAWN,EAAQ+T,MACrB,kBAACI,GAAA,EAAD,CACI3F,OACI,kBAACc,GAAA,EAAD,CAAQ5M,aAAW,SAASpC,UAAWN,EAAQwO,QAA/C,KAIJ4F,OACI,kBAACC,GAAA,EAAD,CAAY3R,aAAW,YACnB,kBAAC,KAAD,OAGRjD,MAAO,eACP6U,UAAWpN,EAAKP,WAEpB,kBAACyI,GAAA,EAAD,CACI9O,UAAWN,EAAQqP,MACnBkF,MAAM,kCACN9U,MAAM,gBAEV,kBAAC8P,GAAA,EAAD,KACI,kBAAC7O,EAAA,EAAD,CAAYuJ,IAAKgK,EAAchS,QAAQ,QAAQjB,MAAM,gBAAgBqN,UAAU,OAGnF,kBAACoB,GAAA,EAAD,CAAa+E,gBAAc,GACvB,kBAACH,GAAA,EAAD,CAAY3R,aAAW,oBACnB,kBAAC,KAAD,OAEJ,kBAAC2R,GAAA,EAAD,CAAY3R,aAAW,SACnB,kBAAC,KAAD,WAMpB,kBAAC+F,GAAA,EAAD,CAAMC,WAAS,EAAClJ,QAAS,EAAGqQ,QAAS,cACjC,kBAACpH,GAAA,EAAD,CAAMG,MAAI,GACN,kBAAC,IAAD,CAAMjI,GAAG,mBAAmBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SACjE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,+CCpGtByT,GAAiB,WACnB,MAAO,CACHzQ,KdDc,WcKhB0Q,GAAc,WAChB,MAAO,CACH1Q,KdrBmB,ccyBZ2Q,GAxBO,WAClB,OAAO,SAAAtO,GACH2I,aAAagD,WAAW,UACxBhD,aAAagD,WAAW,SACxBD,YAAW,WACP1L,EAASqO,MACTrO,EAASoO,QACV,OCiBIG,GAtBA,SAAC1T,GACZ,IAAMmF,EAAWqF,cACXmJ,EAASjJ,uBAAY,kBAAMvF,EAASsO,QAAkB,CAACtO,IAMvDpG,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAShD,OAPA+I,qBAAU,WALNyL,IAOI5U,IACDiB,EAAM4T,SAASC,SAAW,gBAK7B,yECbF9V,GAAYC,YAAW,CACzBE,KAAM,CACFM,SAAU,IACV4B,OAAQ,OACRgC,UAAW,UAiCJ0R,GA7BE,WACb,IAAMhV,EAAUf,KAEhB,OACI,kBAACiQ,GAAA,EAAD,CAAM5O,UAAWN,EAAQZ,MACrB,kBAACmQ,GAAA,EAAD,KACI,kBAAC7O,EAAA,EAAD,CAAY8O,cAAY,EAACvN,QAAQ,KAAKoM,UAAU,MAAhD,aAGA,kBAAC3N,EAAA,EAAD,CAAYuB,QAAQ,QAAQjB,MAAM,gBAAgBqN,UAAU,KAA5D,sGAIJ,kBAACoB,GAAA,EAAD,KACI,kBAAC,IAAD,CAAM9O,GAAG,oBAAoBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SAClE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,mBAIJ,kBAAC,IAAD,CAAML,GAAG,mBAAmBC,MAAO,CAACC,eAAgB,OAAQC,QAAS,SACjE,kBAACsJ,EAAA,EAAD,CAAQsF,KAAK,QAAQ1O,MAAM,WAA3B,sBCQLiU,OA9Bf,WAEI,IAAIC,EACA,kBAAC,KAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,8CAChB,kBAAC,GAAD,CAAcC,KAAK,mBAAmBC,OAAK,EAAChH,UAAWjD,KACvD,kBAAC,GAAD,CAAcgK,KAAK,oBAAoBC,OAAK,EAAChH,UAAWH,KACxD,kBAAC,GAAD,CAAckH,KAAK,oBAAoBC,OAAK,EAAChH,UAAW2F,KACxD,kBAAC,GAAD,CAAcoB,KAAM,UAAWC,OAAK,EAAChH,UAAWuG,KAChD,kBAAC,GAAD,CAAcQ,KAAK,qBAAqB/G,UAAW2G,KACnD,kBAAC,KAAD,CAAOI,KAAK,mBAAmBC,OAAK,EAAChH,UAAWgE,KAChD,kBAAC,KAAD,CAAO+C,KAAK,kBAAkBC,OAAK,EAAChH,UAAWkC,KAC/C,kBAAC,KAAD,CAAO6E,KAAK,YAAYC,OAAK,EAAChH,UAAWsB,KACzC,kBAAC,KAAD,CAAOpB,OAAQ,kBAAM,kBAAC,KAAD,CAAU5N,GAAG,mBAM9C,OACI,yBAAKL,UAAU,OACX,kBAAC,EAAD,KACI,kBAAC,GAAD,KACK4U,MC1BDI,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASC,MACvB,2D,ICQFC,G,SCxBEC,GAAe,CACjB9O,OAAQ,KACRnD,KAAM,KACNsE,aAAa,EACb9D,MAAO,KACP0R,YAAY,GAkBDC,GAfS,WAAiC,IAAhC1V,EAA+B,uDAAzBwV,GAAcvB,EAAW,uCACpD,OAAQA,EAAOpQ,MACX,IpBZiB,YoBab,OAAO,6BAAI7D,GAAX,IAAkBuD,KAAM0Q,EAAOxM,KAAMf,OAAQuN,EAAOvN,OAAQ+O,YAAY,IAC5E,IpBbmB,YoBcf,OAAO,6BAAIzV,GAAX,IAAkB0G,OAAQ,KAAMnD,KAAM,KAAMsE,aAAa,EAAO9D,MAAO,KAAM0R,YAAY,IAC7F,IpBdqB,gBoBejB,OAAO,6BAAIzV,GAAX,IAAkByV,YAAY,IAClC,IpBfqB,gBoBgBjB,OAAO,6BAAIzV,GAAX,IAAkBuD,KAAM0Q,EAAO1Q,KAAMmD,OAAQuN,EAAOvN,OAAQmB,YAAaoM,EAAOpM,cACpF,QACI,OAAO7H,I,SCnBbwV,I,OAAe,CACjBzO,KAAM,KACNsD,SAAS,EACTsL,SAAS,EACT5R,MAAO,GACPyO,iBAAiB,EACjBb,QAAS,OAiBEiE,GAfK,WAAmC,IAAlC5V,EAAiC,uDAAzBwV,GAAcvB,EAAW,uCAClD,OAAQA,EAAOpQ,MACX,IrBLoB,eqBMhB,OAAO,6BAAI7D,GAAX,IAAkBqK,SAAS,EAAOsL,SAAS,EAAOnD,iBAAiB,IACvE,IrBNuB,kBqBOnB,OAAO,6BAAIxS,GAAX,IAAkB+G,KAAK,gBAAKkN,EAAOlC,SAAU1H,SAAS,EAAMmI,iBAAiB,IACjF,IrBPoB,eqBQhB,OAAO,6BAAIxS,GAAX,IAAkB+G,KAAM,KAAM4O,SAAS,EAAMtL,SAAS,EAAOmI,iBAAiB,EAAOzO,MAAOkQ,EAAOlQ,QACvG,IrBRmB,cqBSf,OAAO,6BAAI/D,GAAX,IAAkB2R,QAASsC,EAAOtC,UACtC,QACI,OAAO3R,ICnBbwV,GAAe,CACjBnL,SAAS,EACT2G,YAAY,EACZ6E,YAAY,EACZrP,SAAU,KACVL,MAAO,KACPjG,GAAI,KACJmG,SAAU,KACVI,SAAU,CACNC,OAAQ,KACRM,gBAAiB,KACjBC,cAAe,OAoBR6O,GAhBM,WAAmC,IAAlC9V,EAAiC,uDAAzBwV,GAAcvB,EAAW,uCACnD,OAAQA,EAAOpQ,MACX,ItBPmB,csBQf,OAAO,6BAAI7D,GAAX,IAAkBqK,SAAS,EAAO2G,YAAY,EAAM6E,YAAY,EAAOpP,SAAU,OACrF,ItBRqB,gBsBSjB,OAAO,6BAAIzG,GAAX,IAAkBqK,SAAS,EAAM2G,YAAY,EAAO6E,YAAY,EAAOrP,SAAUyN,EAAOzN,SAAUL,MAAO8N,EAAO9N,MAAOjG,GAAI+T,EAAO/T,GAAImG,SAAU4N,EAAO5N,SAAUI,SAAUwN,EAAOxN,WACtL,ItBToB,csBUhB,OAAO,6BAAIzG,GAAX,IAAkBqK,SAAS,EAAO2G,YAAY,EAAO6E,YAAY,EAAMpP,SAAU,OACrF,ItBVc,SsBWV,OAAO,6BAAIzG,GAAX,IAAkBqK,SAAS,EAAO2G,YAAY,EAAO6E,YAAY,EAAOrP,SAAU,KAAMtG,GAAI,KAAMmG,SAAU,KAAMF,MAAO,KAAMM,SAAU,OAC7I,ItBTwB,mBsBUpB,OAAO,6BAAIzG,GAAX,IAAkByG,SAAUwN,EAAOxN,WACvC,QACI,OAAOzG,IHZb+V,GAAcC,2BAChB,CACIzS,KAAMmS,GACNnD,KAAMqD,GACN3V,MAAO6V,KAQXP,GAAQU,uBAAYF,GAAaG,2BAAgBC,OAKrDC,IAAShI,OACL,kBAAC,IAAD,CAAUmH,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,IAAMc,WAAP,KACI,kBAAC,GAAD,SAIZC,SAASC,eAAe,SDwFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvP,MAAK,SAAAwP,GACJA,EAAaC,gBAEdvP,OAAM,SAAAtD,GACLuD,QAAQvD,MAAMA,EAAMsO,c","file":"static/js/main.3e8be567.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    const userId = useSelector(state => state.login.id);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <Link to=\"/identity/welcome\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>Home</MenuItem>\n                    </Link>\n                    <Link to=\"/logout\" style={{textDecoration: 'none', outline: \"none\"}}>\n                        <MenuItem style={{color: \"white\"}}>{userId ? \"Logout\" : null}</MenuItem>\n                    </Link>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    }\n}));\n\nconst SelectInput = ({formType, required, id, disabled, label, value, options, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={required}\n            variant=\"outlined\"\n            className={classes.formControl}\n            key={id}\n            disabled={disabled}\n        >\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                required={required}\n                native\n                labelId={id}\n                key={id}\n                id={id}\n                name={id}\n                value={value}\n                label={label}\n                onChange={(event) => handler(event, formType, \"input\")}\n            >\n                <option key={\"none\"} aria-label=\"None\" value=\"\"/>\n                {\n                    options.map(value => {\n                        return <option key={value} value={value}>{value}</option>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Check = ({id, label, value, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={id}\n            label={label}\n            labelPlacement={\"end\"}\n            control={\n                <Checkbox\n                    key={id}\n                    value={value}\n                    checked={value}\n                    onChange={event => handler(event, formType, \"check\")}\n                    id={id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from \"../inputs/Select\";\nimport Check from \"../inputs/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).filter(key => key !== 'isCompleted')\n        .map(key => {\n            form[key]['id'] = key\n            return form[key];\n        });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case \"text\":\n                            return (\n                                <TextField\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    placeholder={field.placeholder}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"number\":\n                            return (\n                                <TextField\n                                    type={\"number\"}\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"select\":\n                            return (\n                                <SelectInput\n                                    required={field.validation.required}\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    helperText={field.helperText}\n                                    disabled={field.disabled}\n                                    value={field.value}\n                                    label={field.label}\n                                    id={field.id}\n                                    key={field.id}\n                                    options={field.options}\n                                    formType={formType}\n                                    handler={handler}\n                                />\n                            );\n                        case \"check\":\n                            return (\n                                <Check\n                                    key={field.id}\n                                    handler={handler}\n                                    formType={formType}\n                                    id={field.id}\n                                    label={field.label}\n                                    value={field.value}\n                                />\n                            )\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        disabled: false,\n        value: \"\",\n        type: \"number\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"+92-3xx-xxxxxxx\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        disabled: true,\n        value: \"Bike\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        disabled: true,\n        type: \"text\",\n        value: \"\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"AKK-2915\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        error: false,\n        helperText: \"\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Do you own a house?\"\n    },\n    houseNumber: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        error: false,\n        helperText: \"\",\n        placeholder: \"XXX-DDDDDD\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"House Number\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import axios from 'axios'\nimport * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {PopulateFormHandler} from \"./Form\";\n\nfunction _handleUserResponse(response, dispatch, token) {\n    const [entityId] = Object.keys(response.data);\n    const [infoObject] = Object.keys(response.data).map(key => response.data[key]);\n    dispatch(LoginSuccess(infoObject.username, token, infoObject.userId, entityId, infoObject.formInfo));\n    const formId = infoObject.formInfo ? infoObject.formInfo.formId : null;\n    if (formId) {\n        dispatch(PopulateFormHandler(formId))\n    }\n}\n\nexport const LoginHandler = (username, password) => {\n    return dispatch => {\n        dispatch(LoginStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, {\n            \"email\": username,\n            \"password\": password\n        })\n            .then(response => {\n                const token = response.data.idToken;\n                const userId = response.data.localId;\n                const expiryTime = response.data.expiresIn;\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n                localStorage.setItem('expiryTime', expiryTime);\n                RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${response.data.localId}\"`)\n                    .then(response => _handleUserResponse(response, dispatch, token))\n                    .catch(error => {\n                        console.log(error);\n                        console.log(error);\n                    });\n            })\n            .catch(error => {\n                dispatch(LoginError())\n                console.log(error);\n            });\n    }\n}\n\nexport const TryLoginHandler = () => {\n    return dispatch => {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('token');\n        if (userId && token) {\n            RequestResolver.get(`users.json?orderBy=\"userId\"&equalTo=\"${userId}\"`)\n                .then(response => _handleUserResponse(response, dispatch, token))\n                .catch(error => {\n                    console.log(error);\n                    dispatch(LoginError());\n                });\n        }\n    }\n}\n\nconst LoginStart = () => {\n    return {\n        type: actionTypes.LOGIN_START\n    }\n}\n\nconst LoginSuccess = (username, token, id, entityId, formInfo) => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        username: username,\n        token: token,\n        id: id,\n        entityId: entityId,\n        formInfo: formInfo\n    }\n}\n\nexport const UpdateUserInfo = (formInfo) => {\n    return {\n        type: actionTypes.UPDATE_USER_INFO,\n        formInfo: formInfo\n    }\n}\n\nconst LoginError = () => {\n    return {\n        type: actionTypes.LOGIN_ERROR,\n    }\n}\n\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const REMOVE_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\nexport const POPULATE_FORM = \"POPULATE_FORM\";\n\n\nexport const SIGNUP = \"SIGNUP\";\nexport const SIGNUP_START = \"SIGNUP_START\";\nexport const SIGNUP_FINISHED = \"SIGNUP_FINISHED\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR  = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGIN_TRY = \"LOGIN_TRY\";\n\nexport const UPDATE_USER_INFO = \"UPDATE_USER_INFO\";\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\nimport {UpdateUserInfo} from \"./Login\";\n\nconst _updateUserInfo = (formId, form, user, dispatch) => {\n    const formInfo = {formId: formId, isFormCompleted: form.isFormCompleted, isFormTouched: true}\n    RequestResolver.put(`/users/${user.entityId}.json`, {\n        userId: user.userId,\n        username: user.username,\n        formInfo: formInfo\n    })\n        .then(() => {\n            dispatch(UpdateUserInfo(formInfo))\n        }).catch(error => {\n        console.log(error);\n    })\n}\n\nexport const updateForm = (form, id, user) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(() => {\n                    _updateUserInfo(id, form, user, dispatch);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    _updateUserInfo(response.data.name, form, user, dispatch);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n\nexport const PopulateFormHandler = (formId) => {\n    return dispatch => {\n        RequestResolver.get(`/identity/${formId}.json`)\n            .then(response => {\n                dispatch(PopulateForm(response.data, formId));\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n}\n\nexport const PopulateForm = (form, formId) => {\n    return {\n        type: actionTypes.POPULATE_FORM,\n        form: form,\n        formId: formId,\n        isCompleted: form.isFormCompleted\n    }\n}\n","import React, {useState} from \"react\";\nimport {Container, Grid, Typography} from \"@material-ui/core\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\n\n\nconst FormPreview = ({form}) => {\n\n    const [identityForm, ] = useState(IDENTITY_FORM);\n\n    return (\n        <>\n            <CssBaseline/>\n            <Container maxWidth=\"sm\">\n                {\n                    Object.keys(form).map(key => {\n                        const subForm = form[key];\n                        return (\n                            <>\n                                <h1>{key.replace(\"_\", \" \")}</h1>\n                                <Grid container>\n                                    {\n                                        Object.keys(subForm).map(subKey => {\n                                            return (\n                                                <>\n                                                    <Grid container spacing={4} alignItems=\"center\">\n                                                        <Grid item style={{flexGrow: 1}}>\n                                                            <Typography>\n                                                                {identityForm[key][subKey] ? identityForm[key][subKey].label : null}\n                                                            </Typography>\n                                                        </Grid>\n                                                        <Grid item style={{flexGrow: 1}}>\n                                                            {form[key][subKey]}\n                                                        </Grid>\n                                                    </Grid>\n                                                </>\n                                            )\n                                        })\n                                    }\n                                </Grid>\n                            </>\n                        )\n                    })\n                }\n            </Container>\n        </>\n    );\n}\n\nexport default FormPreview;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormPreview from \"../preview/FormPreview\";\n\nconst DialogView = ({open, modalHandler, form, saveFormHandler}) => {\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n        if (open) {\n            const { current: descriptionElement } = descriptionElementRef;\n            if (descriptionElement !== null) {\n                descriptionElement.focus();\n            }\n        }\n    }, [open]);\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={modalHandler}\n                scroll={'paper'}\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">Form Preview</DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        ref={descriptionElementRef}\n                        tabIndex={-1}\n                    >\n                        <FormPreview form={form} />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={modalHandler} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={saveFormHandler} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default DialogView;\n","import React, {createContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nconst defaultValue = {\n    username: null,\n    userId: null,\n    isLogin: false,\n    entityId: null\n}\n\nexport const UserContext = createContext(defaultValue);\n\nconst UserProvider = (props) => {\n\n    const username = useSelector(state => state.login.username);\n    const userId = useSelector(state => state.login.id);\n    const isLogin = useSelector(state => state.login.isLogin);\n    const entityId = useSelector(state => state.login.entityId);\n\n    const newUser = {\n        username: username,\n        userId: userId,\n        isLogin: isLogin,\n        entityId: entityId\n    }\n\n    return (\n        <UserContext.Provider value={newUser}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserProvider;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"../../store/actions/Form\";\nimport DialogView from \"../../components/modal/DialogView\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {Redirect} from \"react-router\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    },\n    stepProgress: {\n        color: \"red\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const [isSubFormComplete, setSubFormComplete] = useState(false);\n    const steps = getSteps();\n\n    const user = useContext(UserContext);\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id, user) => dispatch(updateForm(info, id, user)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const form = useSelector(state => state.form.form);\n    const isFormComplete = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null)\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n\n\n    useEffect(() => {\n        clearFormData();\n        if (formId !== null) {\n            const newIdentityForm = _.clone(identityForm);\n            for (let key in newIdentityForm) {\n                const subForm = newIdentityForm[key];\n                const subRemoteForm = form[key];\n                for (let field in subRemoteForm) {\n                    if (field === 'isCompleted') continue;\n                    if (subRemoteForm.hasOwnProperty(field)) {\n                        if (subRemoteForm.isCompleted) {\n                            setSubFormComplete(true);\n                            subForm[field].value = subRemoteForm[field];\n                            subForm[field].validation.isValid = true;\n                            subForm[field].validation.isTouched = true;\n                        }\n                    }\n                }\n            }\n            setIdentityForm(newIdentityForm);\n            setNextButtonEnable(formTypes[0]);\n        }\n\n    }, []);\n\n    function getFormData() {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            const subFormTypes = formTypes.slice(0, formType.step + 1).map(value => value.value);\n            if (subFormTypes.includes(key)) {\n                info['isCompleted'] = isSubFormComplete;\n            }\n            for (let subKey in subForm) {\n                if (subForm.hasOwnProperty(subKey)) {\n                    const value = subForm[subKey];\n                    if (!value.disabled) {\n                        info[subKey] = value['value'];\n                    }\n                }\n            }\n            formData[key] = info;\n        }\n        return formData;\n    }\n\n    const clearFormData = () => {\n        const newIdentityForm = _.clone(identityForm);\n        for (let key in newIdentityForm) {\n            const subForm = newIdentityForm[key];\n            if (subForm === IDENTITY_FORM.PROFESSIONAL_INFO || subForm === IDENTITY_FORM.EXCISE_INFO || subForm === IDENTITY_FORM.RESIDENT_INFO) {\n                for (let key in subForm) {\n                    if (key === 'isCompleted') continue;\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        if (field.type === 'check') {\n                            field.value = false\n                        } else {\n                            field.disabled = true;\n                            field.value = \"\";\n                            field.validation.isValid = false;\n                            field.validation.isTouched = false;\n                        }\n                    }\n                }\n            } else {\n                for (let key in subForm) {\n                    if (subForm.hasOwnProperty(key)) {\n                        const field = subForm[key];\n                        field.value = \"\";\n                        field.validation.isValid = false;\n                        field.validation.isTouched = false;\n                    }\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const handleSaveForm = () => {\n        setModalOpen(false);\n        const formData = getFormData();\n        formData['isFormCompleted'] = true;\n        submitFormInfo(formData, formId, user);\n        setFormType(formTypes[0]);\n        setNextButtonDisable(true);\n        clearFormData();\n    }\n\n    const handleNext = () => {\n        const formData = getFormData();\n        formData['isFormCompleted'] = false;\n        submitFormInfo(formData, formId, user);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n\n    const handleReset = () => {\n        setFormType(formTypes[0]);\n    };\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id;\n        if (fieldName === undefined) {\n            fieldName = event.target.name;\n        }\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            if (event.target.checked) {\n                toggleInputsDisabled(formType, false);\n            } else {\n                toggleInputsDisabled(formType, true);\n            }\n        } else if (inputType === \"select\") {\n            console.log(inputType);\n        } else {\n            const field = subForm[fieldName];\n            field.helperText = '';\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n\n            let pattern;\n            let validation = field.validation;\n            field.helperText = '';\n            let _isValid;\n            switch (field.id) {\n                case 'firstName':\n                    pattern = /^[A-z]{3,8}$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 8 and less than 3 Alphabets\" : \"\";\n                    break;\n                case 'middleName':\n                    pattern = /^[A-z]?[A-z]?[A-z]?[A-z]?$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 4\" : \"\";\n                    break;\n                case 'lastName':\n                    pattern = /^[A-z]{2,8}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Digits/Space Allowed. Not more than 8 and less than 2 Alphabets\" : \"\";\n                    break;\n                case 'age':\n                    pattern = /^[1-9][0-9]?$/g\n                    _isValid = pattern.test(field.value)\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Please Enter Age between 1 and 99\" : \"\";\n                    break;\n                case 'mobileNumber':\n                    pattern = /^[+][9][2][-][3][0-4][0-9][-][0-9]{7}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Mobile Number should be in this pattern +92-3xx-xxxxxx\" : \"\";\n                    break;\n                case 'metricMarks':\n                    pattern = /^[1-9][0-9]?%$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Invalid Input. Should like this xx%\" : \"\";\n                    break;\n                case 'intermediateMarks':\n                    pattern = /^[1-9][0-9]?%$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Invalid Input. Should like this xx%\" : \"\";\n                    break;\n                case 'bachelorCGPA':\n                    pattern = /^[1-9]+$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Select CGPA\" : \"\";\n                    break;\n                case 'companyName':\n                    pattern = /^[A-z]{3,15}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Space is allowed. Range [3, 15]\" : \"\";\n                    break;\n                case 'designationName':\n                    pattern = /^[A-z]{3,15}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"No Space is allowed. Range [3, 15]\" : \"\";\n                    break;\n                case 'type':\n                    pattern = /^[A-z]+$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Select Type\" : \"\";\n                    break;\n                case 'plateNumber':\n                    pattern = /^[A-Z]{3}-[0-9]{4}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Not a valid plate number. Format should be like AKK-2915\" : \"\";\n                    break;\n                case 'houseNumber':\n                    pattern = /^[A-Z]{3}-[0-9]{6}$/g\n                    _isValid = pattern.test(field.value);\n                    validation.isValid = _isValid;\n                    field.helperText = !_isValid ? \"Not a valid plate number. Format should be like JND-233232\" : \"\";\n                    break;\n                default:\n            }\n        }\n        //validation checking of whole subform\n        if (isValid(subForm)) {\n            setSubFormComplete(true);\n            setNextButtonDisable(false);\n        } else {\n            setSubFormComplete(false);\n            setNextButtonDisable(true)\n        }\n        //validation checking end\n        setIdentityForm(newIdentityForm);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (key === 'isCompleted') continue;\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                if (!field.disabled && !field.validation.isValid) {\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n    if (isFormComplete) {\n        return <Redirect to=\"/identity/congrats\" />\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={formType.step} alternativeLabel>\n                {steps.map((label) => (\n                    <Step\n                        key={label}\n                        className={classes.stepProgress}\n                    >\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {formType.step === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>All steps completed</Typography>\n                        <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                        </Paper>\n                        <div>\n                            <Button\n                                disabled={formType.step === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            {\n                                formType.step !== steps.length - 1 ?\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                                            disabled={isNextButtonDisable}>\n                                        Next\n                                    </Button> :\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => setModalOpen(true)}\n                                            disabled={isNextButtonDisable}>\n                                        Preview\n                                    </Button>\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n            <DialogView form={form} open={isModalOpen} modalHandler={() => setModalOpen(false)} saveFormHandler={handleSaveForm}/>\n        </div>\n    );\n}\n\nexport default Forms;\n","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport FormPreview from \"../../components/preview/FormPreview\";\nimport {useSelector} from \"react-redux\";\nimport {Container} from \"@material-ui/core\";\n\n\nconst Preview = () => {\n    const form = useSelector(state => state.form.form);\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper  elevation={3}>\n                <FormPreview form={form}/>\n            </Paper>\n        </Container>\n    );\n}\n\nexport default Preview;\n","import React, {useContext} from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport {UserContext} from \"../../providers/UserProvider\";\n\nconst GuardedRoute = ({component: Component, ...rest}) => {\n    const user = useContext(UserContext);\n    return (\n        <Route {...rest} render={(props) => (\n            user.isLogin === true\n                ? <Component {...props} />\n                : <Redirect to='/identity'/>\n        )}/>\n    )\n}\n\nexport default GuardedRoute;\n","import React, {useCallback} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link, Redirect} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {TryLoginHandler} from \"../../store/actions/Login\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(-20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst Introduction = () => {\n    const classes = useStyles();\n\n    //try login\n    const dispatch = useDispatch();\n    const tryLoginHandler = useCallback(() => dispatch(TryLoginHandler()), [dispatch]);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n    tryLoginHandler();\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\" />\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Card className={classes.root}>\n                            <CardActionArea>\n                                <CardMedia\n                                    className={classes.media}\n\n                                >\n                                    <Avatar className={classes.avatar}>\n                                        <FingerprintIcon/>\n                                    </Avatar>\n\n                                </CardMedia>\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        Identity\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        Identity is the Project initiated by Govt of Pakistan to register yourself from\n                                        anywhere.\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Sign In\n                                    </Button>\n                                </Link>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Introduction;\n","import React from \"react\";\n// import {makeStyles} from \"@material-ui/core/styles\";\nimport Introduction from \"../introduction/Introduction\";\nimport {Grid} from \"@material-ui/core\";\n\n// const useStyles = makeStyles(theme => ({\n//     paper: {\n//         padding: theme.spacing(1),\n//         textAlign: \"center\",\n//         color: theme.palette.text.primary,\n//         background: theme.palette.grey,\n//         height: `calc(100vh -  11vh)`\n//\n//     }\n// }));\n\nconst Home = () => {\n    return (\n        <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: 'calc(100vh - 11vh)' }}\n        >\n\n            <Grid item xs={8} xl={2} sm={5}>\n                <Introduction/>\n            </Grid>\n\n        </Grid>     );\n}\nexport default Home;\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LoginHandler} from \"../../store/actions/Login\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const loginHandler = useCallback((username, password) => dispatch(LoginHandler(username, password)), [dispatch]);\n    const isLoginStart = useSelector(state => state.login.loginStart);\n    const isLogin = useSelector(state => state.login.isLogin);\n\n\n    const login = (event) => {\n        event.preventDefault();\n        loginHandler(username, password);\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={(event) => login(event)}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    {\n                        isLoginStart ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Log In\n                            </Button>\n\n                    }\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/identity/signup\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Don't have an account? Sign Up\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default Login;\n","import RequestResolver from \"../../requestHandler/RequestHandler\";\nimport axios from 'axios';\nimport * as actionTypes from './ActionTypes';\n\nexport const signup = (userData) => {\n    return dispatch => {\n        dispatch(SignUpStart())\n        axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAU_vVv_YXI-3RAqIfCYeRYmhqke8Uv7xw`, userData)\n            .then(response => {\n                RequestResolver.post('/users.json', {username: userData.firstName + ' ' + userData.lastName, userId: response.data.localId})\n                    .then(() => {\n                        dispatch(storeToken(response.data.idToken, response.data.expiresIn, response.data.localId))\n                        dispatch(SignUpFinished({...response.data, username: userData.firstName + ' ' + userData.lastName}))\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        dispatch(ErrorInSignup(error.message));\n                    })\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch(ErrorInSignup(error.message));\n            })\n    }\n}\n\nconst storeToken = (token, expiryTime, userId) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('expiryTime', expiryTime);\n    const timeout = setTimeout(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('expiryTime');\n    }, expiryTime * 1000);\n    return {\n        type: actionTypes.SET_TIMEOUT,\n        timeout: timeout\n    }\n}\n\n\nexport const SignUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START,\n        payload: null\n    }\n}\n\nexport const SignUpFinished = (data) => {\n    return {\n        type: actionTypes.SIGNUP_FINISHED,\n        payload: data\n    }\n}\n\nexport const ErrorInSignup = (error) => {\n    return {\n        type: actionTypes.SIGNUP_ERROR,\n        payload: null,\n        error: error\n    }\n}\n","import React, {useCallback, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport MaterialLink from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {Link, Redirect} from \"react-router-dom\";\nimport _ from 'lodash';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {signup} from \"../../store/actions/SignUp\";\n\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <MaterialLink color=\"inherit\" href=\"https://github.com/UbaidurRehman1/identity\">\n                Identity\n            </MaterialLink>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const handleSignup = useCallback((userData) => dispatch(signup(userData)), [dispatch]);\n\n    const isLogin = useSelector(state => state.auth.isLogin);\n    const isSignUpLoading = useSelector(state => state.auth.isSignUpLoading);\n\n\n    const SIGNUP_FORM = {\n        firstName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            autoComplete: \"fname\",\n            name: \"firstName\",\n            variant: \"outlined\",\n            fullWidth: true,\n            id: \"firstName\",\n            key: \"firstName\",\n            autoFocus: true,\n            required: true,\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('firstName', event),\n            validation: {\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"First Name\"\n        },\n        lastName: {\n            disabled: false,\n            value: \"\",\n            type: \"text\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            ket: \"lastName\",\n            name: \"lastName\",\n            autoComplete: \"lname\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('lastName', event),\n            validation: {\n                required: true,\n                minLength: 3,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Last Name\"\n        },\n        email: {\n            disabled: false,\n            value: \"\",\n            type: \"email\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            key: \"email\",\n            name: \"email\",\n            autoComplete: \"email\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('email', event),\n            validation: {\n                minLength: 6,\n                maxLength: 255,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Email Address\"\n        },\n        password: {\n            disabled: false,\n            value: \"\",\n            type: \"password\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            id: \"password\",\n            key: \"password\",\n            autoComplete: \"current-password\",\n            error: false,\n            helperText: \"\",\n            onChange: (event) => onChangeHandler('password', event),\n            validation: {\n                minLength: 8,\n                maxLength: 16,\n                isTouched: false,\n                isValid: false\n            },\n            label: \"Password\"\n        }\n    }\n\n    const [form, setForm] = useState(SIGNUP_FORM);\n\n    const onChangeHandler = (fieldId, event) => {\n        const newForm = _.clone(form);\n        newForm[fieldId].validation.isTouched = true;\n        newForm[fieldId].value = event.target.value;\n        if (fieldId === form.firstName.id || fieldId === form.lastName.id) {\n            validateFieldLength(newForm[fieldId])\n        } else if (fieldId === form.email.id) {\n            validateEmail(newForm[fieldId]);\n        } else if (fieldId === form.password.id) {\n            validatePassword(newForm[fieldId]);\n        }\n        setForm(newForm);\n    }\n\n    const validateFieldLength = field => {\n        if (field.validation.isTouched) {\n            if (field.value.length < field.validation.minLength || field.value.length > field.validation.maxLength) {\n                field.validation.isValid = false;\n                field.error = true;\n                field.helperText = 'Min Val: ' + field.validation.minLength + ', Max Val: ' + field.validation.maxLength;\n            } else {\n                field.error = false;\n                field.helperText = '';\n            }\n        }\n    }\n\n    const validateEmail = emailField => {\n        const email = emailField.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isValid = re.test(String(email).toLowerCase());\n        if (!isValid) {\n            emailField.validation.isValid = false;\n            emailField.error = true;\n            emailField.helperText = 'Invalid Email Address';\n        } else {\n            emailField.error = false;\n            emailField.helperText = '';\n        }\n\n    }\n\n    const validatePassword = passwordField => {\n        const pw = passwordField.value;\n        const isValid = /[A-Z]/.test(pw) &&\n            /[a-z]/.test(pw) &&\n            /[0-9]/.test(pw) &&\n            /[^A-Za-z0-9]/.test(pw) &&\n            pw.length > 4;\n        if (!isValid) {\n            passwordField.validation.isValid = false;\n            passwordField.error = true;\n            passwordField.helperText = 'Password should at least contain an upper case letter, a lower case letter, a digit and a special symbol and greater than 4 digits';\n\n        } else {\n            passwordField.error = false;\n            passwordField.helperText = '';\n        }\n\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        const newFormData = _.clone(form);\n        const formData = {};\n        Object.keys(newFormData).map(key => {\n            formData[key] = newFormData[key].value;\n            return null;\n        });\n        handleSignup(formData);\n    }\n\n    if (isLogin) {\n        return <Redirect to=\"/identity/welcome\"/>\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={(event) => signUpHandler(event)}>\n                    <Grid container spacing={2}>\n                        {\n                            Object.keys(form).map(key => {\n                                const field = form[key];\n                                if (field === form.firstName || field === form.lastName) {\n                                    return (\n                                        <Grid item xs={12} sm={6} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                } else {\n                                    return (\n                                        <Grid item xs={12} key={key}>\n                                            <TextField\n                                                {...field}\n                                            />\n                                        </Grid>\n                                    );\n                                }\n                            })\n                        }\n                    </Grid>\n                    {\n                        isSignUpLoading ? <CircularProgress style={{marginTop: '8px'}}/> :\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                            >\n                                Sign Up\n                            </Button>\n                    }\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to=\"/identity/login\" style={{textDecoration: 'none', outline: \"none\"}}>\n                                <Button size=\"small\" color=\"primary\">\n                                    Already have an account? Sign in\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n\nexport default SignUp;\n","import React, {useContext, useEffect, useRef} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {UserContext} from \"../../providers/UserProvider\";\nimport {useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        maxWidth: 345\n    }\n}));\n\nconst Welcome = () => {\n\n    const user = useContext(UserContext);\n\n    const formId = useSelector(state => state.login.formInfo ? state.login.formInfo.formId : null);\n    const isFormCompleted = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormCompleted : null);\n    const isFormTouched = useSelector(state => state.login.formInfo ? state.login.formInfo.isFormTouched : null);\n\n    const formInfoView = useRef();\n\n    useEffect(() => {\n        let info = null;\n        if (formId == null) {\n            info = \"Welcome in Identity. Click below to start filling your Identity form\";\n        } else if (!isFormCompleted) {\n            info = \"You have not completed your Identity form yet. Kindly complete your form as soon as possible\";\n        } else if (isFormCompleted) {\n            info = \"Your Identity form is completed\";\n        }\n\n        formInfoView.current.innerHTML = info;\n    }, [formId, isFormCompleted, isFormTouched]);\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Grid container spacing={2} justify={\"flex-start\"} style={{marginTop: '8px'}}>\n                    <Grid item>\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        U\n                                    </Avatar>\n                                }\n                                action={\n                                    <IconButton aria-label=\"settings\">\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                }\n                                title= \"Welcome Back\"\n                                subheader={user.username}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/paella.jpg\"\n                                title=\"Paella dish\"\n                            />\n                            <CardContent>\n                                <Typography ref={formInfoView} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing>\n                                <IconButton aria-label=\"add to favorites\">\n                                    <FavoriteIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"share\">\n                                    <ShareIcon />\n                                </IconButton>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} justify={\"flex-start\"}>\n                    <Grid item>\n                        <Link to=\"/identity/create\" style={{textDecoration: 'none', outline: \"none\"}}>\n                            <Button size=\"small\" color=\"primary\">\n                                Click here to fill your identity form\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Welcome;\n","import * as actionTypes from '../actions/ActionTypes';\n\nconst LogoutHandler = () => {\n    return dispatch => {\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"token\");\n        setTimeout(() => {\n            dispatch(_removeForm());\n            dispatch(_logoutHandler())\n        }, 2000);\n    }\n\n}\n\nconst _logoutHandler = () => {\n    return {\n        type: actionTypes.LOGOUT\n    }\n}\n\nconst _removeForm = () => {\n    return {\n        type: actionTypes.REMOVE_FORM\n    }\n}\n\nexport default LogoutHandler;\n","import React, {useCallback, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport LogoutHandler from \"../../store/actions/LogoutHandler\";\n\nconst Logout = (props) => {\n    const dispatch = useDispatch();\n    const logout = useCallback(() => dispatch(LogoutHandler()), [dispatch]);\n\n    const logoutHandler  = () => {\n        logout();\n    }\n\n    const userId = useSelector(state => state.login.id);\n\n    useEffect(() => {\n        logoutHandler();\n       if (!userId) {\n           props.location.pathname = \"/identity\"\n       }\n    });\n\n    return (\n        <p>You will be redirect to Introduction Page</p>\n    );\n}\n\nexport default Logout;\n","import React from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: \"auto\",\n        marginTop: \"5rem\"\n    }\n});\n\nconst Congrats = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Congrats!\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    You have been registered in Identity. You will received your Identity Number through by SMS soon.\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Link to=\"/identity/preview\" style={{textDecoration: 'none', outline: \"none\"}}>\n                    <Button size=\"small\" color=\"primary\">\n                        View Your Form\n                    </Button>\n                </Link>\n                <Link to=\"/identity/create\" style={{textDecoration: 'none', outline: \"none\"}}>\n                    <Button size=\"small\" color=\"primary\">\n                        Edit Your Form\n                    </Button>\n                </Link>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Congrats;\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport Preview from \"./containers/preview/Preview\";\nimport UserProvider from \"./providers/UserProvider\";\nimport GuardedRoute from \"./hoc/gaurdedRoute/GaurdedRoute\";\nimport Home from \"./components/home/Home\";\nimport Login from \"./components/login/Login\";\nimport SignUp from \"./components/signup/SignUp\";\nimport Welcome from \"./components/welcome/Welcome\";\nimport Logout from \"./components/logout/Logout\";\nimport Congrats from \"./components/congrats/Congrats\";\n\nfunction App() {\n\n    let routes = (\n        <Switch>\n            <Suspense fallback={<div>Loading ....</div>}>\n                <GuardedRoute path=\"/identity/create\" exact component={Forms} />\n                <GuardedRoute path=\"/identity/preview\" exact component={Preview} />\n                <GuardedRoute path=\"/identity/welcome\" exact component={Welcome} />\n                <GuardedRoute path={\"/logout\"} exact component={Logout} />\n                <GuardedRoute path=\"/identity/congrats\" component={Congrats}/>\n                <Route path=\"/identity/signup\" exact component={SignUp}/>\n                <Route path=\"/identity/login\" exact component={Login}/>\n                <Route path=\"/identity\" exact component={Home}/>\n                <Route render={() => <Redirect to=\"/identity\" />}/>\n                {/*<Redirect to=\"/identity/preview\" />*/}\n            </Suspense>\n        </Switch>\n    );\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <UserProvider>\n                    {routes}\n                </UserProvider>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport AuthReducer from \"./store/reducers/AuthReducer\";\nimport LoginReducer from \"./store/reducers/LoginReducer\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer,\n        auth: AuthReducer,\n        login: LoginReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.REMOVE_FORM:\n            return {...state, formId: null, form: null, isCompleted: false, error: null, isUpdating: false}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        case actionTypes.POPULATE_FORM:\n            return {...state, form: action.form, formId: action.formId, isCompleted: action.isCompleted}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    user: null,\n    isLogin: false,\n    isError: false,\n    error: \"\",\n    isSignUpLoading: false,\n    timeout: null\n};\nconst AuthReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_START:\n            return {...state, isLogin: false, isError: false, isSignUpLoading: true};\n        case actionTypes.SIGNUP_FINISHED:\n            return {...state, user: {...action.payload}, isLogin: true, isSignUpLoading: false}\n        case actionTypes.SIGNUP_ERROR:\n            return {...state, user: null, isError: true, isLogin: false, isSignUpLoading: false, error: action.error}\n        case actionTypes.SET_TIMEOUT:\n            return {...state, timeout: action.timeout}\n        default:\n            return state;\n    }\n}\n\nexport default AuthReducer;\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    isLogin: false,\n    loginStart: false,\n    loginError: false,\n    username: null,\n    token: null,\n    id: null,\n    entityId: null,\n    formInfo: {\n        formId: null,\n        isFormCompleted: null,\n        isFormTouched: null\n    }\n}\n\nconst LoginReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_START:\n            return {...state, isLogin: false, loginStart: true, loginError: false, formInfo: null}\n        case actionTypes.LOGIN_SUCCESS:\n            return {...state, isLogin: true, loginStart: false, loginError: false, username: action.username, token: action.token, id: action.id, entityId: action.entityId, formInfo: action.formInfo}\n        case actionTypes.LOGIN_ERROR:\n            return {...state, isLogin: false, loginStart: false, loginError: true, formInfo: null}\n        case actionTypes.LOGOUT:\n            return {...state, isLogin: false, loginStart: false, loginError: false, username: null, id: null, entityId: null, token: null, formInfo: null}\n        case actionTypes.UPDATE_USER_INFO:\n            return {...state, formInfo: action.formInfo}\n        default:\n            return state;\n    }\n}\nexport default LoginReducer;\n"],"sourceRoot":""}