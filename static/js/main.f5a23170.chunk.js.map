{"version":3,"sources":["containers/appBar/AppNavBar.js","hoc/Layout/Layout.js","components/inputs/Select.js","components/inputs/Check.js","components/form/Form.js","shared/forms/Forms.js","shared/forms/FormTypes.js","requestHandler/RequestHandler.js","store/actions/Form.js","store/actions/ActionTypes.js","containers/Forms/Forms.js","App.js","serviceWorker.js","index.js","store/reducers/NextFormReducer.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","maxWidth","fontSize","textAlign","authItem","toolbar","AppNavBar","classes","className","AppBar","position","Toolbar","Typography","MenuItem","Layout","props","Fragment","children","formControl","margin","minWidth","SelectInput","formType","required","id","disabled","label","value","options","handler","FormControl","variant","key","InputLabel","Select","labelId","name","onChange","event","aria-label","map","option","Check","FormControlLabel","labelPlacement","control","Checkbox","checked","alignItems","justifyContent","display","flexDirection","marginTop","width","selectEmpty","Form","form","fields","Object","keys","field","type","TextField","error","validation","isTouched","isValid","hidden","PERSONAL_INFO","firstName","minLength","maxLength","middleName","lastName","age","mobileNumber","EDUCATIONAL_INFO","metricMarks","intermediateMarks","bachelorCGPA","PROFESSIONAL_INFO","status","companyName","designationName","EXCISE_INFO","isVehicle","plateNumber","RESIDENT_INFO","isHouse","houseNumber","formTypes","step","RequestResolver","axios","create","baseURL","nextForm","info","formId","formUpdating","backButton","instructions","marginBottom","paper","padding","marginLeft","height","stepProgress","color","Forms","React","useState","setFormType","steps","filter","dispatch","useDispatch","submitFormInfo","useCallback","put","then","response","console","log","catch","post","data","updateForm","useSelector","state","isFormUpdating","isUpdating","IDENTITY_FORM","identityForm","setIdentityForm","isNextButtonDisable","setNextButtonDisable","setNextButtonEnable","subForm","_","clone","toggleInputsDisabled","isDisable","newIdentityForm","hasOwnProperty","checkValidation","String","length","Stepper","activeStep","alternativeLabel","Step","StepLabel","Button","onClick","Paper","elevation","inputType","fieldName","target","undefined","prevActiveStep","formData","App","Boolean","window","location","hostname","match","store","initialState","isCompleted","NextFormReducer","action","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5a23170.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {MenuItem, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        maxWidth: 160,\n        fontSize: 30,\n        marginRight: 30,\n        textAlign: \"center\",\n    },\n    authItem: {\n    },\n    toolbar: {\n    }\n}));\n\nexport default function AppNavBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.toolbar}>\n                    <Typography className={classes.title}>Identity</Typography>\n                    <MenuItem>Home</MenuItem>\n                    <MenuItem>Preview Form</MenuItem>\n                    <MenuItem className={classes.authItem}>Auth</MenuItem>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport AppNavBar from \"../../containers/appBar/AppNavBar\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <AppNavBar>\n\n            </AppNavBar>\n            <main>\n                {props.children}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport {FormControl} from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    }\n}));\n\nconst SelectInput = ({formType, required, id, disabled, label, value, options, handler}) => {\n    const classes = useStyles();\n    return (\n        <FormControl\n            required={required}\n            variant=\"outlined\"\n            className={classes.formControl}\n            key={id}\n            disabled={disabled}\n        >\n            <InputLabel id={id}>{label}</InputLabel>\n            <Select\n                labelId={id}\n                key={id}\n                id={id}\n                name={id}\n                value={value}\n                label={label}\n                onChange={(event) => handler(event, formType, \"input\")}\n            >\n                <MenuItem key={\"none\"} aria-label=\"None\" value=\"\">None</MenuItem>\n                {\n                    options.map(option => {\n                        return <MenuItem key={option} value={option}>{option}</MenuItem>\n                    })\n                }\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Check = ({id, label, value, formType, handler}) => {\n    return (\n        <FormControlLabel\n            key={id}\n            label={label}\n            labelPlacement={\"end\"}\n            control={\n                <Checkbox\n                    key={id}\n                    value={value}\n                    checked={value}\n                    onChange={event => handler(event, formType, \"check\")}\n                    id={id}\n                />\n            }\n        />\n    );\n}\n\nexport default Check;\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SelectInput from \"../inputs/Select\";\nimport Check from \"../inputs/Check\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(5),\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '80%',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        textAlign: \"left\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n\nconst Form = ({form, handler, formType}) => {\n    const classes = useStyles();\n\n    const fields = Object.keys(form).map(key => {\n        form[key]['id'] = key\n        return form[key];\n    });\n\n    return (\n        <form className={classes.root}>\n            {\n                fields.map(field => {\n                    switch (field.type) {\n                        case \"text\":\n                            return (\n                                <TextField\n                                    error={field.validation.isTouched && !field.validation.isValid}\n                                    disabled={field.disabled}\n                                    hidden={field.hidden}\n                                    key={field.id}\n                                    required={field.validation.required}\n                                    id={field.id}\n                                    label={field.label}\n                                    variant=\"outlined\"\n                                    value={field.value}\n                                    onChange={(event) => handler(event, formType, \"input\")}/>\n                            );\n                        case \"select\":\n                            return (\n                                <SelectInput\n                                    required={field.validation.required}\n                                    disabled={field.disabled}\n                                    value={field.value}\n                                    label={field.label}\n                                    id={field.id}\n                                    options={field.options}\n                                    formType={formType}\n                                    handler={handler}\n                                />\n                            );\n                        case \"check\":\n                            return (\n                                <Check\n                                    handler={handler}\n                                    formType={formType}\n                                    id={field.id}\n                                    label={field.label}\n                                    value={field.value}\n                                />\n                            )\n                        default:\n                            return null;\n                    }\n                })\n            }\n        </form>\n    );\n}\n\nexport default Form;\n","\n\nconst PERSONAL_INFO = {\n    firstName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"First Name\"\n    },\n    middleName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: false,\n            minLength: 0,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Middle Name\"\n    },\n    lastName: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Last Name\"\n    },\n    age: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 2,\n            maxLength: 2,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Age\"\n    },\n    mobileNumber: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 11,\n            maxLength: 16,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Mobile Number\"\n    }\n}\n\nconst EDUCATIONAL_INFO = {\n    metricMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Metric\"\n    },\n    intermediateMarks: {\n        disabled: false,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 3,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"Percentage in Intermediate\"\n    },\n    bachelorCGPA: {\n        disabled: false,\n        value: \"\",\n        type: \"select\",\n        options: [1, 2, 3, 4],\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 6,\n            isTouched: false,\n            isValid: false\n\n        },\n        label: \"CGPA in Bachelor \"\n    }\n}\nconst PROFESSIONAL_INFO  = {\n    status: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: true,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"Are You Employed?\"\n    },\n    companyName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Name of Company\"\n    },\n    designationName: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Designation Name\"\n    }\n}\nconst EXCISE_INFO = {\n    isVehicle: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Have you vehicle?\"\n    },\n    type: {\n        disabled: true,\n        value: \"\",\n        type: \"select\",\n        options: [\"Bike\", \"SVM\"],\n        validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 255,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Type\"\n    },\n    plateNumber: {\n        disabled: true,\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: false\n        },\n        label: \"Plate Number\"\n    }\n}\nconst RESIDENT_INFO = {\n    isHouse: {\n        value: false,\n        type: \"check\",\n        validation: {\n            required: false,\n            isValid: true\n        },\n        label: \"Are you own a house?\"\n    },\n    houseNumber: {\n        disabled: true,\n        value: \"\",\n        type: \"text\",\n        validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 10,\n            isTouched: false,\n            isValid: true\n        },\n        label: \"houseNumber\"\n    }\n}\n\nconst form = {\n    PERSONAL_INFO,\n    EDUCATIONAL_INFO,\n    PROFESSIONAL_INFO,\n    EXCISE_INFO,\n    RESIDENT_INFO\n}\n\nexport default form;\n","export const PERSONAL_FORM = {step: 0, label: \"Personal Info\", value: \"PERSONAL_INFO\"}\nexport const EDUCATIONAL_FORM = {step: 1, label: \"Educational Info\", value: \"EDUCATIONAL_INFO\"}\nexport const PROFESSIONAL_FORM = {step: 2, label: \"Professional Info\", value: \"PROFESSIONAL_INFO\"}\nexport const EXCISE_FORM = {step: 3, label: \"Excise Info\", value: \"EXCISE_INFO\"}\nexport const RESIDENT_FORM = {step: 4, label: \"Resident Info\", value: \"RESIDENT_INFO\"}\nexport const PREVIEW = {step: 5, label: \"Preview\", value: \"PREVIEW\"}\nconst formTypes = [PERSONAL_FORM, EDUCATIONAL_FORM, PROFESSIONAL_FORM, EXCISE_FORM, RESIDENT_FORM, PREVIEW];\nexport default formTypes;\n","import axios from 'axios'\nconst RequestResolver = axios.create({\n   baseURL: \"https://react-demo-45a1b.firebaseio.com/\"\n});\n\nexport default RequestResolver;\n","import * as actionTypes from './ActionTypes'\nimport RequestResolver from \"../../requestHandler/RequestHandler\";\n\nexport const updateForm = (form, id) => {\n    return dispatch => {\n        if (id) {\n            dispatch(formUpdating())\n            RequestResolver.put(`/identity/${id}.json`, form)\n                .then(response => {\n                    console.log(response);\n                    dispatch(nextForm(form, id));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n\n        } else {\n            RequestResolver.post(\"/identity.json\", form)\n                .then(response => {\n                    console.log(response);\n                    dispatch(nextForm(form, response.data.name));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }\n}\n\nexport const nextForm = (info, id) => {\n    return {\n        type: actionTypes.NEXT_FORM,\n        info: info,\n        formId: id\n    }\n}\n\nexport const haltForm = (error) => {\n    return {\n        type: actionTypes.HALT_FORM,\n        info: null,\n        error: error\n    }\n}\n\nexport const formUpdating = () => {\n    return {\n        type: actionTypes.FORM_UPDATING,\n    }\n}\n","export const NEXT_FORM = \"NEXT_FORM\";\nexport const BACK_FORM = \"BACK_FORM\";\nexport const HALT_FORM = \"HALT_FORM\";\nexport const FORM_UPDATING = \"FORM_UPDATING\";\n","import React, {useCallback, useState} from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Form from \"../../components/form/Form\";\nimport Paper from '@material-ui/core/Paper';\nimport IDENTITY_FORM from \"../../shared/forms/Forms\";\nimport formTypes from \"../../shared/forms/FormTypes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport _ from 'lodash'\nimport {updateForm} from \"../../store/actions/Form\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    backButton: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        width: \"80%\",\n        height: \"500px\"\n    },\n    stepProgress: {\n        color: \"red\"\n    }\n}));\n\n\nfunction getSteps() {\n    return formTypes.filter(type => type.step !== 5).map(type => type.label);\n}\n\n\nconst Forms = () => {\n    const classes = useStyles();\n    const [formType, setFormType] = React.useState(formTypes[0]);\n    const steps = getSteps();\n\n    const dispatch = useDispatch();\n    const submitFormInfo = useCallback((info, id) => dispatch(updateForm(info, id)), [dispatch]);\n    const formId = useSelector(state => state.form.formId);\n    const isFormUpdating = useSelector(state => state.form.isUpdating);\n\n    const [identityForm, setIdentityForm] = useState(IDENTITY_FORM);\n    const [isNextButtonDisable, setNextButtonDisable] = useState(true);\n\n    const handleNext = () => {\n        const form = _.clone(identityForm);\n        const formData = {};\n        for (let key in form) {\n            const subForm = form[key];\n            let info = {};\n            for (let key in subForm) {\n                if (subForm.hasOwnProperty(key)) {\n                    const value = subForm[key];\n                    info[key] = value['value'];\n                }\n            }\n            formData[key] = info;\n        }\n        console.log(\"formId --> \", formId);\n        console.log(\"isForm Updating --> \", isFormUpdating);\n        submitFormInfo(formData, formId);\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step + 1]);\n            return formTypes[prevActiveStep.step + 1]\n        });\n    };\n\n    const handleBack = () => {\n        setFormType((prevActiveStep) => {\n            setNextButtonEnable(formTypes[prevActiveStep.step - 1]);\n            return formTypes[prevActiveStep.step - 1]\n        });\n    };\n\n    const setNextButtonEnable = (formType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true);\n        }\n    }\n\n\n    const handleReset = () => {\n        setFormType(formTypes[0]);\n    };\n\n    const toggleInputsDisabled = (formType, isDisable) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        for (let field in subForm) {\n            if (subForm.hasOwnProperty(field)) {\n                if (subForm[field].type === 'text' || subForm[field].type === 'select') {\n                    subForm[field].disabled = isDisable;\n                }\n            }\n        }\n        console.log('New Identity Form: => ', newIdentityForm);\n        setIdentityForm(newIdentityForm);\n    }\n\n    const changeHandler = (event, formType, inputType) => {\n        const newIdentityForm = _.clone(identityForm);\n        const subForm = newIdentityForm[formType.value];\n        let fieldName = event.target.id;\n        if (fieldName === undefined) {\n            fieldName = event.target.name;\n        }\n        if (inputType === \"check\") {\n            subForm[fieldName].value = event.target.checked;\n            if (event.target.checked) {\n                toggleInputsDisabled(formType, false);\n            } else {\n                toggleInputsDisabled(formType, true);\n            }\n        } else {\n            const field = subForm[fieldName];\n            field.value = event.target.value;\n            field.validation.isTouched = true;\n            field.validation.isValid = checkValidation(field.value, field.validation);\n        }\n        //validation checking\n        if (isValid(subForm)) {\n            setNextButtonDisable(false);\n        } else {\n            setNextButtonDisable(true)\n        }\n        //validation checking end\n        setIdentityForm(newIdentityForm);\n    }\n\n    const checkValidation = (value, validation) => {\n        value = String(value);\n        return (value.length >= validation.minLength && value.length <= validation.maxLength);\n    }\n\n    const isValid = (subForm) => {\n        for (let key in subForm) {\n            if (subForm.hasOwnProperty(key)) {\n                const field = subForm[key];\n                console.log(\"Field: -> \", field);\n                if (!field.disabled && !field.validation.isValid) {\n                    console.log('Form is not valid -> returning false');\n                    return false;\n                }\n            }\n        }\n        console.log(\"Form is Valid\");\n        return true;\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={formType.step} alternativeLabel>\n                {steps.map((label) => (\n                    <Step\n                        key={label}\n                        className={classes.stepProgress}\n                    >\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div>\n                {formType.step === steps.length ? (\n                    <div>\n                        <Typography className={classes.instructions}>All steps completed</Typography>\n                        <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                ) : (\n                    <div>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Form form={identityForm[formType.value]} formType={formType} handler={changeHandler}/>\n                        </Paper>\n                        <div>\n                            <Button\n                                disabled={formType.step === 0}\n                                onClick={handleBack}\n                                className={classes.backButton}\n                            >\n                                Back\n                            </Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={handleNext}\n                                    disabled={isNextButtonDisable}>\n                                {formType.step === steps.length - 1 ? 'Finish' : 'Next'}\n                            </Button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Forms;\n","import React from 'react';\nimport './App.css';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Forms from \"./containers/Forms/Forms\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Forms>\n\n                </Forms>\n            </Layout>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport NextFormReducer from \"./store/reducers/NextFormReducer\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {Provider} from \"react-redux\";\n\n\nconst env = process.env.NODE_ENV === 'development'\n\nconst rootReducer = combineReducers(\n    {\n        form: NextFormReducer\n    }\n)\n\nlet store;\nif (env) {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n} else {\n    store = createStore(rootReducer, applyMiddleware(thunk));\n}\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import * as actionTypes from '../actions/ActionTypes'\n\nconst initialState = {\n    formId: null,\n    form: null,\n    isCompleted: false,\n    error: null,\n    isUpdating: false\n}\n\nconst NextFormReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NEXT_FORM:\n            return {...state, form: action.info, formId: action.formId, isUpdating: false}\n        case actionTypes.HALT_FORM:\n            return {...state, error: action.error}\n        case actionTypes.FORM_UPDATING:\n            return {...state, isUpdating: true}\n        default:\n            return state;\n    }\n}\n\nexport default NextFormReducer;\n"],"sourceRoot":""}